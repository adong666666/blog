<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>汇编指令摘录</title>
    <link href="/posts/6040.html"/>
    <url>/posts/6040.html</url>
    
    <content type="html"><![CDATA[<h1 id="汇编指令摘录"><a href="#汇编指令摘录" class="headerlink" title="汇编指令摘录"></a>汇编指令摘录</h1><p>========================<br>汇编指令记录一下<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20230212%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E6%91%98%E5%BD%95.png"></p>]]></content>
    
    
    <categories>
      
      <category>汇编语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>汇编语言</tag>
      
      <tag>微机原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TCP的三次握手和四次挥手摘录</title>
    <link href="/posts/37053.html"/>
    <url>/posts/37053.html</url>
    
    <content type="html"><![CDATA[<h1 id="TCP的三次握手和四次挥手摘录"><a href="#TCP的三次握手和四次挥手摘录" class="headerlink" title="TCP的三次握手和四次挥手摘录"></a>TCP的三次握手和四次挥手摘录</h1><p>========================<br>我觉得图解颇有意思，便摘录了下来<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20230201TCP%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E6%91%98%E5%BD%95.png"></p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
      <tag>TCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>诗词摘选——青玉案·元夕</title>
    <link href="/posts/61735.html"/>
    <url>/posts/61735.html</url>
    
    <content type="html"><![CDATA[<h1 id="诗词摘选——青玉案·元夕"><a href="#诗词摘选——青玉案·元夕" class="headerlink" title="诗词摘选——青玉案·元夕"></a>诗词摘选——青玉案·元夕</h1><p>========================</p><p>青玉案·元夕<br>作者：辛弃疾</p><p>东风夜放花千树。更吹落、星如雨。<br>宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。<br>蛾儿雪柳黄金缕。笑语盈盈暗香去。<br>众里寻他千百度。蓦然回首，那人却在，灯火阑珊处。</p>]]></content>
    
    
    <categories>
      
      <category>诗词</category>
      
    </categories>
    
    
    <tags>
      
      <tag>摘选</tag>
      
      <tag>诗词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>诗文摘选——将进酒</title>
    <link href="/posts/32416.html"/>
    <url>/posts/32416.html</url>
    
    <content type="html"><![CDATA[<h1 id="诗文摘选——将进酒"><a href="#诗文摘选——将进酒" class="headerlink" title="诗文摘选——将进酒"></a>诗文摘选——将进酒</h1><p>========================</p><p>将进酒<br>作者：李白</p><p>君不见黄河之水天上来，奔流到海不复回。<br>君不见高堂明镜悲白发，朝如青丝暮成雪。<br>人生得意须尽欢，莫使金樽空对月。<br>天生我材必有用，千金散尽还复来。<br>烹羊宰牛且为乐，会须一饮三百杯。<br>岑夫子，丹丘生，将进酒，杯莫停。<br>与君歌一曲，请君为我倾耳听。<br>钟鼓馔玉不足贵，但愿长醉不愿醒。<br>古来圣贤皆寂寞，惟有饮者留其名。<br>陈王昔时宴平乐，斗酒十千恣欢谑。<br>主人何为言少钱，径须沽取对君酌。<br>五花马、千金裘，呼儿将出换美酒，与尔同销万古愁。</p>]]></content>
    
    
    <categories>
      
      <category>诗歌</category>
      
    </categories>
    
    
    <tags>
      
      <tag>诗歌</tag>
      
      <tag>摘选</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>诗文摘选——春江花月夜</title>
    <link href="/posts/15460.html"/>
    <url>/posts/15460.html</url>
    
    <content type="html"><![CDATA[<h1 id="诗文摘选——春江花月夜"><a href="#诗文摘选——春江花月夜" class="headerlink" title="诗文摘选——春江花月夜"></a>诗文摘选——春江花月夜</h1><p>========================</p><p>春江花月夜<br>作者：张若虚</p><p>春江潮水连海平，海上明月共潮生。<br>滟滟随波千万里，何处春江无月明！<br>江流宛转绕芳甸，月照花林皆似霰；<br>空里流霜不觉飞，汀上白沙看不见。<br>江天一色无纤尘，皎皎空中孤月轮。<br>江畔何人初见月？江月何年初照人？<br>人生代代无穷已，江月年年望相似。<br>不知江月待何人，但见长江送流水。<br>白云一片去悠悠，青枫浦上不胜愁。<br>谁家今夜扁舟子？何处相思明月楼？<br>可怜楼上月裴回，应照离人妆镜台。<br>玉户帘中卷不去，捣衣砧上拂还来。<br>此时相望不相闻，愿逐月华流照君。<br>鸿雁长飞光不度，鱼龙潜跃水成文。<br>昨夜闲潭梦落花，可怜春半不还家。<br>江水流春去欲尽，江潭落月复西斜。<br>斜月沉沉藏海雾，碣石潇湘无限路。<br>不知乘月几人归，落月摇情满江树。</p>]]></content>
    
    
    <categories>
      
      <category>诗歌</category>
      
    </categories>
    
    
    <tags>
      
      <tag>诗歌</tag>
      
      <tag>摘选</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo cannot get /</title>
    <link href="/posts/7563.html"/>
    <url>/posts/7563.html</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-cannot-get"><a href="#Hexo-cannot-get" class="headerlink" title="Hexo cannot get /"></a>Hexo cannot get /</h1><p>========================</p><p>因为大改了博客，node_modules内的文件被改动过，导致博客的index.html文件生成出现问题。</p><p>执行<code>npm audit fix</code> 查看是否缺失组件，通过<code>npm install hexo-xxx-xxx</code> 安装即可。</p><p>这里我遇到的问题是<code>Cannot get /</code>，缺失了hexo-generator-index组件，应该是我安装其他组件时将其卸载了。之后进行了hexo clean 才发现不能生成index.html这个问题， 因此执行<code>npm install hexo-generator-index</code>便解决了我遇到的问题。</p>]]></content>
    
    
    <categories>
      
      <category>脚本语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博文</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>默写图DFS算法</title>
    <link href="/posts/31649.html"/>
    <url>/posts/31649.html</url>
    
    <content type="html"><![CDATA[<h1 id="默写图DFS算法"><a href="#默写图DFS算法" class="headerlink" title="默写图DFS算法"></a>默写图DFS算法</h1><p>========================</p><p>所谓默写，就是合上书本，不依靠浏览器、编译器、记事本等外物，仅凭记忆去写下所要求的知识、文字等。本不必如此麻烦，我也不想如此，不过他们太卷了，那就来吧。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">int</span> visit[maxSize];<span class="hljs-comment">//全局数组，记录结点是否被访问，maxSize为事先定义的数组上限。</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">DFS</span><span class="hljs-params">(AGraph *G, <span class="hljs-keyword">int</span> v)</span></span>{ <span class="hljs-comment">// 图G，顶点v</span><br>    ArcNode *p; <span class="hljs-comment">//定义边</span><br>    visit[v] = <span class="hljs-number">1</span>; <span class="hljs-comment">//记录顶点被访问</span><br>    Visit(v); <span class="hljs-comment">//事先定义好的访问顶点的函数</span><br>    p = G-&gt;adjlist[v].firstArc; <span class="hljs-comment">//将p指向图的第一条边</span><br>    <span class="hljs-keyword">while</span>(p!=<span class="hljs-literal">NULL</span>){<br>        <span class="hljs-keyword">if</span>(visit[p-&gt;adjvex] == <span class="hljs-number">0</span>) {<span class="hljs-comment">//如果顶点未被访问</span><br>            DFS(G, p-&gt;adjvex);<span class="hljs-comment">//递归访问</span><br>        }<br>        p=p-&gt;nextArc;<span class="hljs-comment">//p指向v的下一条边</span><br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="默写结果"><a href="#默写结果" class="headerlink" title="默写结果"></a>默写结果</h2><p><code>完全正确</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>DFS</code>属于核心且简单的内容，而且也很多变，所以还是需要领悟其真正的奥义才能灵活运用。另外，<code>图的DFS遍历</code>与<code>二叉树的先序遍历</code>类似，可以理理二者之间的相似与不同之处。<br>上述算法主要针对<code>连通图</code>，针对<code>非连通图</code>可以写一个循环，遍历未被访问的顶点，然后对该点进行上述的DFS算法,相当于是将<code>非连通图</code>拆成若干个<code>连通图</code>，然后一一进行DFS算法。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(Agraph *g)</span> </span>{<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;g-&gt;n;i++){<br>        <span class="hljs-keyword">if</span>(visit[i] == <span class="hljs-number">0</span>){<br>            DFS(g, i);<br>        }<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>数据结构</tag>
      
      <tag>DFS</tag>
      
      <tag>默写</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>默写层次遍历</title>
    <link href="/posts/37157.html"/>
    <url>/posts/37157.html</url>
    
    <content type="html"><![CDATA[<h1 id="默写层次遍历"><a href="#默写层次遍历" class="headerlink" title="默写层次遍历"></a>默写层次遍历</h1><p>========================</p><p>所谓默写，就是合上书本，不依靠浏览器、编译器、记事本等外物，仅凭记忆去写下所要求的知识、文字等。本不必如此麻烦，我也不想如此，不过他们太卷了，那就来吧。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">level</span><span class="hljs-params">(BTNode *p)</span> </span>{<span class="hljs-comment">// BTNode为二叉树结点</span><br>    <span class="hljs-keyword">int</span> front,rear;<br>    BTNode *que[maxSize]; <span class="hljs-comment">//maxSize为事先定义的循环队列上限；定义循环队列，记录将要访问的层次上的结点</span><br>    front=rear=<span class="hljs-number">0</span>;<br>    BTNode *q;<br>    <span class="hljs-keyword">if</span>(p!=<span class="hljs-literal">NULL</span>) {<br>        rear = (rear + <span class="hljs-number">1</span>) % maxSize;<br>        que[rear] = p; <span class="hljs-comment">//头结点入队</span><br>        <span class="hljs-keyword">while</span>(front!=rear) {<br>            front = (front + <span class="hljs-number">1</span>) % maxSize;<br>            q = que[front]; <span class="hljs-comment">//头结点出队</span><br>            Visit(q);<span class="hljs-comment">//Visit()函数为事先定义的访问二叉树结点的函数，举例：cout&lt;&lt;q-&gt;data;</span><br>            <span class="hljs-keyword">if</span>(q-&gt;lchild != <span class="hljs-literal">NULL</span>) { <span class="hljs-comment">//结点左子树不为空</span><br>                rear = (rear + <span class="hljs-number">1</span>) % maxSize;<br>                que[rear] = q-&gt;lchild; <span class="hljs-comment">//左子树根节点入队</span><br>            }<br>            <span class="hljs-keyword">if</span>(q-&gt;rchild != <span class="hljs-literal">NULL</span>) {<span class="hljs-comment">//结点右子树不为空</span><br>                rear = (rear + <span class="hljs-number">1</span>) % maxSize;<br>                que[rear] = q-&gt;rchild; <span class="hljs-comment">//右子树根节点入队</span><br>            }<br>        }<br>    }<br>}<br><br></code></pre></td></tr></tbody></table></figure><h2 id="默写结果"><a href="#默写结果" class="headerlink" title="默写结果"></a>默写结果</h2><p><code>完全正确</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>层次遍历属于核心且简单的内容，将程序整个记下来，也是为了0失误，自己现场想的话很容易出错，这样做对记忆力有一定的要求，不过我只会精准记忆核心内容，其他的采用泛式记忆或模糊记忆即可。</p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>数据结构</tag>
      
      <tag>默写</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日60秒读懂世界</title>
    <link href="/posts/19234.html"/>
    <url>/posts/19234.html</url>
    
    <content type="html"><![CDATA[<img src="https://v2.alapi.cn/api/zaobao?token=bqYVMcni4hTa7tCL&amp;format=image" width="85%"> ]]></content>
    
    
    <categories>
      
      <category>新闻</category>
      
    </categories>
    
    
    <tags>
      
      <tag>新闻</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SDUTOJ1730（记忆化搜索）：数字三角形</title>
    <link href="/posts/49201.html"/>
    <url>/posts/49201.html</url>
    
    <content type="html"><![CDATA[<h1 id="SDUTOJ1730（记忆化搜索）：数字三角形"><a href="#SDUTOJ1730（记忆化搜索）：数字三角形" class="headerlink" title="SDUTOJ1730（记忆化搜索）：数字三角形"></a>SDUTOJ1730（记忆化搜索）：数字三角形</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220327SDUTOJ1730%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%EF%BC%89%EF%BC%9A%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">数字三角形问题<br>Description<br>给定一个由n行数字组成的数字三角形如下图所示。试设计一个算法，计算出从三角形的顶至底的一条路径，使该路径经过的数字总和最大。<br> <br>对于给定的由n行数字组成的数字三角形，计算从三角形的顶至底的路径经过的数字和的最大值。<br>Input<br>输入数据的第1行是数字三角形的行数n，1≤n≤100。接下来n行是数字三角形各行中的数字。所有数字在0..99之间。<br>Output<br>输出数据只有一个整数，表示计算出的最大值。<br>Sample<br>Input <br>5<br>7<br>3 8<br>8 1 0<br>2 7 4 4<br>4 5 2 6 5<br>Output <br>30<br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//题目较为简单，记录即可。</span><br></code></pre></td></tr></tbody></table></figure><p><code>心得： 这是一道比较经典的动规及记忆化搜索题，难度中等。</code></p><h2 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h2><p>数组递推</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bitset&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;deque&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;functional&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stack&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">111</span>;<br><span class="hljs-keyword">int</span> dp[N][N],a[N][N];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> <span class="hljs-keyword">const</span> *argv[])</span> </span>{<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">int</span> res=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> i,j;<br>    <span class="hljs-built_in">cin</span>&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    {<br>        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">1</span>;j&lt;=i;j++)<br>        {<br>            <span class="hljs-built_in">cin</span>&gt;&gt;a[i][j];<br>        }<br>    }<br>    dp[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]=a[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span>( i=<span class="hljs-number">2</span>;i&lt;=n;i++)<br>    {<br>        dp[i][<span class="hljs-number">1</span>]=dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>]+a[i][<span class="hljs-number">1</span>];<br>        dp[i][i]=dp[i <span class="hljs-number">-1</span>][i- <span class="hljs-number">1</span>] +a[i][i];  <span class="hljs-comment">//边界情况</span><br>        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">2</span>;j&lt;i;j++){<br>            dp[i][j]=max(dp[i<span class="hljs-number">-1</span>][j],dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>])+a[i][j];  <br>            }<br>    }<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) res=max(res,dp[n][i]);  <span class="hljs-comment">//求各个路径结果的最大值</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;res;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="解法二（深度优先，超时解法）"><a href="#解法二（深度优先，超时解法）" class="headerlink" title="解法二（深度优先，超时解法）"></a>解法二（深度优先，超时解法）</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220327SDUTOJ1730%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%EF%BC%89%EF%BC%9A%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/2.jpeg"></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(x,y,c)</span></span>{   <span class="hljs-comment">//c用来记录累加的结果</span><br>    <span class="hljs-keyword">if</span>(x==n<span class="hljs-number">-1</span>){<br>        <span class="hljs-keyword">if</span>(c&gt;ans) ans=c   <span class="hljs-comment">//取最后累加结果的最大值  ans用来存储</span><br>        <span class="hljs-keyword">return</span> ;<br>    } <br>    dfs(x+<span class="hljs-number">1</span>,y,c+a[x+<span class="hljs-number">1</span>][y]);<br>    dfs(x+<span class="hljs-number">1</span>,y+<span class="hljs-number">1</span>,c+a[x+<span class="hljs-number">1</span>][y+<span class="hljs-number">1</span>]);<br>}<br></code></pre></td></tr></tbody></table></figure><p>通过<code>深度优搜索（dfs）</code>画出<code>递归树</code>来模拟执行过程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220327SDUTOJ1730%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%EF%BC%89%EF%BC%9A%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/3.jpeg"></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;  //超时算法</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1e5</span>+<span class="hljs-number">10</span>;<br><span class="hljs-keyword">int</span> a[N][N];<br><span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y,<span class="hljs-keyword">int</span> c,<span class="hljs-keyword">int</span> n)</span></span>{<br>    <span class="hljs-keyword">if</span>(x==n<span class="hljs-number">-1</span>){<br>        <span class="hljs-keyword">if</span>(c&gt;ans) ans=c;<br>        <span class="hljs-keyword">return</span> ;<br>    }<br>    dfs(x+<span class="hljs-number">1</span>,y,c+a[x+<span class="hljs-number">1</span>][y],n);<br>    dfs(x+<span class="hljs-number">1</span>,y+<span class="hljs-number">1</span>,c+a[x+<span class="hljs-number">1</span>][y+<span class="hljs-number">1</span>],n);<br>}<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-built_in">cin</span>&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;=i;j++){<br>            <span class="hljs-built_in">cin</span>&gt;&gt;a[i][j];<br>        }<br>    } <br>    dfs(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,a[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>],n);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br> }<br><br></code></pre></td></tr></tbody></table></figure><p>深度优先搜索其实质就是<code>二叉树的先序遍历</code>（没学过的直接用递推或者递归的算法求解）<br>我们发现有些点被重复搜索了好几遍这就耗费了很多的时间，实际上也是这样的这种算法的时间复杂度为O(2^n)指数级复杂度肯定要超时的，这时我们就希望有一种算法能够在第一次搜索的过程中就记录下来之后用的时候就不需要继续搜索了，这就引出我们的<code>记忆化搜索</code>。</p><h2 id="解法三（记忆化搜索）"><a href="#解法三（记忆化搜索）" class="headerlink" title="解法三（记忆化搜索）"></a>解法三（记忆化搜索）</h2><p>我们发现从上向下累加和是不能重复的，但从下向下的累加是可以重复用的这也是记忆化搜索的前提。记忆化搜索：对递归树做了剪枝，搜索过的子树不再重复搜索，直接返回储存值。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1500</span>;<br><span class="hljs-keyword">int</span> a[N][N];<br><span class="hljs-keyword">int</span> f[N][N];   <span class="hljs-comment">//记录从上到下的累加和 </span><br><span class="hljs-keyword">int</span> ans=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">int</span> n;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>{<br>    <span class="hljs-comment">//记忆搜索， 避免进一步递归 </span><br>    <span class="hljs-keyword">if</span>(f[x][y]!=<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> f[x][y];   <span class="hljs-comment">//由于开全局数组初始化都为0不为零就相当于已经搜索过就记录下来 </span><br>    <span class="hljs-keyword">if</span>(x==n<span class="hljs-number">-1</span>)   <span class="hljs-comment">//边界条件 </span><br>    f[x][y]=a[x][y];<br>    <span class="hljs-keyword">else</span><br>    f[x][y]=a[x][y]+max(dfs(x+<span class="hljs-number">1</span>,y),dfs(x+<span class="hljs-number">1</span>,y+<span class="hljs-number">1</span>));<br>    <span class="hljs-keyword">return</span> f[x][y];<br>}<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-built_in">cin</span>&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++){<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;=i;j++){<br>            <span class="hljs-built_in">cin</span>&gt;&gt;a[i][j];<br>        }<br>    } <br>    dfs(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;f[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br> } <br></code></pre></td></tr></tbody></table></figure><p>其实找准动态规划与贪心的区别后，理解起来就不那么难了，动态规划的关键词就是状态和状态转移方程，找好这两个问题就可以解决了，然后dfs深搜，和记搜有时候牵扯到后面的二叉树，先不用理解的太深，代码就多一行记住后以后就会慢慢的理解了。其实递推的方法求数塔问题是也是有用数组记录了值，和记忆化搜索有些相似，大家可以结合理解，加油！<br>题目链接：<a href="https://acm.sdut.edu.cn/onlinejudge3/problems/1730">https://acm.sdut.edu.cn/onlinejudge3/problems/1730</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>SDUTOJ</tag>
      
      <tag>DFS</tag>
      
      <tag>Memory Search</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SDUTOJ2080（动态规划）：最长公共子序列</title>
    <link href="/posts/11317.html"/>
    <url>/posts/11317.html</url>
    
    <content type="html"><![CDATA[<h1 id="SDUTOJ2080（动态规划）：最长公共子序列"><a href="#SDUTOJ2080（动态规划）：最长公共子序列" class="headerlink" title="SDUTOJ2080（动态规划）：最长公共子序列"></a>SDUTOJ2080（动态规划）：最长公共子序列</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220326SDUTOJ2080%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">最长公共子序列问题<br>Description<br>给定两个序列 X={x1,x2,…,xm} 和 Y={y1,y2,…,yn}，找出X和Y的最长公共子序列。<br><br>Input<br>输入数据有多组，每组有两行 ，每行为一个长度不超过500的字符串（输入全是大写英文字母（A,Z）），表示序列X和Y。<br><br>Output<br>每组输出一行，表示所求得的最长公共子序列的长度，若不存在公共子序列，则输出0。<br><br>Sample<br>Input <br>ABCBDAB<br>BDCABA<br>Output <br>4<br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//比较简单，这里做记录即可</span><br></code></pre></td></tr></tbody></table></figure><p><code>心得： 这是一道比较经典的动规题，难度低。</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs txt">状态表示：我们用dp[i][j]表示数字A[1,i]与B[1,j] 的最长公共子序列长度。<br>分析：<br>当s1[i]=s2[j]时 dp[i][j]=d[i-1][j-1]+1; 因为相同时肯定是最长公共子序列长度+1；<br>当s1[i]!=s2[j]时 dp[i][j]=max(dp[i][j-1],dp[i-1][j]) 举个例子：<br>ABC A<br>ABD C<br>可得dp[4][4]=dp[3][4];<br>有一点小问题：有一些人认为不用考虑s1[i]==s2[j]的这种情况，因为dp[i-1][j]=dp[i-2][j]+dp[i-1][j-1] 也就是说else后面的这一种情况全部都可以包括，但我不这么认为，原因如下：如果只有else后面的语句得出的结果是0，我们建立表格时发现整个表格全部为零，我结合if里的语句简单的分析了一下，else语句的dp数组建立的表格确实能包括dp[i][j]但是从问题的角度来分析，s1[i]=s2[j]这种情况并没有被包括，就和贪心一样指一种情况对结果有一定的贡献所以不能舍弃（一点小的见解，仅供参考）<br></code></pre></td></tr></tbody></table></figure><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">505</span>;<br><span class="hljs-keyword">int</span> dp[N][N];<br><span class="hljs-keyword">char</span> s1[N],s2[N];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">int</span> n,m;<br>    <span class="hljs-keyword">while</span>(~<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s %s"</span>,s1+<span class="hljs-number">1</span>,s2+<span class="hljs-number">1</span>)){<br>        n=<span class="hljs-built_in">strlen</span>(s1+<span class="hljs-number">1</span>);<br>        m=<span class="hljs-built_in">strlen</span>(s2+<span class="hljs-number">1</span>);  <span class="hljs-comment">//数组统一往后移动一位是考虑到边界问题</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) dp[i][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;m;j++) dp[<span class="hljs-number">0</span>][j]=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++){<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++){<br>                <span class="hljs-keyword">if</span>(s1[i]==s2[j])   <br>                 {<br>                     dp[i][j]=dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>;<br>                 }<br>                 <span class="hljs-keyword">else</span> <br>                 {<br>                     dp[i][j]=max(dp[i<span class="hljs-number">-1</span>][j],dp[i][j<span class="hljs-number">-1</span>]);<br>                 }<br>            }<br>        }<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,dp[n][m]);<br>    }<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br> } <br></code></pre></td></tr></tbody></table></figure><p>题目链接：<a href="https://acm.sdut.edu.cn/onlinejudge3/problems/2080">https://acm.sdut.edu.cn/onlinejudge3/problems/2080</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>SDUTOJ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SDUTOJ1299（动态规划）：最长上升子序列</title>
    <link href="/posts/48626.html"/>
    <url>/posts/48626.html</url>
    
    <content type="html"><![CDATA[<h1 id="SDUTOJ1299（动态规划）：最长上升子序列"><a href="#SDUTOJ1299（动态规划）：最长上升子序列" class="headerlink" title="SDUTOJ1299（动态规划）：最长上升子序列"></a>SDUTOJ1299（动态规划）：最长上升子序列</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220326SDUTOJ1299%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">最长上升子序列<br>Description<br>一个数的序列bi，当b1 &lt; b2 &lt; ... &lt; bS的时候，我们称这个序列是上升的。对于给定的一个序列(a1, a2, ..., aN)，我们可以得到一些上升的子序列(ai1, ai2, ..., aiK)，这里1&lt;= i1 &lt; i2 &lt; ... &lt; iK &lt;= N。比如，对于序列(1, 7, 3, 5, 9, 4, 8)，有它的一些上升子序列，如(1, 7), (3, 4, 8)等等。这些子序列中最长的长度是4，比如子序列(1, 3, 5, 8)。<br><br>你的任务，就是对于给定的序列，求出最长上升子序列的长度。<br>Input<br>输入的第一行是序列的长度N (1 &lt;= N &lt;= 1000)。第二行给出序列中的N个整数，这些整数的取值范围都在0到10000。<br>Output<br>最长上升子序列的长度。<br>Sample<br>Input <br>7<br>1 7 3 5 9 4 8<br>Output <br>4<br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//比较简单，这里做记录即可</span><br></code></pre></td></tr></tbody></table></figure><p><code>心得： 这是一道比较经典的动规题，难度低。</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs txt">我们要求最长上升子序列的长度，自然要挨个数字来寻找，这时我们用dp[i]来表示用i个数字结尾的最长上升子序列的长度。<br>样例 1 7 3 5 9 4 8<br>dp[i] 1 2 2 3 3 …<br>dp[2]：<br>dp[2]=dp[1]+1;<br>dp[3]:<br>dp[3]=dp[1]+1;<br>dp[4]:<br>dp[4]=dp[1]+1;<br>dp[4]=dp[3]+1;<br>这时我们发现了什么规律呢？<br>没错从第一位数字开始寻找，找到一个比当前的数小的数就+1更新一下，直到遍历到当前数字。<br>我们就得到状态转移方程<br>dp[i]=max( dp[j] + 1, dp[i] ) 0&lt;j&lt;i;<br></code></pre></td></tr></tbody></table></figure><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N=<span class="hljs-number">1000</span>;<br><span class="hljs-keyword">int</span> a[N],dp[N];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">int</span> res=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">cin</span>&gt;&gt; n;<br>    dp[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br>    a[<span class="hljs-number">0</span>]=<span class="hljs-number">-1</span>;  <span class="hljs-comment">//注意这里为什么要让a[0]=-1?还是说让a[0]小于某个数就行？  继续往下看</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    {<br>        <span class="hljs-built_in">cin</span>&gt;&gt;a[i];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;i;j++){<br>            <span class="hljs-keyword">if</span>(a[j]&lt;a[i]){     <span class="hljs-comment">//这里我们第一次发现了a数组的比较  j从0开始也就发现了上面关于a[0]的问题</span><br>            <span class="hljs-comment">//我们注意到a[i]任意一个数是大于等于0的而a[0]是负数  结合下面的代码我们发现其目的就是在于解决最小上升子序列的长度为1的情况</span><br>                dp[i]=max(dp[i],dp[j]+<span class="hljs-number">1</span>);<br>            }<br>        }<br>        res=max(res,dp[i]);<br>    }<br>    <span class="hljs-built_in">cout</span>&lt;&lt;res&lt;&lt;<span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br><br></code></pre></td></tr></tbody></table></figure><p>题目链接：<a href="https://acm.sdut.edu.cn/onlinejudge3/problems/1299">https://acm.sdut.edu.cn/onlinejudge3/problems/1299</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>SDUTOJ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>POJ3254（状态压缩dp）：玉米地</title>
    <link href="/posts/22809.html"/>
    <url>/posts/22809.html</url>
    
    <content type="html"><![CDATA[<h1 id="POJ3254（状态压缩dp）：玉米地"><a href="#POJ3254（状态压缩dp）：玉米地" class="headerlink" title="POJ3254（状态压缩dp）：玉米地"></a>POJ3254（状态压缩dp）：玉米地</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220320POJ3254%EF%BC%88%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9dp%EF%BC%89%EF%BC%9A%E7%8E%89%E7%B1%B3%E5%9C%B0/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">Corn Fields<br>Time Limit: 2000MS        Memory Limit: 65536K<br>Total Submissions: 26638        Accepted: 13894<br>Description<br><br>Farmer John has purchased a lush new rectangular pasture composed of M by N (1 ≤ M ≤ 12; 1 ≤ N ≤ 12) square parcels. He wants to grow some yummy corn for the cows on a number of squares. Regrettably, some of the squares are infertile and can't be planted. Canny FJ knows that the cows dislike eating close to each other, so when choosing which squares to plant, he avoids choosing squares that are adjacent; no two chosen squares share an edge. He has not yet made the final choice as to which squares to plant.<br><br>Being a very open-minded man, Farmer John wants to consider all possible options for how to choose the squares for planting. He is so open-minded that he considers choosing no squares as a valid option! Please help Farmer John determine the number of ways he can choose the squares to plant.<br><br>Input<br><br>Line 1: Two space-separated integers: M and N<br>Lines 2..M+1: Line i+1 describes row i of the pasture with N space-separated integers indicating whether a square is fertile (1 for fertile, 0 for infertile)<br>Output<br><br>Line 1: One integer: the number of ways that FJ can choose the squares modulo 100,000,000.<br>Sample Input<br><br>2 3<br>1 1 1<br>0 1 0<br>Sample Output<br><br>9<br>Hint<br><br>Number the squares as follows:<br>1 2 3<br>  4  <br><br>There are four ways to plant only on one squares (1, 2, 3, or 4), three ways to plant on two squares (13, 14, or 34), 1 way to plant on three squares (134), and one way to plant on no squares. 4+3+1+1=9.<br>Source<br><br>USACO 2006 November Gold<br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//没写出来</span><br></code></pre></td></tr></tbody></table></figure><p><code>心得： 这是一道比较经典的状态压缩动规题，难度高。</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs txt">可以发现这个题有如下特征，规模较小，每个方格只有两种状态，可以种玉米和不可以种玉米；<br><br>仍然考虑用状压dp；<br><br>定义状态：<br><br>定义状态dp[i][state]表示能到达第i行，且第i行的所有的种玉米和不种玉米的情况为state时的所有状态数。<br><br>种玉米代表1，不种玉米代表0；<br><br>分析这个状态定义，发现这个状态定义把整个问题分成了n个阶段(代表行数)，并且这n个阶段遵循无后效性；<br><br>状态转移：<br><br>当前阶段只受前一阶段的影响，当前阶段只能影响到后一阶段。所以状态转移就是把握住当前状态是如何影响后一<br><br>阶段的。在这个题中，我们会发现：<br><br>如果当前阶段的某列土地种了玉米，那么下个阶段的这列土地就不能种玉米。<br><br>另外，如果当前阶段某列土地的前一列土地种了玉米，那么这一列就不能再种玉米了。<br><br>需要注意的是，如果当前阶段的某一列可以种玉米，你可以有两种选择，种或不种。<br><br>按一个方向求解：<br><br>可以看出这个状态定义是按行数分了n个阶段，所以我们应该按照行数来进行求解，根据状态定义，结果是把最后<br><br>一行的所有可达到的状态的方法数加和即可。<br></code></pre></td></tr></tbody></table></figure><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mmset(a,b) memset(a,b,sizeof(a))</span><br> <br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">12</span> + <span class="hljs-number">5</span>;<br><span class="hljs-keyword">int</span>   dp[<span class="hljs-number">15</span>][INF];<br><span class="hljs-keyword">int</span> data[<span class="hljs-number">15</span>][<span class="hljs-number">15</span>];<br><span class="hljs-keyword">int</span> n,m;        <span class="hljs-comment">//行列 </span><br> <br><span class="hljs-comment">/*</span><br><span class="hljs-comment">2 3</span><br><span class="hljs-comment">1 1 1</span><br><span class="hljs-comment">0 1 0</span><br><span class="hljs-comment">Sample Output</span><br><span class="hljs-comment">9</span><br><span class="hljs-comment">*/</span><br> <br> <br><span class="hljs-comment">/*</span><br><span class="hljs-comment">i代表当前行 </span><br><span class="hljs-comment">j代表当前列</span><br><span class="hljs-comment">state代表当前行(阶段)的状态 </span><br><span class="hljs-comment">next代表下一行(阶段)的可到达状态</span><br><span class="hljs-comment">flag代表是上一列是否种了玉米，如果种了玉米，flag =  1,否则等于0； </span><br><span class="hljs-comment">*/</span> <br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i,<span class="hljs-keyword">int</span> j,<span class="hljs-keyword">int</span> state,<span class="hljs-keyword">int</span> next,<span class="hljs-keyword">int</span> flag)</span></span>;<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">while</span>(~<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>,&amp;n,&amp;m))<br>    {<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>        {<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; m; j++)<br>            {<br>                <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>,&amp;data[i][j]);<br>            }<br>        }<br>        mmset(dp,<span class="hljs-number">0</span>);        <span class="hljs-comment">//初始化 </span><br>        dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;    <br>        <br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">            遍历每个阶段的所有可达到状态，并搜索这种状态所能到达所有状态 。</span><br><span class="hljs-comment">            这是状态转移的过程 </span><br><span class="hljs-comment">        */</span> <br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)    <br>        {<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> state = <span class="hljs-number">0</span>; state &lt; (<span class="hljs-number">1</span>&lt;&lt;m); state++)<br>            {<br>                <span class="hljs-keyword">if</span>(dp[i][state] &gt; <span class="hljs-number">0</span>)<br>                {<br>                    dfs(i,<span class="hljs-number">0</span>,state,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br>                }<br>            }<br>        }<br>        <span class="hljs-keyword">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">            求解，对最后一行所有可达到的状态的方法数加和，并存在变量ans中; </span><br><span class="hljs-comment">        */</span> <br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> state = <span class="hljs-number">0</span>; state &lt; (<span class="hljs-number">1</span>&lt;&lt;m); state++)<br>        {<br>            <span class="hljs-keyword">if</span>(dp[n][state] &gt; <span class="hljs-number">0</span>)<br>            {<br>                ans=(ans+dp[n][state])%<span class="hljs-number">100000000</span>;<br>            }<br>        }<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,ans);<br>    }    <br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br> <br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i,<span class="hljs-keyword">int</span> j,<span class="hljs-keyword">int</span> state,<span class="hljs-keyword">int</span> next,<span class="hljs-keyword">int</span> flag)</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">if</span>(j == m) <br>    {<br>        dp[i+<span class="hljs-number">1</span>][next] = (dp[i+<span class="hljs-number">1</span>][next] + dp[i][state])%<span class="hljs-number">100000000</span>;<br>    }<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    下面这段代码有点绕，可以种玉米是指客观条件,</span><br><span class="hljs-comment">    但种不种玉米是主观意愿。 </span><br><span class="hljs-comment">    */</span> <br>    <span class="hljs-keyword">else</span><br>    {<br>        <span class="hljs-comment">//表示可以种玉米 </span><br>        <span class="hljs-keyword">if</span>(data[i+<span class="hljs-number">1</span>][j] == <span class="hljs-number">1</span> &amp;&amp; (state &amp; (<span class="hljs-number">1</span>&lt;&lt;j)) == <span class="hljs-number">0</span> &amp;&amp; flag== <span class="hljs-number">0</span>) <br>        {<br>            <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">0</span>||flag == <span class="hljs-number">1</span>)    <span class="hljs-comment">//不种玉米 </span><br>            {<br>                 dfs(i,j+<span class="hljs-number">1</span>,state,next,<span class="hljs-number">0</span>);<br>            }<br>            <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">0</span>)    <span class="hljs-comment">//种玉米 </span><br>            {<br>                dfs(i,j+<span class="hljs-number">1</span>,state,next | (<span class="hljs-number">1</span>&lt;&lt;j),<span class="hljs-number">1</span>);<br>            }<br>        }<br>        <span class="hljs-comment">//不可以种玉米 </span><br>        <span class="hljs-keyword">else</span><br>        {<br>            dfs(i,j+<span class="hljs-number">1</span>,state,next,<span class="hljs-number">0</span>);<br>        }<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><p>题目链接：<a href="http://poj.org/problem?id=3254">http://poj.org/problem?id=3254</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>记忆化</tag>
      
      <tag>POJ</tag>
      
      <tag>状态压缩</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>POJ2411（状态压缩dp）：方格覆盖</title>
    <link href="/posts/37129.html"/>
    <url>/posts/37129.html</url>
    
    <content type="html"><![CDATA[<h1 id="POJ2411（状态压缩dp）：方格覆盖"><a href="#POJ2411（状态压缩dp）：方格覆盖" class="headerlink" title="POJ2411（状态压缩dp）：方格覆盖"></a>POJ2411（状态压缩dp）：方格覆盖</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220320POJ2411%EF%BC%88%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9dp%EF%BC%89%EF%BC%9A%E6%96%B9%E6%A0%BC%E8%A6%86%E7%9B%96/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">Mondriaan's Dream<br>Time Limit: 3000MS        Memory Limit: 65536K<br>Total Submissions: 27144        Accepted: 14765<br>Description<br><br>Squares and rectangles fascinated the famous Dutch painter Piet Mondriaan. One night, after producing the drawings in his 'toilet series' (where he had to use his toilet paper to draw on, for all of his paper was filled with squares and rectangles), he dreamt of filling a large rectangle with small rectangles of width 2 and height 1 in varying ways.<br><br><br>Expert as he was in this material, he saw at a glance that he'll need a computer to calculate the number of ways to fill the large rectangle whose dimensions were integer values, as well. Help him, so that his dream won't turn into a nightmare!<br>Input<br><br>The input contains several test cases. Each test case is made up of two integer numbers: the height h and the width w of the large rectangle. Input is terminated by h=w=0. Otherwise, 1&lt;=h,w&lt;=11.<br>Output<br><br>For each test case, output the number of different ways the given rectangle can be filled with small rectangles of size 2 times 1. Assume the given large rectangle is oriented, i.e. count symmetrical tilings multiple times.<br>Sample Input<br><br>1 2<br>1 3<br>1 4<br>2 2<br>2 3<br>2 4<br>2 11<br>4 11<br>0 0<br>Sample Output<br><br>1<br>0<br>1<br>2<br>3<br>5<br>144<br>51205<br>Source<br><br>Ulm Local 2000<br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//没写出来</span><br></code></pre></td></tr></tbody></table></figure><p><code>心得： 这是一道比较经典的状态压缩动规题，难度高。</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs txt">这个题规模比较小，而且每个方格只有两种状态，分别是被覆盖和未被覆盖；<br><br>所以我们考虑用状态压缩dp；<br><br>定义状态：<br><br>我们首先定义状态：dp[j][state]，表示能到达第j列，且第j列所有方格的覆盖情况为state时的所有方法数；<br><br>这样我们通过这个状态把这个问题分为j个阶段(j代表列数),因为第j列放置的情况最多只能影响到j+1列。比如第j列放置<br><br>一个或多个1*2的方格。这样一种情况就会影响到j+1列；但是他最多影响到第j+1列，之后就不能再影响了。<br><br>这就是无后效性；无后效性是保证能动态规划的关键。<br><br>状态转移：<br><br>当第i列第j行状态为0时，表示没有覆盖；当为1时，说明被覆盖了；<br><br>如果当前格没有被覆盖，说明我们至少可以放一个1*2的方格，如果当前列的下一行也没有被覆盖，那么我们可以放一个<br><br>2*1的方格；如果被覆盖， 那么我们继续往当前列的下一行遍历 ，直到把这一列遍历完； 在这个过程中 ，我们能求出<br><br>下一列的合法状态(也就是可以到达的状态)，这是一个搜索的过程，至于为什么要搜索，请看下面：<br><br>我们把当前列每一种状态都进行搜索，看能不能找到从这种状态到其他状态的一种路径；如果存在，说明其他状态是<br><br>可以到达的。所以我们其实并不需要对每一种状态进行搜索，只需要对可以到达的状态进行搜索即可；<br><br>按一个方向求出该问题的解：<br><br>当前阶段总是影响下一阶段，所以我们应该按照阶段的方向进行求解，在这个题中是按列的方向求解；题目要求全部填<br><br>满，所以答案应该是dp[m+1][0];<br></code></pre></td></tr></tbody></table></figure><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> mmset(a,b) memset(a,b,sizeof(a))</span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">12</span> + <span class="hljs-number">10</span>;<br><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> dp[<span class="hljs-number">13</span>][<span class="hljs-number">2100</span>];<br><span class="hljs-keyword">int</span> n,m;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">1 2</span><br><span class="hljs-comment">1 3</span><br><span class="hljs-comment">1 4</span><br><span class="hljs-comment">2 2</span><br><span class="hljs-comment">2 3</span><br><span class="hljs-comment">2 4</span><br><span class="hljs-comment">2 11</span><br><span class="hljs-comment">4 11</span><br><span class="hljs-comment">0 0</span><br><span class="hljs-comment">Sample Output</span><br><span class="hljs-comment">1</span><br><span class="hljs-comment">0</span><br><span class="hljs-comment">1</span><br><span class="hljs-comment">2</span><br><span class="hljs-comment">3</span><br><span class="hljs-comment">5</span><br><span class="hljs-comment">144</span><br><span class="hljs-comment">51205</span><br><span class="hljs-comment">*/</span><br> <br> <br><span class="hljs-comment">/*搜索从第j列的state状态开始，它能到达第j+1列的哪些状态；</span><br><span class="hljs-comment">  i代表第i行，next代表它能到达第j+1列的next状态 </span><br><span class="hljs-comment">*/</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i,<span class="hljs-keyword">int</span> j,<span class="hljs-keyword">int</span> state,<span class="hljs-keyword">int</span> next)</span></span>;        <br>                                                <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>{<br>    <br>    <span class="hljs-keyword">while</span>(~<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d%d"</span>,&amp;n,&amp;m) &amp;&amp; (n+m))<br>    {<br>        <span class="hljs-keyword">if</span>(n &gt; m)    <span class="hljs-comment">//交换两个变量 </span><br>        {<br>            n = n ^ m;<br>            m = n ^ m;<br>            n = n ^ m; <br>        }<br>        mmset(dp,<span class="hljs-number">0</span>);    <span class="hljs-comment">//初始化 </span><br>        dp[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br>        <br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= m; j++)        <span class="hljs-comment">//状态转移 </span><br>        {<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> state = <span class="hljs-number">0</span>; state &lt; (<span class="hljs-number">1</span> &lt;&lt; n); state++)<br>            {<br>                <span class="hljs-comment">//对能达到的状态进行搜索，看该状态能不能达到其他状态；</span><br>                <span class="hljs-keyword">if</span>(dp[j][state] &gt; <span class="hljs-number">0</span>)     <br>                {<br>                    dfs(<span class="hljs-number">0</span>,j,state,<span class="hljs-number">0</span>);<br>                }<br>            }<br>        } <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,dp[m+<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]);        <span class="hljs-comment">//输出答案 </span><br>        <br>        <br>    }<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>} <br> <br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i,<span class="hljs-keyword">int</span> j,<span class="hljs-keyword">int</span> state, <span class="hljs-keyword">int</span> next)</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">if</span>(i == n)<br>    {<br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">        注意dp[i][j]代表的含义，就知道为什么</span><br><span class="hljs-comment">        dp[j+1][next] += dp[j][state]</span><br><span class="hljs-comment">        */</span><br>        dp[j+<span class="hljs-number">1</span>][next] += dp[j][state];        <br>        <span class="hljs-keyword">return</span>;                                <br>    }<br>    <span class="hljs-keyword">else</span><br>    {<br>        <span class="hljs-keyword">if</span>((state&amp;(<span class="hljs-number">1</span> &lt;&lt; i) )== <span class="hljs-number">0</span>)    <span class="hljs-comment">//当该格子没被覆盖说明可以放一个1*2的木板 </span><br>        {<br>            dfs(i+<span class="hljs-number">1</span>,j,state,next | (<span class="hljs-number">1</span>&lt;&lt; i));<br>        }<br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">        当该格子没被覆盖且它下面的格子也没被覆盖 </span><br><span class="hljs-comment">        说明可以当一个2*1的木板</span><br><span class="hljs-comment">        */</span> <br>        <span class="hljs-keyword">if</span>(i + <span class="hljs-number">1</span> &lt; n &amp;&amp;(state &amp; (<span class="hljs-number">1</span> &lt;&lt; i)) == <span class="hljs-number">0</span> &amp;&amp; (state &amp; (<span class="hljs-number">1</span> &lt;&lt; (i+<span class="hljs-number">1</span>))) == <span class="hljs-number">0</span>)    <br>        {                                                                        <br>            dfs(i+<span class="hljs-number">2</span>,j,state,next);<br>        }<br>        <span class="hljs-keyword">if</span>((state &amp; (<span class="hljs-number">1</span> &lt;&lt; i)) &gt; <span class="hljs-number">0</span>)    <span class="hljs-comment">//当该格子被覆盖时，说明这个格子什么都不能放 </span><br>        {<br>            dfs(i+<span class="hljs-number">1</span>,j,state,next);<br>        }<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><p>题目链接：<a href="http://poj.org/problem?id=2411">http://poj.org/problem?id=2411</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>记忆化</tag>
      
      <tag>POJ</tag>
      
      <tag>状态压缩</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo-theme-matery配置指南</title>
    <link href="/posts/63716.html"/>
    <url>/posts/63716.html</url>
    
    <content type="html"><![CDATA[<h1 id="hexo-theme-matery配置指南"><a href="#hexo-theme-matery配置指南" class="headerlink" title="hexo-theme-matery配置指南"></a>hexo-theme-matery配置指南</h1><p><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a> </p><p>QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=53q2Ayp"><code>971887688</code></a> | QQ 交流群3（推荐）: <a href="https://qm.qq.com/cgi-bin/qm/qr?k=fC1-kU-_aTn4q-JQq4GsYKr4WcKdgfGa&amp;jump_from=webapi"><code>670694035</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/blinkfox/hexo-theme-matery.git<br></code></pre></td></tr></tbody></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page <span class="hljs-string">"categories"</span><br></code></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">categories</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-09-30 17:25:30</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">"categories"</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">"categories"</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page <span class="hljs-string">"tags"</span><br></code></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">tags</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-09-30 18:23:38</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">"tags"</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">"tags"</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page <span class="hljs-string">"about"</span><br></code></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-09-30 17:25:30</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">"about"</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">"about"</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page <span class="hljs-string">"contact"</span><br></code></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">contact</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-09-30 17:25:30</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">"contact"</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">"contact"</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page <span class="hljs-string">"friends"</span><br></code></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">friends</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-12-12 21:25:30</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">"friends"</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">"friends"</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs json">[{<br>    <span class="hljs-attr">"avatar"</span>: <span class="hljs-string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span>,<br>    <span class="hljs-attr">"name"</span>: <span class="hljs-string">"码酱"</span>,<br>    <span class="hljs-attr">"introduction"</span>: <span class="hljs-string">"我不是大佬，只是在追寻大佬的脚步"</span>,<br>    <span class="hljs-attr">"url"</span>: <span class="hljs-string">"http://luokangyuan.com/"</span>,<br>    <span class="hljs-attr">"title"</span>: <span class="hljs-string">"前去学习"</span><br>}, {<br>    <span class="hljs-attr">"avatar"</span>: <span class="hljs-string">"http://image.luokangyuan.com/4027734.jpeg"</span>,<br>    <span class="hljs-attr">"name"</span>: <span class="hljs-string">"闪烁之狐"</span>,<br>    <span class="hljs-attr">"introduction"</span>: <span class="hljs-string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span>,<br>    <span class="hljs-attr">"url"</span>: <span class="hljs-string">"https://blinkfox.github.io/"</span>,<br>    <span class="hljs-attr">"title"</span>: <span class="hljs-string">"前去学习"</span><br>}, {<br>    <span class="hljs-attr">"avatar"</span>: <span class="hljs-string">"http://image.luokangyuan.com/avatar.jpg"</span>,<br>    <span class="hljs-attr">"name"</span>: <span class="hljs-string">"ja_rome"</span>,<br>    <span class="hljs-attr">"introduction"</span>: <span class="hljs-string">"平凡的脚步也可以走出伟大的行程"</span>,<br>    <span class="hljs-attr">"url"</span>: <span class="hljs-string">"https://me.csdn.net/jlh912008548"</span>,<br>    <span class="hljs-attr">"title"</span>: <span class="hljs-string">"前去学习"</span><br>}]<br></code></pre></td></tr></tbody></table></figure><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page 404<br></code></pre></td></tr></tbody></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-number">404</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-09-30 17:25:30</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">"404"</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">"404"</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">"Oops～，我崩溃了！找不到你想要的页面 :("</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-attr">Index:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-home</span><br>  <span class="hljs-attr">Tags:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/tags</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-tags</span><br>  <span class="hljs-attr">Categories:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/categories</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-bookmark</span><br>  <span class="hljs-attr">Archives:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/archives</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-archive</span><br>  <span class="hljs-attr">About:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/about</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-user-circle</span><br>  <span class="hljs-attr">Friends:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/friends</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-address-book</span><br></code></pre></td></tr></tbody></table></figure><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式  </li></ol><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-attr">Index:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-home</span><br>  <span class="hljs-attr">Tags:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/tags</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-tags</span><br>  <span class="hljs-attr">Categories:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/categories</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-bookmark</span><br>  <span class="hljs-attr">Archives:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/archives</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-archive</span><br>  <span class="hljs-attr">About:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/about</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-user-circle-o</span><br>  <span class="hljs-attr">Friends:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">/friends</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-address-book</span><br>  <span class="hljs-attr">Medias:</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-list</span><br>    <span class="hljs-attr">children:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Music</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">/music</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-music</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Movies</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">/movies</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-film</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Books</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">/books</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-book</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Galleries</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">/galleries</span><br>        <span class="hljs-attr">icon:</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-image</span><br></code></pre></td></tr></tbody></table></figure><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">highlight:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">auto_detect:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">tab_replace:</span> <span class="hljs-string">''</span><br>  <span class="hljs-attr">wrap:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">hljs:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">prismjs:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">preprocess:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">tab_replace:</span> <span class="hljs-string">''</span><br></code></pre></td></tr></tbody></table></figure><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-generator-search --save<br></code></pre></td></tr></tbody></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">search:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">search.xml</span><br>  <span class="hljs-attr">field:</span> <span class="hljs-string">post</span><br></code></pre></td></tr></tbody></table></figure><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i hexo-permalink-pinyin --save<br></code></pre></td></tr></tbody></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">permalink_pinyin:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">separator:</span> <span class="hljs-string">'-'</span> <span class="hljs-comment"># default: '-'</span><br></code></pre></td></tr></tbody></table></figure><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i --save hexo-wordcount<br></code></pre></td></tr></tbody></table></figure><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">postInfo:</span><br>  <span class="hljs-attr">date:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">update:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">wordCount:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 设置文章字数统计为 true.</span><br>  <span class="hljs-attr">totalCount:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 设置站点文章总字数统计为 true.</span><br>  <span class="hljs-attr">min2read:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 阅读时长.</span><br>  <span class="hljs-attr">readCount:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 阅读次数.</span><br></code></pre></td></tr></tbody></table></figure><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-filter-github-emojis --save<br></code></pre></td></tr></tbody></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">githubEmojis:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">className:</span> <span class="hljs-string">github-emoji</span><br>  <span class="hljs-attr">inject:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">styles:</span><br>  <span class="hljs-attr">customEmojis:</span><br></code></pre></td></tr></tbody></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-generator-feed --save<br></code></pre></td></tr></tbody></table></figure><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">feed:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">atom</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">atom.xml</span><br>  <span class="hljs-attr">limit:</span> <span class="hljs-number">20</span><br>  <span class="hljs-attr">hub:</span><br>  <span class="hljs-attr">content:</span><br>  <span class="hljs-attr">content_limit:</span> <span class="hljs-number">140</span><br>  <span class="hljs-attr">content_limit_delim:</span> <span class="hljs-string">' '</span><br>  <span class="hljs-attr">order_by:</span> <span class="hljs-string">-date</span><br></code></pre></td></tr></tbody></table></figure><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;% if (theme.socialLink.github) { %&gt;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"&lt;%= theme.socialLink.github %&gt;"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"tooltipped"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span> <span class="hljs-attr">data-tooltip</span>=<span class="hljs-string">"访问我的GitHub"</span> <span class="hljs-attr">data-position</span>=<span class="hljs-string">"top"</span> <span class="hljs-attr">data-delay</span>=<span class="hljs-string">"50"</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fab fa-github"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>&lt;% } %&gt;<br></code></pre></td></tr></tbody></table></figure><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 是否在首页显示音乐</span><br><span class="hljs-attr">music:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">title:</span>             <span class="hljs-comment"># 非吸底模式有效</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">show:</span> <span class="hljs-string">听听音乐</span><br>  <span class="hljs-attr">server:</span> <span class="hljs-string">netease</span>   <span class="hljs-comment"># require music platform: netease, tencent, kugou, xiami, baidu</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">playlist</span>    <span class="hljs-comment"># require song, playlist, album, search, artist</span><br>  <span class="hljs-attr">id:</span> <span class="hljs-number">503838841</span>     <span class="hljs-comment"># require song id / playlist id / album id / search keyword</span><br>  <span class="hljs-attr">fixed:</span> <span class="hljs-literal">false</span>      <span class="hljs-comment"># 开启吸底模式</span><br>  <span class="hljs-attr">autoplay:</span> <span class="hljs-literal">false</span>   <span class="hljs-comment"># 是否自动播放</span><br>  <span class="hljs-attr">theme:</span> <span class="hljs-string">'#42b983'</span><br>  <span class="hljs-attr">loop:</span> <span class="hljs-string">'all'</span>       <span class="hljs-comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span><br>  <span class="hljs-attr">order:</span> <span class="hljs-string">'random'</span>   <span class="hljs-comment"># 音频循环顺序, 可选值: 'list', 'random'</span><br>  <span class="hljs-attr">preload:</span> <span class="hljs-string">'auto'</span>   <span class="hljs-comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span><br>  <span class="hljs-attr">volume:</span> <span class="hljs-number">0.7</span>       <span class="hljs-comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span><br>  <span class="hljs-attr">listFolded:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 列表默认折叠</span><br></code></pre></td></tr></tbody></table></figure><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">typora-vue-theme主题介绍</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-09-07 09:25:00</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">typora-vue-theme主题介绍</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2018-09-07 09:25:00</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">赵奇</span><br><span class="hljs-attr">img:</span> <span class="hljs-string">/source/images/xxx.jpg</span><br><span class="hljs-attr">top:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">hide:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">cover:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">coverImg:</span> <span class="hljs-string">/images/1.jpg</span><br><span class="hljs-attr">password:</span> <span class="hljs-string">8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92</span><br><span class="hljs-attr">toc:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">mathjax:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">summary:</span> <span class="hljs-string">这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="hljs-attr">categories:</span> <span class="hljs-string">Markdown</span><br><span class="hljs-attr">tags:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Typora</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Markdown</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><br><span class="hljs-selector-class">.bg-color</span> {<br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">linear-gradient</span>(to right, <span class="hljs-number">#4cbf30</span> <span class="hljs-number">0%</span>, <span class="hljs-number">#0f9d58</span> <span class="hljs-number">100%</span>);<br>}<br><br><span class="hljs-keyword">@-webkit-keyframes</span> rainbow {<br>   <span class="hljs-comment">/* 动态切换背景颜色. */</span><br>}<br><br><span class="hljs-keyword">@keyframes</span> rainbow {<br>    <span class="hljs-comment">/* 动态切换背景颜色. */</span><br>}<br></code></pre></td></tr></tbody></table></figure><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">'.bg-cover'</span>).css(<span class="hljs-string">'background-image'</span>, <span class="hljs-string">'url(/medias/banner/'</span> + <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getDay() + <span class="hljs-string">'.jpg)'</span>);<br></code></pre></td></tr></tbody></table></figure><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本变更记录"><a href="#版本变更记录" class="headerlink" title="版本变更记录"></a>版本变更记录</h2><p>参见 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/CHANGELOG.md">CHANGELOG.md</a></p>]]></content>
    
    
    <categories>
      
      <category>脚本语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博文</tag>
      
      <tag>hexo</tag>
      
      <tag>配置指南</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo-theme-fluid配置指南</title>
    <link href="/posts/63715.html"/>
    <url>/posts/63715.html</url>
    
    <content type="html"><![CDATA[<h1 id="hexo-theme-fluid配置指南"><a href="#hexo-theme-fluid配置指南" class="headerlink" title="hexo-theme-fluid配置指南"></a>hexo-theme-fluid配置指南</h1><h2 id="主题简介"><a href="#主题简介" class="headerlink" title="主题简介"></a>主题简介</h2><p>Fluid 是基于 Hexo 的一款 Material Design 风格的主题，由 <a href="https://github.com/fluid-dev">Fluid-dev</a> 负责开发与维护。</p><p>主题 GitHub: <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>预览网站：<a href="https://hexo.fluid-dev.com/">Fluid’s blog</a>    <a href="https://zkqiang.cn/">zkqiang’s blog</a></p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><h3 id="搭建-Hexo-博客"><a href="#搭建-Hexo-博客" class="headerlink" title="搭建 Hexo 博客"></a>搭建 Hexo 博客</h3><p>如果你还没有 Hexo 博客，请按照 <a href="https://hexo.io/zh-cn/docs/">Hexo 官方文档</a> 进行安装、建站。</p><h3 id="获取最新版本"><a href="#获取最新版本" class="headerlink" title="获取最新版本"></a>获取最新版本</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></tbody></table></figure><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 内容复制过去。</p><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><p>下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本</a> 解压到 themes 目录，并将解压出的文件夹重命名为 <code>fluid</code>。</p><h3 id="指定主题"><a href="#指定主题" class="headerlink" title="指定主题"></a>指定主题</h3><p>如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></tbody></table></figure><h3 id="创建「关于页」"><a href="#创建「关于页」" class="headerlink" title="创建「关于页」"></a>创建「关于页」</h3><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></tbody></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></tbody></table></figure><p>:::warning<br><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。<br>:::</p><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><h4 id="方式一-1"><a href="#方式一-1" class="headerlink" title="方式一"></a>方式一</h4><blockquote><p>适用于通过 Npm 安装主题。</p></blockquote><p>在博客目录下执行命令：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm update --save hexo-theme-fluid<br></code></pre></td></tr></tbody></table></figure><h4 id="方式二-1"><a href="#方式二-1" class="headerlink" title="方式二"></a>方式二</h4><blockquote><p>适用于通过 Release 压缩包安装主题，且没有自行修改任何代码的情况。</p></blockquote><ol><li><p>先将原文件夹重命名为别的名称，例如 <code>fluid-bkp</code>，用于升级失败进行回退；</p></li><li><p>按照安装步骤，重新下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">release</a> 并解压重命名为 <code>fluid</code>；</p></li><li><p>如果某些配置发生了变化（改名或弃用），release 的说明里会特别提示，同步修改原配置文件即可。 </p></li></ol><h4 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h4><blockquote><p>适用于自定义了一些代码，或想体验其他分支的情况，以 dev 分支为例。</p></blockquote><ol><li><p>确定自己的 fluid 目录已经开启 git，并且所有改动都已 commit；</p></li><li><p>把 fluid 仓库的 develop 分支拉取到自己当前的分支上（也可新建一个分支再拉取）：</p></li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull https://github.com/fluid-dev/hexo-theme-fluid.git develop<br></code></pre></td></tr></tbody></table></figure><ol start="3"><li>解决代码冲突，保留自己修改的部分（如何解决冲突可自行搜索）。</li></ol><h2 id="版本号释义"><a href="#版本号释义" class="headerlink" title="版本号释义"></a>版本号释义</h2><p>本项目的版本号为 <code>X.Y.Z</code> 格式，但与常见的<a href="https://semver.org/lang/zh-CN/">语义化版本号</a>规范有部分区别，具体释义如下：</p><ul><li><code>X</code>: 产品层面的重新设计，包含重大框架重构，会涉及大范围功能变更与配置变更，更新前必须阅读相关文档</li><li><code>Y</code>: 包含中大型新功能，及无法向下兼容的功能变更与配置变更，更新该版本号可能会需要修改配置或者移除一些原功能</li><li><code>Z</code>: 不仅包含 BUG 修复、小型新功能，还会包含可以向下兼容的原功能更新与配置变更，原则上更新该版本号无需额外动作</li></ul><h2 id="开源协议"><a href="#开源协议" class="headerlink" title="开源协议"></a>开源协议</h2><p><a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/LICENSE">GPL-V3</a></p><h2 id="关于指南"><a href="#关于指南" class="headerlink" title="关于指南"></a>关于指南</h2><p>:::tip<br>致主题的新用户：</p><ul><li><p>本指南经过数个版本打磨，绝大部分的功能都有详细说明，请仔细阅读，节约自己和他人的时间；</p></li><li><p>本指南中提到的：”<strong>博客配置</strong>“ 指的 Hexo 博客目录下的 <code>_config.yml</code>，”<strong>主题配置</strong>“ 指的是 <code>theme/fluid/_config.yml</code> 或者 <code>_config.fluid.yml</code> ，注意区分；</p></li><li><p>本指南中提到的 <code>source</code> 目录都指的是博客目录下的 <code>source</code> 文件夹，不推荐修改主题内 <code>source</code> 目录；</p></li><li><p>每次无论 <code>hexo g</code> 或 <code>hexo s</code>，都最好先使用 <code>hexo clean</code> 清除本地缓存；</p></li><li><p>页面结果以本地 <code>hexo s</code> 为准，部署后的异常大部分是线上缓存原因，在确认没有报错的情况下，等待若干时间后即可正常；</p></li><li><p>由于主题的不同版本会存在配置差异，本指南以最新版本为准。<br>:::</p></li></ul><p>本指南不包括所有的配置说明，几乎每个配置在<strong>主题配置</strong>中都有注释，可配合指南共同参考使用。</p><p>另外本指南仅包含主题范围内的使用说明，如果是 Hexo 的使用或者 Hexo 插件的使用，请查阅各自的文档。</p><p>若存在其他主题相关的疑问请在 <a href="https://github.com/fluid-dev/hexo-theme-fluid/issues/new">issues</a> 留言。</p><h2 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h2><h3 id="覆盖配置"><a href="#覆盖配置" class="headerlink" title="覆盖配置"></a>覆盖配置</h3><p>:::tip<br>覆盖配置可以使<strong>主题配置</strong>放置在 fluid 目录之外，避免在更新主题时丢失自定义的配置。</p><p>通过 Npm 安装主题的用户可忽略，其他用户建议学习使用。<br>:::</p><p>Hexo 5.0.0 版本以上的用户，在博客目录下创建 <code>_config.fluid.yml</code> 文件，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 全部配置（或部分配置）复制过去。</p><p>以后如果修改任何主题配置，都只需修改 <code>_config.fluid.yml</code> 的配置即可。</p><p>注意：</p><ul><li>只要存在于 <code>_config.fluid.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.fluid.yml</code> 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的，比如：</li></ul><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">icons:</span>  <span class="hljs-comment"># 不要把 icon 注释掉，否则无法覆盖配置</span><br>    <span class="hljs-comment"># - { class: 'iconfont icon-github-fill', link: 'https://github.com' }</span><br>    <span class="hljs-comment"># - { class: 'iconfont icon-wechat-fill', qrcode: '/img/favicon.png' }</span><br></code></pre></td></tr></tbody></table></figure><details>  <summary>Hexo 低于 5.0.0 版本点击这里</summary><p>必须确保 Hexo 版本不低于 3.0.0，使用方式：</p><ol><li>进入博客目录的 <code>source/_data</code> 目录（如不存在则创建）；</li><li>在 <code>_data</code> 文件夹下创建 <code>fluid_config.yml</code> 文件，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 全部配置（或部分配置）复制到 <code>fluid_config.yml</code> 中；</li><li>以后配置都在 <code>fluid_config.yml</code> 中修改，配置会在 <code>hexo g</code> 时自动覆盖。</li></ol></details><h3 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a>静态资源</h3><p>所有静态资源文件的 Url 可以通过<strong>主题配置</strong>中的 <code>static_prefix</code> 配置项修改。</p><p>比如需要指定公共 CDN 的 JQuery 库，只需将原配置改为：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">static_prefix:</span><br>  <span class="hljs-comment"># ...</span><br>  <span class="hljs-attr">jquery:</span> <span class="hljs-string">https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/</span><br></code></pre></td></tr></tbody></table></figure><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><ul><li><p>已集成 hexo-generator-search 插件，若已安装其他搜索插件请关闭，以避免生成多余的索引文件。</p></li><li><p>默认在根目录生成并使用 <code>local-search.xml</code>。</p></li></ul><h3 id="页面顶部大图"><a href="#页面顶部大图" class="headerlink" title="页面顶部大图"></a>页面顶部大图</h3><ul><li>图片来源</li></ul><p>主题配置中，每个页面都有名为 <code>banner_img</code> 的属性，可以使用本地图片的相对路径，也可以为外站链接，比如：</p><p>指向本地图片：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/bg/example.jpg</span>   <span class="hljs-comment"># 对应存放在 /source/img/bg/example.jpg</span><br></code></pre></td></tr></tbody></table></figure><p>指向外站链接：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">banner_img:</span> <span class="hljs-string">https://static.zkqiang.cn/example.jpg</span><br></code></pre></td></tr></tbody></table></figure><p>:::tip<br>如果是本地图片，目录文件夹可自定义，但必须在 source 目录下，博客与主题的 source 目录最终会合并，因此优先选择博客的 source。</p><p>图片大小建议压缩到 1MB 以内，否则会严重拖慢页面加载。<br>:::</p><ul><li>高度</li></ul><p>鉴于每个人的喜好不同，开放对页面 <code>banner_img</code> 高度的控制。</p><p><strong>主题配置</strong>中，每个页面对应的 <code>banner_img_height</code> 属性，有效值为 0 - 100。100 即为全屏，个人建议 70 以上。</p><ul><li>蒙版透明度</li></ul><p><strong>主题配置</strong>中，每个页面对应的 <code>banner_mask_alpha</code> 属性，有效值为 0 - 1.0， 0 是完全透明（无蒙版），1 是完全不透明</p><p>::: tip<br>每篇文章可单独设置 Banner，具体见文章页设置</p><p>本主题不支持固定背景（fixed），原因：</p><ol><li>与目前代码结构有较大冲突，需要大量修改</li><li><code>fixed</code> 在移动端兼容性很差<br>:::</li></ol><h3 id="博客标题"><a href="#博客标题" class="headerlink" title="博客标题"></a>博客标题</h3><p>页面左上角的博客标题，默认使用<strong>博客配置</strong>中的 <code>title</code>，这个配置同时控制着网页在浏览器标签中的标题。</p><p>如需单独区别设置，可在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">blog_title:</span> <span class="hljs-string">博客标题</span><br></code></pre></td></tr></tbody></table></figure><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> { <span class="hljs-attr">key:</span> <span class="hljs-string">'home'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'/'</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">'iconfont icon-home-fill'</span> }<br>    <span class="hljs-bullet">-</span> { <span class="hljs-attr">key:</span> <span class="hljs-string">'tag'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'/tags/'</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">'iconfont icon-tags-fill'</span> }<br>    <span class="hljs-bullet">-</span> { <span class="hljs-attr">key:</span> <span class="hljs-string">'about'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'/about/'</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">'iconfont icon-user-fill'</span>, <span class="hljs-attr">name:</span> <span class="hljs-string">'联系我'</span> }<br></code></pre></td></tr></tbody></table></figure><ul><li><code>key</code>: 用于关联有<a href="/guide/#%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE">语言配置</a>，如不存在关联则显示 key 本身的值</li><li><code>link</code>: 跳转链接</li><li><code>icon</code>: 图标的 css class，可以省略（即没有图标），主题内置图标详见<a href="/icon/">这里</a></li><li><code>name</code>: 强制使用此名称显示（不再按语言配置显示），可省略</li></ul><p>另外支持二级菜单（下拉菜单），配置写法如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-bullet">-</span> {<br>      <span class="hljs-attr">key:</span> <span class="hljs-string">'文档'</span>,<br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">'iconfont icon-books'</span>,<br>      <span class="hljs-attr">submenu:</span> [<br>        { <span class="hljs-attr">key:</span> <span class="hljs-string">'主题博客'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'https://hexo.fluid-dev.com/'</span> },<br>        { <span class="hljs-attr">key:</span> <span class="hljs-string">'配置指南'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'https://hexo.fluid-dev.com/docs/guide/'</span> },<br>        { <span class="hljs-attr">key:</span> <span class="hljs-string">'图标用法'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'https://hexo.fluid-dev.com/docs/icon/'</span> }<br>      ]<br>  }<br></code></pre></td></tr></tbody></table></figure><h3 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h3><p>懒加载又称延迟加载。开启后，当图片或评论插件滚动到可见范围内才会加载，可以大幅提高打开网页的速度。</p><p>该功能默认开启，可以在<strong>主题配置</strong>中修改参数：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">lazyload:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">loading_img:</span> <span class="hljs-string">/img/loading.gif</span><br>  <span class="hljs-attr">onlypost:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">offset_factor:</span> <span class="hljs-number">2</span><br></code></pre></td></tr></tbody></table></figure><p><code>loading_img</code>: 指定加载时的占位图片</p><p><code>onlypost</code>: 为 true 时，懒加载仅在文章页生效，如果自定义页面需要使用，可以在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里指定 <code>lazyload: true</code></p><p><code>offset_factor</code>: 触发加载的偏移倍数，基数是视窗高度（即提前 N 屏高度触发加载），可根据部署环境的请求速度调节</p><h3 id="全局字体"><a href="#全局字体" class="headerlink" title="全局字体"></a>全局字体</h3><p>所有页面统一字体的字号和字族可以通过<strong>主题配置</strong>中的下列配置项设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">font:</span>  <span class="hljs-comment"># 主题字体配置</span><br>  <span class="hljs-attr">font_size:</span> <span class="hljs-string">16px</span>        <span class="hljs-comment"># 全局字号</span><br>  <span class="hljs-attr">font_family:</span>           <span class="hljs-comment"># 全局字体族</span><br>  <span class="hljs-attr">code_font_size:</span> <span class="hljs-number">85</span><span class="hljs-string">%</span>    <span class="hljs-comment"># 代码的字号</span><br></code></pre></td></tr></tbody></table></figure><p>关于字体族（<code>font-family</code>）如果不了解可以看<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family">这篇文章</a>先了解一下。</p><p>需要注意：</p><ul><li>最好使用系统自带的字体，否则需要通过<a href="/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义功能</a>额外引入 <code>@font-face</code>，字体一般较大，不建议引入；</li><li>应当至少添加一个通用的字体族名（如 serif，具体见上方链接文章）。</li></ul><p>如果想设置单独的页面，可以直接在 markdown 里通过 style 标签实现：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html">---<br>title: example<br>---<br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br><span class="css">  <span class="hljs-comment">/* 设置整个页面的字体 */</span></span><br><span class="css">  <span class="hljs-selector-tag">html</span>, <span class="hljs-selector-tag">body</span>, <span class="hljs-selector-class">.markdown-body</span> {</span><br><span class="css">    <span class="hljs-attribute">font-family</span>: KaiTi,<span class="hljs-string">"Microsoft YaHei"</span>,Georgia, sans, serif;</span><br><span class="css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;</span><br>  }<br><br><span class="css">  <span class="hljs-comment">/* 只设置 markdown 字体 */</span></span><br>  .markdown-body {<br><span class="css">    <span class="hljs-attribute">font-family</span>: KaiTi,<span class="hljs-string">"Microsoft YaHei"</span>,Georgia, sans, serif;</span><br><span class="css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;</span><br>  }<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><h3 id="网页统计"><a href="#网页统计" class="headerlink" title="网页统计"></a>网页统计</h3><p>目前支持多种统计网站，开启后按需填入 Key 或 ID 即可。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 默认为false，启用网页统计改为true即可</span><br>  <span class="hljs-attr">baidu:</span>  <span class="hljs-comment"># 百度统计的Key，参见 https://tongji.baidu.com/sc-web/10000033910/home/site/getjs?siteId=13751376 代码获取中 hm.js? 后边的字符串</span><br>  <span class="hljs-attr">google:</span>  <span class="hljs-comment"># Google统计的Tracking ID，参见 https://analytics.google.com/analytics/web/</span><br>  <span class="hljs-attr">tencent:</span>  <span class="hljs-comment"># 腾讯统计的H5 App id，参见 https://mta.qq.com/h5/manage/ctr_app_manage (开启高级功能才有cid)</span><br>    <span class="hljs-attr">sid:</span><br>    <span class="hljs-attr">cid:</span><br>  <span class="hljs-attr">woyaola:</span>  <span class="hljs-comment"># 51.la站点统计ID，参见 https://www.51.la/user/site/index</span><br>  <span class="hljs-attr">cnzz:</span>  <span class="hljs-comment"># 友盟/cnzz站点统计web_id，参见 https://web.umeng.com/main.php?c=site&amp;a=show</span><br>  <span class="hljs-attr">leancloud:</span>  <span class="hljs-comment"># LeanCloud 计数统计，可用于 PV UV 展示，如果 web_analytics.enable 没有开启，PV UV 展示只会查询，不会增加</span><br>    <span class="hljs-attr">app_id:</span><br>    <span class="hljs-attr">app_key:</span><br>    <span class="hljs-attr">server_url:</span>  <span class="hljs-comment"># REST API 服务器地址，国际版不填</span><br></code></pre></td></tr></tbody></table></figure><h3 id="展示-PV-与-UV-统计"><a href="#展示-PV-与-UV-统计" class="headerlink" title="展示 PV 与 UV 统计"></a>展示 PV 与 UV 统计</h3><p>页脚可以展示 PV 与 UV 统计数据，目前支持两种数据来源：<a href="https://www.leancloud.cn/">LeanCloud</a> 与 <a href="http://busuanzi.ibruce.info/">不蒜子</a>。</p><p>相关<strong>主题配置</strong>如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">footer:</span><br>  <span class="hljs-attr">statistics:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">source:</span> <span class="hljs-string">"busuanzi"</span>  <span class="hljs-comment"># 可选 leancloud | busuanzi  根据自己需求选择</span><br>    <span class="hljs-attr">pv_format:</span> <span class="hljs-string">"总访问量 {} 次"</span>  <span class="hljs-comment"># 显示的文本，{}是数字的占位符（必须包含)，下同</span><br>    <span class="hljs-attr">uv_format:</span> <span class="hljs-string">"总访客数 {} 人"</span><br></code></pre></td></tr></tbody></table></figure><p>:::tip<br>不蒜子不需要申请账号，直接开启即可，但有时候会响应缓慢拖慢整个页面加载。</p><p>不蒜子在 localhost 域名下显示的不是真正的数据，因此无需在意。</p><p>LeanCloud 使用前需要申请账号（国内需要身份认证），然后在 <code>web_analytics</code> 配置项中将 <code>leancloud</code> API 相关参数填上才能生效。</p><p>LeanCloud 在 localhost 域名下不会增加数据。</p><p>如果参数填写错误或者接口异常，不会显示数据，请在浏览器控制台排查具体原因。<br>:::</p><h3 id="语言配置"><a href="#语言配置" class="headerlink" title="语言配置"></a>语言配置</h3><p>不同语言会影响一些主题自带的文字。</p><p>设置语言是在<strong>博客配置</strong>中，需要对应 <code>fluid/languages/</code> 目录内的配置文件名:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br></code></pre></td></tr></tbody></table></figure><p>你可以在主题 <a href="https://github.com/fluid-dev/hexo-theme-fluid/tree/master/languages">languages</a> 目录里查看支持哪些语言，只要上面的配置的值和文件名相同即可。</p><p>:::warning</p><p>下面的覆盖配置功能需要 Fluid 1.9.0-beta 版本</p><p>:::</p><p>你也可以使用类似于覆盖配置的方式去自定义语言，可按如下操作：</p><ol><li>进入博客目录的 <code>source/_data</code> 目录（如不存在则创建），创建 <code>languages</code> 文件夹；</li><li>在 <code>_languages</code> 文件夹下创建 <code>xxx.yml</code> 文件（<code>xxx</code> 替换为对应语言的代码，例如 <code>zh-CN</code>）</li><li>主题 <a href="https://github.com/fluid-dev/hexo-theme-fluid/tree/master/languages">languages</a> 目录下对应语言的配置内容复制到 <code>xxx.yml</code> 中；</li><li>以后配置都在 <code>xxx.yml</code> 中修改，配置会在 <code>hexo g</code> 时自动覆盖。</li></ol><p>当然你可以按这个方法创建一份其他语言的配置。</p><h3 id="强制全局-HTTPS"><a href="#强制全局-HTTPS" class="headerlink" title="强制全局 HTTPS"></a>强制全局 HTTPS</h3><p>当你的域名升级到 HTTPS 后，可能之前存在部分图片等资源使用的是 HTTP，这时混用出现网页报错，造成图片无法显示。</p><p>控制台里也会出现报错：<code>Mixed Content: The page at 'https://xxx' was loaded over HTTPS</code>。</p><p>这种情况可以在<strong>主题配置</strong>中开启此配置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">force_https:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></tbody></table></figure><p>即可将所有请求强制升级为 HTTPS（如是外部资源，需要本身支持 HTTPS）。</p><h3 id="二级站点路径"><a href="#二级站点路径" class="headerlink" title="二级站点路径"></a>二级站点路径</h3><p>如果你的博客部署在二级路径（如: xxx.com/blog/），需要修改<strong>博客配置</strong>中：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">url:</span> <span class="hljs-string">http://xxx.com/blog</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/blog/</span><br></code></pre></td></tr></tbody></table></figure><h3 id="自定义-JS-CSS-HTML"><a href="#自定义-JS-CSS-HTML" class="headerlink" title="自定义 JS / CSS / HTML"></a>自定义 JS / CSS / HTML</h3><p>如果你想引入外部的 JS、CSS（比如 IconFont）或 HTML，可以通过以下<strong>主题配置</strong>，具体见注释：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 指定自定义 js 文件路径，路径是相对 source 目录</span><br><span class="hljs-attr">custom_js:</span> <span class="hljs-string">/js/custom.js</span><br><br><span class="hljs-comment"># 指定自定义 css 文件路径，路径是相对 source 目录</span><br><span class="hljs-attr">custom_css:</span> <span class="hljs-string">/css/custom.css</span><br><br><span class="hljs-comment"># 自定义 &lt;head&gt; 节点中的 HTML 内容</span><br><span class="hljs-attr">custom_head:</span> <span class="hljs-string">'&lt;meta name="key" content="value"&gt;'</span><br><br><span class="hljs-comment"># 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突</span><br><span class="hljs-attr">custom_html:</span> <span class="hljs-string">'&lt;link rel="stylesheet" href="//at.alicdn.com/t/font_1067060_qzomjdt8bmp.css"&gt;'</span><br></code></pre></td></tr></tbody></table></figure><p>另外 <code>custom_js</code> 和 <code>custom_css</code> 都可以指定多个路径：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_css:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/css/custom.css</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">//at.alicdn.com/t/font_1736178_ijqayz9ro8k.css</span><br></code></pre></td></tr></tbody></table></figure><h3 id="暗色模式"><a href="#暗色模式" class="headerlink" title="暗色模式"></a>暗色模式</h3><p>主题暗色模式，开启后菜单中会出现切换按钮</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">dark_mode:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">default:</span> <span class="hljs-string">auto</span><br></code></pre></td></tr></tbody></table></figure><p><code>default</code> 是暗色默认的模式，可选参数：auto / light / dark</p><p>选择 auto 时优先遵循 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme">prefers-color-scheme</a>，如果不支持则按用户本地时间 18 点到次日 6 点之间进入暗色模式。</p><p>无论选择任何模式，当用户手动切换后会在用户本地保存选项，该用户不再按照默认模式。</p><h3 id="OpenGraph"><a href="#OpenGraph" class="headerlink" title="OpenGraph"></a>OpenGraph</h3><p><a href="https://ogp.me/">OpenGraph</a> 是 Facebook 发布的一套网页元信息标记协议，可以让任何页面成为社交平台中的富媒体标签。</p><p>本主题基于 <a href="https://hexo.io/docs/helpers.html#open-graph">Hexo 内置方法</a>实现了该功能，并且默认开启，但如果想在 Facebook 等平台更好地使用，需要在<strong>主题配置</strong>完善如下配置项：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">open_graph:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">twitter_card:</span> <span class="hljs-string">summary_large_image</span><br>  <span class="hljs-attr">twitter_id:</span><br>  <span class="hljs-attr">twitter_site:</span><br>  <span class="hljs-attr">google_plus:</span><br>  <span class="hljs-attr">fb_admins:</span><br>  <span class="hljs-attr">fb_app_id:</span><br></code></pre></td></tr></tbody></table></figure><p>另外你可以在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 设置字段来指定单个页面的 OpenGraph 属性：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">og_img:</span> <span class="hljs-string">/img/og.png</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h2 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h2><h3 id="Slogan-打字机"><a href="#Slogan-打字机" class="headerlink" title="Slogan(打字机)"></a>Slogan(打字机)</h3><p>首页大图中的标题文字，可在<strong>主题配置</strong>中设定是否开启：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">slogan:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">text:</span> <span class="hljs-string">这是一条</span> <span class="hljs-string">Slogan</span><br>    <span class="hljs-attr">api:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">"https://v1.hitokoto.cn/"</span><br>      <span class="hljs-attr">method:</span> <span class="hljs-string">"GET"</span><br>      <span class="hljs-attr">headers:</span> {}<br>      <span class="hljs-attr">keys:</span> [<span class="hljs-string">"hitokoto"</span>]<br></code></pre></td></tr></tbody></table></figure><p>如果 <code>text</code> 为空则按<strong>博客配置</strong>的 <code>subtitle</code> 显示。</p><p>另外支持通过 API 接口获取内容，如果请求失败则按 text 字段显示：</p><p><code>url</code>: API 地址，必须返回的是一个 JSON 格式</p><p><code>method</code>: 请求方法，可选 <code>GET</code>、<code>POST</code>、<code>PUT</code></p><p><code>headers</code>: 请求头，如果接口需要传一些验证的头部信息，在这里设置</p><p><code>keys</code>: 从请求结果获取字符串的取值字段，程序会根据列表中的字段依次取值，最终需要获得到一个字符串</p><p>例如 API 返回的内容为：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs json">[<br>    {<br>        <span class="hljs-attr">"data"</span>: {<br>            <span class="hljs-attr">"author"</span>: <span class="hljs-string">"Fluid"</span>,<br>            <span class="hljs-attr">"content"</span>: <span class="hljs-string">"An elegant theme"</span><br>        }<br>    },<br>    {<br>        <span class="hljs-attr">"data"</span>: {<br>            <span class="hljs-attr">"author"</span>: <span class="hljs-string">"Test"</span>,<br>            <span class="hljs-attr">"content"</span>: <span class="hljs-string">"Test content"</span><br>        }<br>    }<br>]<br></code></pre></td></tr></tbody></table></figure><p>设置 <code>keys: ["data", "content"]</code>，程序会如下执行：</p><ol><li>由于返回体是列表，程序会首先获取第一个元素（不是列表则跳过此步骤）</li><li>通过第一个 key <code>data</code> 获取值，发现不是一个字符串，继续执行</li><li>通过第二个 key <code>content</code> 获取值，发现是一个字符串，返回内容；如果不是字符串则获取失败，使用 text 值</li></ol><p>:::warning<br>如果 API 没有请求成功，请打开浏览器的控制台（console）检查是否报错，其中如果有包含 <code>No Access-Control-Allow-Origin header</code> 的报错，说明该 API 有跨域限制，这必须从 API 后端服务来解决。<br>:::</p><p>标题文字默认开启了打字机动效，相关配置如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">fun_features:</span><br>  <span class="hljs-attr">typing:</span> <span class="hljs-comment"># 为 subtitle 添加打字机效果</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">typeSpeed:</span> <span class="hljs-number">70</span> <span class="hljs-comment"># 打印速度</span><br>    <span class="hljs-attr">cursorChar:</span> <span class="hljs-string">"_"</span> <span class="hljs-comment"># 游标字符</span><br>    <span class="hljs-attr">loop:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 是否循环播放效果</span><br></code></pre></td></tr></tbody></table></figure><p>:::tip<br>请求 API 的功能必须同时开启打字机动效才能生效<br>:::</p><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>开关自动摘要（默认开启）：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">auto_excerpt:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></tbody></table></figure><p>若要手动指定摘要，使用 <code>&lt;!-- more --&gt;</code> MD文档里划分，如：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">正文的一部分作为摘要<br>&lt;!-- more --&gt;<br>余下的正文<br></code></pre></td></tr></tbody></table></figure><p>或者在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里设置 <code>excerpt</code> 字段，如：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">这是标题</span><br><span class="hljs-attr">excerpt:</span> <span class="hljs-string">这是摘要</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><p>:::tip<br>优先级: 手动摘要 &gt; 自动摘要</p><p>如果关闭自动摘要，并且没有设置手动摘要，摘要区域空白</p><p>无论哪种摘要都最多显示 3 行，当屏幕宽度不足时会隐藏部分摘要。<br>:::</p><h3 id="文章跳转方式"><a href="#文章跳转方式" class="headerlink" title="文章跳转方式"></a>文章跳转方式</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">post_url_target:</span> <span class="hljs-string">_self</span><br></code></pre></td></tr></tbody></table></figure><p>可选值：</p><ol><li>_blank：新标签页打开</li><li>_self：当前标签页打开</li></ol><h3 id="文章信息"><a href="#文章信息" class="headerlink" title="文章信息"></a>文章信息</h3><p>可配置隐藏包括发布时间、分类、标签。</p><p>经过测试，如果首页的文章列表中没有略缩图和摘要，标题+文章信息的显示方式会使页面过于拥挤，所以给出此项配置供喜欢首页只显示文章标题的同学使用。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">post_meta:</span><br>    <span class="hljs-attr">date:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">category:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">tag:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></tbody></table></figure><h3 id="隐藏文章"><a href="#隐藏文章" class="headerlink" title="隐藏文章"></a>隐藏文章</h3><p>如果想把某些文章隐藏起来，不在首页和其他分类里展示，可以在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 中配置 <code>hide: true</code> 属性。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">hide:</span> <span class="hljs-literal">true</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></tbody></table></figure><p>:::tip<br>隐藏会使文章在分类和标签类里都不显示</p><p>隐藏后依然可以通过文章链接访问<br>:::</p><h3 id="文章排序"><a href="#文章排序" class="headerlink" title="文章排序"></a>文章排序</h3><p>如果想手动将某些文章固定在首页靠前的位置，可以在安装 <code>hexo-generator-index</code> &gt;= 2.0.0 版本的情况下，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 中配置 <code>sticky</code> 属性：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">sticky:</span> <span class="hljs-number">100</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></tbody></table></figure><p><code>sticky</code> 数值越大，该文章越靠前，达到类似于置顶的效果，其他未设置的文章依然按默认排序。</p><p>当文章设置了 <code>sticky</code> 后，主题会默认在首页文章标题前增加一个图标，来标识这是一个置顶文章，你可以通过<strong>主题配置</strong>去关闭或修改这个功能：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">post_sticky:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">'iconfont icon-top'</span><br></code></pre></td></tr></tbody></table></figure><p><code>icon</code> 可以通过<a href="/icon/">自定义图标</a>修改为其他图标。</p><h2 id="文章页"><a href="#文章页" class="headerlink" title="文章页"></a>文章页</h2><h3 id="文章在首页的封面图"><a href="#文章在首页的封面图" class="headerlink" title="文章在首页的封面图"></a>文章在首页的封面图</h3><p>对于单篇文章，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 中配置 <code>index_img</code> 属性。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></tbody></table></figure><p>和 Banner 配置相同，<code>/img/example.jpg</code> 对应的是存放在 <code>/source/img/example.jpg</code> 目录下的图片（目录也可自定义，但必须在 source 目录下）。</p><p>也可以使用外链 Url 的绝对路径。</p><p>如果想统一给文章设置一个默认图片（文章不设置 <code>index_img</code> 则默认使用这张图片），可在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">default_index_img:</span> <span class="hljs-string">/img/example.jpg</span><br></code></pre></td></tr></tbody></table></figure><p>当 <code>default_index_img</code> 和 <code>index_img</code> 都为空时，该文章在首页将不显示图片。</p><h3 id="文章页顶部大图"><a href="#文章页顶部大图" class="headerlink" title="文章页顶部大图"></a>文章页顶部大图</h3><p>默认显示<strong>主题配置</strong>中的 <code>post.banner_img</code>，如需要设置单个文章的 Banner，在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 中指定 <code>banner_img</code> 属性。</p><p>本地图片存放位置同上。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/post_banner.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></tbody></table></figure><h3 id="文章内容图片"><a href="#文章内容图片" class="headerlink" title="文章内容图片"></a>文章内容图片</h3><p>本地图片存放位置同上。</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![](/img/example.jpg)<br></code></pre></td></tr></tbody></table></figure><h3 id="日期-字数-阅读时长-阅读数"><a href="#日期-字数-阅读时长-阅读数" class="headerlink" title="日期/字数/阅读时长/阅读数"></a>日期/字数/阅读时长/阅读数</h3><p>显示在文章页大标题下的文章信息，除了作者和阅读次数，其他功能都是默认开启的。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">meta:</span><br>    <span class="hljs-attr">author:</span>  <span class="hljs-comment"># 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">date:</span>  <span class="hljs-comment"># 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">"dddd, MMMM Do YYYY, h:mm a"</span>  <span class="hljs-comment"># 格式参照 ISO-8601 日期格式化</span><br>    <span class="hljs-attr">wordcount:</span>  <span class="hljs-comment"># 字数统计</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">"{} 字"</span>  <span class="hljs-comment"># 显示的文本，{}是数字的占位符（必须包含)，下同</span><br>    <span class="hljs-attr">min2read:</span>  <span class="hljs-comment"># 阅读时间</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">"{} 分钟"</span><br>    <span class="hljs-attr">views:</span>  <span class="hljs-comment"># 阅读次数</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">"leancloud"</span>  <span class="hljs-comment"># 统计数据来源，可选：leancloud | busuanzi   注意不蒜子会间歇抽风</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">"{} 次"</span><br></code></pre></td></tr></tbody></table></figure><p>:::tip<br>日期格式必须遵循 ISO-8601 规范，否则无法正常显示；</p><p>其他格式必须包括 <code>{}</code> 符号代替数字，文字可自由设置。<br>:::</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">code:</span><br>  <span class="hljs-attr">copy_btn:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">highlight:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">lib:</span> <span class="hljs-string">"highlightjs"</span><br>    <span class="hljs-attr">highlightjs:</span><br>      <span class="hljs-attr">style:</span> <span class="hljs-string">'Github Gist'</span><br>      <span class="hljs-attr">bg_color:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">prismjs:</span><br>      <span class="hljs-attr">style:</span> <span class="hljs-string">"default"</span><br>      <span class="hljs-attr">preprocess:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></tbody></table></figure><p><code>copy_btn</code>: 是否开启复制代码的按钮</p><p><code>line_number</code>: 是否开启行号</p><p><code>highlight</code>: 是否开启代码高亮</p><p><code>lib</code>: 选择生成高亮的库，可选项: highlightjs、prismjs，对应下面两组配置，高亮的配置说明具体见<strong>主题配置</strong>中的注释</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>开启评论需要在<strong>主题配置</strong>中开启并指定评论模块：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">disqus</span><br></code></pre></td></tr></tbody></table></figure><p>然后在下方还要设置对应评论模块的参数，比如 disqus 对应设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">disqus:</span><br>  <span class="hljs-attr">shortname:</span> <span class="hljs-string">fluid</span><br></code></pre></td></tr></tbody></table></figure><p>当前支持的评论插件如下：</p><ul><li><a href="https://valine.js.org/configuration.html">Valine</a> :基于 LeanCloud</li><li><a href="https://waline.js.org/">Waline</a> : 从 Valine 衍生而来，额外增加了服务端和多种功能</li><li><a href="https://github.com/gitalk/gitalk">Gitalk</a> : 基于 GitHub Issues</li><li><a href="https://utteranc.es/">Utterances</a> : 基于 GitHub Issues</li><li><a href="https://disqus.com/">Disqus</a> : 基于第三方的服务</li><li><a href="http://changyan.kuaizhan.com/">畅言</a> : 基于第三方的服务</li><li><a href="https://www.livere.com/">来必力(Livere)</a> : 基于第三方的服务</li><li><a href="https://remark42.com/">Remark42</a> : 需要自托管服务端</li><li><a href="https://twikoo.js.org/">Twikoo</a> : 基于腾讯云开发</li><li><a href="https://cusdis.com/">Cusdis</a> : 基于第三方服务或自托管服务</li></ul><p>使用方式和参数设置请点击上面链接查看各自的文档。</p><p>若想自己添加新的评论插件，可通过<a href="/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义功能</a>加入 <code>&lt;script&gt;</code>，并判断是否存在 <code>#comments</code> 元素进行挂载。</p><p>:::tip<br>国内用户推荐使用 Valine、Waline 或者 twikoo</p><p>如果设置后评论模块没有显示，说明配置没有完成，或者配置有误出现报错（请在浏览器控制台查看具体报错）<br>:::</p><p>如果想在某个文章页关闭评论，或者想在某个自定义页面开启评论，可以通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: 'type'</code> 来开启指定的评论插件。</p><p>例如在关于页开启并指定评论插件：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">关于页</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">comment:</span> <span class="hljs-string">'valine'</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是正文内容</span><br></code></pre></td></tr></tbody></table></figure><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>主题内置了脚注语法支持，可以在文章末尾自动生成带有锚点的脚注，该功能在<strong>主题配置</strong>中默认开启：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">footnote:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">header:</span> <span class="hljs-string">''</span><br></code></pre></td></tr></tbody></table></figure><p>脚注语法如下：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这是一句话[^1]<br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">这是对应的脚注</span><br></code></pre></td></tr></tbody></table></figure><p>更优雅的使用方式，是将脚注写在文末，比如：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown">正文<br><br><span class="hljs-section">## 参考</span><br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">参考资料1</span><br>[<span class="hljs-symbol">^2</span>]: <span class="hljs-link">参考资料2</span><br></code></pre></td></tr></tbody></table></figure><p>当然你也可以通过修改上方配置项 <code>header</code> 来自动加入节标题，如下所示：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">footnote:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">header:</span> <span class="hljs-string">'&lt;h2&gt;参考&lt;/h2&gt;'</span>  <span class="hljs-comment"># 等同于手动写 `## 参考`</span><br></code></pre></td></tr></tbody></table></figure><h3 id="Tag-插件"><a href="#Tag-插件" class="headerlink" title="Tag 插件"></a>Tag 插件</h3><h4 id="便签"><a href="#便签" class="headerlink" title="便签"></a>便签</h4><p>在 markdown 中加入如下的代码来使用便签：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">{% note success %}<br>文字 或者 <span class="hljs-code">`markdown`</span> 均可<br>{% endnote %}<br></code></pre></td></tr></tbody></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"note note-primary"</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>可选便签：</p><p class="note note-primary">primary</p><p class="note note-secondary">secondary</p><p class="note note-success">success</p><p class="note note-danger">danger</p><p class="note note-warning">warning</p><p class="note note-info">info</p><p class="note note-light">light</p><p>:::warning<br>使用时 <code>{% note primary %}` 和 `{% endnote %}</code> 需单独一行，否则会出现问题<br>:::</p><h4 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h4><p>在 markdown 中加入如下的代码来使用 Label：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">{% label primary @text %}<br></code></pre></td></tr></tbody></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"label label-primary"</span>&gt;</span>Label<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>可选 Label：</p><p><span class="label label-primary">primary</span><br><span class="label label-default">default</span><br><span class="label label-info">info</span><br><span class="label label-success">success</span><br><span class="label label-warning">warning</span><br><span class="label label-danger">danger</span></p><p>:::warning<br>若使用 <code>{% label primary @text %}</code>，text 不能以 @ 开头<br>:::</p><h4 id="勾选框"><a href="#勾选框" class="headerlink" title="勾选框"></a>勾选框</h4><p>在 markdown 中加入如下的代码来使用 Checkbox：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">{% cb text, checked?, incline? %}<br></code></pre></td></tr></tbody></table></figure><p>text：显示的文字<br>checked：默认是否已勾选，默认 false<br>incline: 是否内联（可以理解为后面的文字是否换行），默认 false</p><p>示例：</p><div>  <input type="checkbox" disabled="" checked=""><div>            <input type="checkbox" disabled="">普通示例          </div></div><div>  <input type="checkbox" disabled="" checked=""><div>            <input type="checkbox" disabled="" checked="checked">默认选中          </div></div><input type="checkbox" disabled="">            <input type="checkbox" disabled="">内联示例           后面文字不换行<div>  <input type="checkbox" disabled=""><input type="checkbox" disabled=""> 也可以只传入一个参数，文字写在后边（这样不支持外联）</div><h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><p>你可以在 markdown 中加入如下的代码来使用 Button：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">{% btn url, text, title %}<br></code></pre></td></tr></tbody></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"url"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"title"</span>&gt;</span>text<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>url：跳转链接<br>text：显示的文字<br>title：鼠标悬停时显示的文字（可选）</p><p><a class="btn" href="javascript:;" title="title">text</a></p><h4 id="组图"><a href="#组图" class="headerlink" title="组图"></a>组图</h4><p>如果想把多张图片按一定布局组合显示，你可以在 markdown 中按如下格式：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">{% gi total n1-n2-... %}<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>  ![](url)<br>{% endgi %}<br></code></pre></td></tr></tbody></table></figure><p>total：图片总数量，对应中间包含的图片 url 数量<br>n1-n2-…：每行的图片数量，可以省略，默认单行最多 3 张图，求和必须相等于 total，否则按默认样式</p><p>如下图为 <code>{% gi 5 3-2 %}</code> 示例，代表共 5 张图，第一行 3 张图，第二行 2 张图。</p><p><img src="/posts/63715.htm/.vuepress/public/group_image.png" alt="Group Images"></p><h3 id="LaTeX-数学公式"><a href="#LaTeX-数学公式" class="headerlink" title="LaTeX 数学公式"></a>LaTeX 数学公式</h3><p>:::tip<br>Hexo 5.0 以上，可尝试 Hexo 官方的 <a href="https://github.com/hexojs/hexo-math">hexo-math</a> 插件，支持更多定制化参数，使用方式参照仓库内的文档，以下介绍的是主题内置的 LaTeX 功能。<br>:::</p><p>当需要使用 <a href="https://www.latex-project.org/help/documentation/">LaTeX</a> 语法的数学公式时，可手动开启本功能，需要完成三步操作：</p><p><strong>1. 设置主题配置</strong></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">math:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">mathjax</span><br></code></pre></td></tr></tbody></table></figure><p><code>specific</code>: 建议开启。当为 true 时，只有在文章 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里指定 <code>math: true</code> 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度。</p><p><code>engine</code>: 公式引擎，目前支持 <code>mathjax</code> 或 <code>katex</code>。</p><p><strong>2. 更换 Markdown 渲染器</strong></p><p>由于 Hexo 默认的 Markdown 渲染器不支持复杂公式，所以必须更换渲染器。</p><p>先卸载原有渲染器：</p><p><code>npm uninstall hexo-renderer-marked --save</code></p><p>然后根据上方配置不同的 <code>engine</code>，推荐更换如下渲染器：</p><p>mathjax:<code>npm install hexo-renderer-pandoc --save</code> <strong>并且还需<a href="https://github.com/jgm/pandoc/blob/master/INSTALL.md">安装 Pandoc</a></strong></p><p>katex: <code>npm install @upupming/hexo-renderer-markdown-it-plus --save</code></p><p><strong>3. 安装完成后执行 <code>hexo clean</code></strong></p><p>书写公式的格式：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">$$<br>E=mc^2<br>$$<br></code></pre></td></tr></tbody></table></figure><p>:::warning</p><p>如果公式没有被正确渲染，请仔细检查是否符合上面三步操作。</p><p>不可以同时安装多个渲染插件，包括 <code>hexo-math</code> 或者 <code>hexo-katex</code> 这类插件，请注意检查 <code>package.json</code>。</p><p>如果更换公式引擎，对应渲染器也要一并更换。</p><p>另外不同的渲染器，可能会导致一些 Markdown 语法不支持。</p><p>自定义页面默认不加载渲染，如需使用，需在 Front-matter 中指定 <code>math: true</code></p><p>:::</p><p>:::tip</p><p>不同的公式引擎有不同的优缺点。</p><p><strong>MathJax</strong></p><p>优点</p><ul><li>对 LaTeX 语法支持全面</li><li>右键点击公式有扩展功能</li></ul><p>缺点</p><ul><li>需要加载 JS，页面加载会比较慢</li></ul><p><strong>KaTeX</strong></p><p>优点</p><ul><li>没有 JS 不会影响页面加载</li></ul><p>缺点</p><ul><li>小部分 LaTeX 不支持</li></ul><p>:::</p><h3 id="Mermaid-流程图"><a href="#Mermaid-流程图" class="headerlink" title="Mermaid 流程图"></a>Mermaid 流程图</h3><p>当需要使用 <a href="http://mermaid-js.github.io/mermaid/#/">Mermaid</a> 渲染流程图时，可手动开启本功能：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">mermaid:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">options:</span><br></code></pre></td></tr></tbody></table></figure><p><code>specific</code>: 建议开启。当为 true 时，只有在文章 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里指定 <code>mermaid: true</code> 才会在文章页启动流程图渲染，以便在页面不包含流程图时提高加载速度。</p><p><code>options</code>: 官方 API 的配置项，具体可见 <a href="http://mermaid-js.github.io/mermaid/#/mermaidAPI">mermaidAPI.js</a></p><p>:::tip<br>自定义页面默认不加载，如需使用，需在 Front-matter 中指定 <code>mermaid: true</code><br>:::</p><p>使用 Mermaid 可以通过内置的 Tag 书写：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs markdown">{% mermaid %}<br>gantt<br>dateFormat  YYYY-MM-DD<br>title Adding GANTT diagram to mermaid<br><br>section A section<br>Completed task            :done,    des1, 2014-01-06,2014-01-08<br>Active task               :active,  des2, 2014-01-09, 3d<br>Future task               :         des3, after des2, 5d<br>Future task2               :         des4, after des3, 5d<br>{% endmermaid %}<br></code></pre></td></tr></tbody></table></figure><p>也可以通过代码块书写：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-code">```mermaid</span><br><span class="hljs-code">classDiagram</span><br><span class="hljs-code">Class01 &lt;|-- AveryLongClass : Cool</span><br><span class="hljs-code">Class03 *-- Class04</span><br><span class="hljs-code">Class05 o-- Class06</span><br><span class="hljs-code">Class07 .. Class08</span><br><span class="hljs-code">Class09 --&gt; C2 : Where am i?</span><br><span class="hljs-code">Class09 --* C3</span><br><span class="hljs-code">Class09 --|&gt; Class07</span><br><span class="hljs-code">Class07 : equals()</span><br><span class="hljs-code">Class07 : Object[] elementData</span><br><span class="hljs-code">Class01 : size()</span><br><span class="hljs-code">Class01 : int chimp</span><br><span class="hljs-code">Class01 : int gorilla</span><br><span class="hljs-code">Class08 &lt;--&gt; C2: Cool label</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight dts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br><span class="hljs-meta">## 归档页</span><br><br>具体见配置文件注释<br><br><span class="hljs-meta">## 分类页</span><br><br>具体见配置文件注释<br><br>[添加分类的方法](https:<span class="hljs-comment">//hexo.io/zh-cn/docs/front-matter)</span><br><br><span class="hljs-meta">## 标签页</span><br><br>标签是以词云的形式展示，标签的大小和颜色会根据标签下的文章数量变化，相关配置如下：<br><br>```yaml<br><span class="hljs-symbol">tag:</span><br><span class="hljs-symbol">  tagcloud:</span><br><span class="hljs-symbol">    min_font:</span> <span class="hljs-number">15</span><br><span class="hljs-symbol">    max_font:</span> <span class="hljs-number">30</span><br><span class="hljs-symbol">    unit:</span> px  <span class="hljs-meta"># 字号单位</span><br><span class="hljs-symbol">    start_color:</span> <span class="hljs-string">"#BBBBEE"</span><br><span class="hljs-symbol">    end_color:</span> <span class="hljs-string">"#337ab7"</span><br></code></pre></td></tr></tbody></table></figure><p>其他配置具体见配置文件注释</p><p><a href="https://hexo.io/zh-cn/docs/front-matter">添加标签的方法</a></p><h2 id="关于页"><a href="#关于页" class="headerlink" title="关于页"></a>关于页</h2><h3 id="创建关于页"><a href="#创建关于页" class="headerlink" title="创建关于页"></a>创建关于页</h3><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page about<br></code></pre></td></tr></tbody></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><br><span class="hljs-string">这里可以写正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></tbody></table></figure><p>:::warning<br><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。<br>:::</p><h3 id="关于信息"><a href="#关于信息" class="headerlink" title="关于信息"></a>关于信息</h3><p>在关于页介绍自己的基础信息，可以在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">/img/avatar.png</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">"Fluid"</span><br>  <span class="hljs-attr">intro:</span> <span class="hljs-string">"An elegant theme for Hexo"</span><br></code></pre></td></tr></tbody></table></figure><h3 id="社交页图标"><a href="#社交页图标" class="headerlink" title="社交页图标"></a>社交页图标</h3><p>在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">icons:</span><br>    <span class="hljs-bullet">-</span> { <span class="hljs-attr">class:</span> <span class="hljs-string">'iconfont icon-github-fill'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'https://github.com'</span>, <span class="hljs-attr">tip:</span> <span class="hljs-string">'GitHub'</span> }<br>    <span class="hljs-bullet">-</span> { <span class="hljs-attr">class:</span> <span class="hljs-string">'iconfont icon-douban-fill'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'https://douban.com'</span>, <span class="hljs-attr">tip:</span> <span class="hljs-string">'豆瓣'</span> }<br>    <span class="hljs-bullet">-</span> { <span class="hljs-attr">class:</span> <span class="hljs-string">'iconfont icon-wechat-fill'</span>, <span class="hljs-attr">qrcode:</span> <span class="hljs-string">'/img/favicon.png'</span> }<br></code></pre></td></tr></tbody></table></figure><ul><li><code>class</code>: 图标的 css class，主题内置图标详见<a href="/icon/">这里</a></li><li><code>link</code>: 跳转链接</li><li><code>tip</code>: 鼠标悬浮在图标上显示的提示文字</li><li><code>qrcode</code>: 二维码图片，当使用此字段后，点击不再跳转，而是悬浮二维码</li></ul><p>:::tip<br>关闭 icons 时注意不要把 <code>icons</code> 这个 key 也一起注释，否则会被<a href="/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE">覆盖配置</a>填充上默认值，请按照如下设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">icons:</span><br>    <span class="hljs-comment"># - { class: 'iconfont icon-github-fill', link: 'https://github.com', tip: 'GitHub' }</span><br>    <span class="hljs-comment"># - { class: 'iconfont icon-douban-fill', link: 'https://douban.com', tip: '豆瓣' }</span><br>    <span class="hljs-comment"># - { class: 'iconfont icon-wechat-fill', qrcode: '/img/favicon.png' }</span><br></code></pre></td></tr></tbody></table></figure><p>:::</p><h3 id="评论-1"><a href="#评论-1" class="headerlink" title="评论"></a>评论</h3><p>开启评论的方式是通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: 'type'</code> 来开启指定的评论插件。</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">comment:</span> <span class="hljs-string">'valine'</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h2 id="友情链接页"><a href="#友情链接页" class="headerlink" title="友情链接页"></a>友情链接页</h2><p>友情链接页用于展示好友的博客入口，默认关闭，开启需要先在 <code>navbar</code> 项中将 <code>links</code> 的注释(#号)删掉：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> { <span class="hljs-attr">key:</span> <span class="hljs-string">'links'</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">'/links/'</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">'iconfont icon-link-fill'</span> }<br></code></pre></td></tr></tbody></table></figure><p>然后找到 <code>links</code> 的配置项，对页面内容进行配置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">links:</span><br>  <span class="hljs-attr">items:</span><br>    <span class="hljs-bullet">-</span> {<br>      <span class="hljs-attr">title:</span> <span class="hljs-string">'Fluid Docs'</span>,<br>      <span class="hljs-attr">intro:</span> <span class="hljs-string">'主题使用指南'</span>,<br>      <span class="hljs-attr">link:</span> <span class="hljs-string">'https://hexo.fluid-dev.com/docs/'</span>,<br>      <span class="hljs-attr">avatar:</span> <span class="hljs-string">'/img/favicon.png'</span><br>    }<br>  <span class="hljs-attr">default_avatar:</span> <span class="hljs-string">/img/avatar.png</span><br></code></pre></td></tr></tbody></table></figure><ul><li><code>title</code>: 友链站的标题</li><li><code>intro</code>: 站点或博主的简介，可省略</li><li><code>link</code>: 跳转链接</li><li><code>avatar</code>: 头像图片，可省略</li><li><code>default_avatar</code>: 成员的默认头像（仅在指定了头像并且加载失败时生效）</li></ul><p>友链页也可以使用自定义区域和评论，使用方式类似于文章页，具体见配置项与相关注释。</p><h2 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h2><h3 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h3><p>如果想单独生成一个页面，步骤和创建「关于页」类似。</p><ol><li>首先用命令行创建页面：</li></ol><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ hexo new page example<br></code></pre></td></tr></tbody></table></figure><ol start="2"><li>创建成功后编辑博客目录下 <code>/source/example/index.md</code>：</li></ol><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">若不填默认是</span> <span class="hljs-string">title</span><br><span class="hljs-meta">---</span><br><br><span class="hljs-string">这里写正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></tbody></table></figure><p>正文默认没有 Markdown 样式，如果希望和文章相同的样式，可以加上：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"markdown-body"</span>&gt;</span><br>正文<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>页面的参数配置可以在<strong>主题配置</strong>中统一设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">page:</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">70</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br></code></pre></td></tr></tbody></table></figure><p>也可以直接在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里单独设置：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br><span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br><span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.5</span><br><span class="hljs-meta">---</span><br><br><span class="hljs-string">这里可以写正文</span><br></code></pre></td></tr></tbody></table></figure><h3 id="评论-2"><a href="#评论-2" class="headerlink" title="评论"></a>评论</h3><p>自定义页面也可以开启评论插件，和关于页的方式相同，通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: 'type'</code> 来开启指定的评论插件：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">comment:</span> <span class="hljs-string">'valine'</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></tbody></table></figure><h2 id="404-页"><a href="#404-页" class="headerlink" title="404 页"></a>404 页</h2><p>404 页是在访问不存在的博客链接时，出现的错误提示页面。</p><p>开启此页面需要在博客的部署环境上配置：</p><ul><li>如果博客部署在云服务器，需要 Nginx 配置文件设置 <code>error_page 404 = /404.html</code>；</li><li>如果部署在 GitHub Pages 上，不需要额外配置，但必须绑定顶级域名才生效；</li><li>其他 OSS 等平台，请参考各平台关于 404 页的配置文档，但并不是所有平台都支持跳转 Html。</li></ul><p>主题包含默认的404页面，你也可以将自定义的 <code>404.html</code> 放置在博客的 <code>source</code> 目录下。</p><h2 id="内置社交图标"><a href="#内置社交图标" class="headerlink" title="内置社交图标"></a>内置社交图标</h2><p>主题内置了一些社交类图标，均来自 <a href="https://www.iconfont.cn/">Iconfont</a>，由于不支持公开展示，因此只能通过图片：</p><p><img src="/posts/63715.htm/.vuepress/public/iconfont.png" alt="内置图标"></p><p>将 <code>icon-</code> 开头的那行填入 css class 即可，例如 <code>iconfont icon-wechat-fill</code>。</p><p>以上主要用在关于页中，当然你也可以通过插入 HTML 的方式用到主题的任何地方。</p><h2 id="自定义图标"><a href="#自定义图标" class="headerlink" title="自定义图标"></a>自定义图标</h2><p><a href="https://www.iconfont.cn/">Iconfont</a>支持用户创建项目来管理和使用图标库，在 <code>图标管理-我的项目</code> 中即可管理和创建项目。将所需图标添加至购物车，再通过购物车添加至所创建的项目中。在项目中可以下载至本地与生成在线链接，Iconfont 支持在阿里云的 CDN 中生成 CSS 或 JS 文件用来调用。</p><p>生成在线链接后，有两种引入方式：</p><ol><li><p>将链接替换到<strong>主题配置</strong>的 <code>iconfont</code> 配置项中，但注意替换后<strong>原内置的图标库将全部失效</strong></p></li><li><p>通过 <a href="/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义 CSS</a> 引入，这样不会替换内置图标库</p></li></ol><p>引入之后，图标第二行的 class 填入配置中的 css class 即可，例如 <code>iconfont icon-email</code>（<strong>注意 <code>iconfont</code> 不能删掉</strong>）。</p><p>在每次有删减项目中图标库目录时，需要点击重新生成链接并替换到配置链接。</p><h2 id="Hexo-注入代码"><a href="#Hexo-注入代码" class="headerlink" title="Hexo 注入代码"></a>Hexo 注入代码</h2><p><a href="https://hexo.io/zh-cn/api/injector.html">Hexo 注入器</a>是 Hexo 5 版本自身加入的一项新功能，所以在所有 Hexo 主题都是支持这个功能的。</p><p>注入器可以将 HTML 片段注入生成页面的 <code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 节点中。</p><p>编写注入代码，需要在博客的根目录下创建 <code>scripts</code> 文件夹，然后在里面任意命名创建一个 js 文件即可。</p><p>例如创建一个 <code>/blog/scripts/example.js</code>，内容为：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo.extend.injector.register(<span class="hljs-string">'body_end'</span>, <span class="hljs-string">'&lt;script src="/jquery.js"&gt;&lt;/script&gt;'</span>, <span class="hljs-string">'default'</span>);<br></code></pre></td></tr></tbody></table></figure><p>上述代码会在生成的页面 <code>&lt;/body&gt;</code> 注入加载 <code>jquery.js</code> 的代码。</p><p><code>register</code> 函数可接受三个参数，第一个参数是代码片段注入的位置，接受以下值：  </p><ul><li><code>head_begin</code>: 注入在 <code>&lt;head&gt;</code> 之后（默认）  </li><li><code>head_end</code>: 注入在 <code>&lt;/head&gt;</code> 之前  </li><li><code>body_begin</code>: 注入在 <code>&lt;body&gt;</code> 之后  </li><li><code>body_end</code>: 注入在 <code>&lt;/body&gt;</code> 之前  </li></ul><p>第二个参数是注入的片段，可以是字符串，也可以是一个返回值为字符串的函数。</p><p>第三个参数是注入的页面类型，接受以下值：</p><ul><li><code>default</code>: 注入到每个页面（默认值）  </li><li><code>home</code>: 只注入到主页（<code>is_home()</code> 为 <code>true</code> 的页面）  </li><li><code>post</code>: 只注入到文章页面（<code>is_post()</code> 为 <code>true</code> 的页面）  </li><li><code>page</code>: 只注入到独立页面（<code>is_page()</code> 为 <code>true</code> 的页面）  </li><li><code>archive</code>: 只注入到归档页面（<code>is_archive()</code> 为 <code>true</code> 的页面）  </li><li><code>category</code>: 只注入到分类页面（<code>is_category()</code> 为 <code>true</code> 的页面）  </li><li><code>tag</code>: 只注入到标签页面（<code>is_tag()</code> 为 <code>true</code> 的页面）  </li><li>或是其他自定义 layout 名称，例如在Fluid 主题中 <code>about</code> 对应关于页、<code>links</code> 对应友联页  </li></ul><h2 id="Fluid-注入代码"><a href="#Fluid-注入代码" class="headerlink" title="Fluid 注入代码"></a>Fluid 注入代码</h2><p>:::warning</p><p>该功能需要 Fluid 1.9.0-beta 版本</p><p>:::</p><p>Fluid 主题也提供了一套注入代码功能，相较于 Hexo 注入功能更细致更丰富，并且支持注入 <code>ejs</code> 代码。</p><p>如果你想充分修改主题，又不想直接修改源码影响日后更新，本主题提供了代码注入功能，可以将代码无侵入式加入到主题里。</p><p>你可以直接注入 HTML 片段，不过建议你了解一下 <a href="https://ejs.bootcss.com/">EJS 模板引擎</a>，这样你就可以像主题里的 <code>ejs</code> 文件一样编写自己的组件再注入进去。</p><p>进入博客目录下 <code>scripts</code> 文件夹（如不存在则创建），在里面创建任意名称的 js 文件，在文件中写入如下内容：</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">hexo.extend.filter.register(<span class="hljs-string">'theme_inject'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">injects</span>) </span>{<br>  injects.header.file(<span class="hljs-string">'default'</span>, <span class="hljs-string">'source/_inject/test1.ejs'</span>, { <span class="hljs-attr">key</span>: <span class="hljs-string">'value'</span> }, -<span class="hljs-number">1</span>);<br>  injects.footer.raw(<span class="hljs-string">'default'</span>, <span class="hljs-string">'&lt;script async src="https://xxxxxx" crossorigin="anonymous"&gt;&lt;/script&gt;'</span>);<br>});<br></code></pre></td></tr></tbody></table></figure><ul><li><code>header</code> 和 <code>footer</code> 是注入点的名称，表示代码注入到页面的什么位置；</li><li><code>file</code> 方法表示注入的是文件，第一个参数下面介绍，第二个参数则是文件的路径，第三个参数是传入文件的参数（可省略），第四个参数是顺序（可省略）；</li><li><code>raw</code> 方法表示注入的是原生代码，第一个参数下面介绍，第二个参数则是一句原生的 HTML 语句；</li><li><code>default</code> 表示注入的键名，可以使用任意键名，同一个注入点下的相同键名会使注入的内容覆盖，而不同键名则会让内容依次排列（默认按执行先后顺序，可通过 <code>file</code> 第四个参数指定），这里 default 为主题默认键名，通常会替换掉主题默认的组件；</li></ul><p>主题目前提供的注入点如下：</p><table><thead><tr><th>注入点名称</th><th>注入范围</th><th>存在 <code>default</code> 键</th></tr></thead><tbody><tr><td>head</td><td><code>&lt;head&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>header</td><td><code>&lt;header&gt;</code> 标签中所有内容</td><td>有</td></tr><tr><td>bodyBegin</td><td><code>&lt;body&gt;</code> 标签中的开始</td><td>无</td></tr><tr><td>bodyEnd</td><td><code>&lt;body&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>footer</td><td><code>&lt;footer&gt;</code> 标签中所有内容</td><td>有</td></tr><tr><td>postMetaTop</td><td>文章页 <code>&lt;header&gt;</code> 标签中 meta 部分内容</td><td>有</td></tr><tr><td>postMetaBottom</td><td>文章页底部 meta 部分内容</td><td>有</td></tr><tr><td>postMarkdownBegin</td><td><code>&lt;div class="markdown-body"&gt;</code> 标签中的开始</td><td>无</td></tr><tr><td>postMarkdownEnd</td><td><code>&lt;div class="markdown-body"&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>postLeft</td><td>文章页左侧边栏</td><td>有</td></tr><tr><td>postRight</td><td>文章页右侧边栏</td><td>有</td></tr><tr><td>postCopyright</td><td>文章页版权信息</td><td>有</td></tr><tr><td>postRight</td><td>文章页右侧边栏</td><td>无</td></tr><tr><td>postComments</td><td>文章页评论</td><td>有</td></tr><tr><td>pageComments</td><td>自定义页评论</td><td>有</td></tr><tr><td>linksComments</td><td>友链页评论</td><td>有</td></tr></tbody></table><h2 id="Hexo-插件"><a href="#Hexo-插件" class="headerlink" title="Hexo 插件"></a>Hexo 插件</h2><p>:::warning<br>所有插件仅作为推荐，并且不能保证完全与 Fluid 兼容使用（Fluid 开发组会尽力适配，但实际上大部分不兼容是我们无法单方面解决的），请仔细阅读它们的文档，以免造成不良后果。<br>:::</p><p><a href="https://github.com/chenzhutian/hexo-all-minifier">hexo-all-minifier</a> : 压缩 Hexo 生成的文件</p><p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> : 通过 Hex 算法生成永久的文章链接</p><p><a href="https://github.com/MoePlayer/hexo-tag-dplayer">hexo-tag-dplayer</a> : 可以在文章中插入视频 Tag</p><p><a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a> : 在网页上加入 Live2D 看板娘</p><p><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> : 生成 Atom 1.0 or RSS 2.0 feed</p><p><a href="https://github.com/jaredly/hexo-admin">hexo-admin</a> : 为 Hexo 搭建可视化管理页面</p><p><inarticleadsense :data-ad-client="$themeConfig.ads.client" :data-ad-slot="$themeConfig.ads.inSlot" is-new-ads-code="yes"></inarticleadsense></p><h2 id="使用-jsDelivr-服务"><a href="#使用-jsDelivr-服务" class="headerlink" title="使用 jsDelivr 服务"></a>使用 jsDelivr 服务</h2><p>插入来自 GitHub 仓库的图片，由于网络情况可能会出现加载慢和无法加载的情况，我们可以使用 <a href="https://www.jsdelivr.com/">jsDelivr</a> 来加速图片文件等媒体文件的加载。</p><p>通常情况下，可以新建一个仓库来存放这些文件，目前已知的有图片、视频和引用的相关文件可以使用，GitHub 仓库最大上传文件为 25M，请注意文件大小。</p><p>使用方法（文件的绝对地址）</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/u</span>ser<span class="hljs-regexp">/repo@version/</span>file<br></code></pre></td></tr></tbody></table></figure><p>相关实例（博客仓库下 master 分支里 favicon 图片文件）</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/</span>fluid-dev<span class="hljs-regexp">/hexo-theme-fluid@master/</span>source<span class="hljs-regexp">/img/</span>favicon.png<br></code></pre></td></tr></tbody></table></figure><h2 id="加快网页加载"><a href="#加快网页加载" class="headerlink" title="加快网页加载"></a>加快网页加载</h2><ul><li><p>对于所有用户，将各种第三方库配置公共 CDN 是最有效的方式，可以通过<strong>主题配置</strong>中的 <code>static_prefix</code> 配置来链接（默认使用 jsDelivr CDN）；</p></li><li><p>如果你的域名已备案，可以使用<a href="https://s.qiniu.com/N7beiu">七牛云</a>、阿里云、腾讯云等大厂的 OSS 服务并绑定域名，将生成后的 public 目录下全部上传到 OSS，然后你不仅可以无服务器部署博客，加载速度也将无可比拟；</p></li><li><p>没有备案，也可以通过香港及海外地区的云，或者私有 CDN 等方式进行加速，推荐一份 <a href="https://www.julydate.com/post/60859300">CDN 使用指南</a>。</p></li><li><p>如果图片是存在 source 目录中，建议搭配 <a href="https://github.com/chenzhutian/hexo-all-minifier">hexo-all-minifier</a> 插件，可自动对图片进行压缩；</p></li><li><p>如果是存放在外部的图片，建议先使用 <a href="https://tinypng.com/">tinypng</a> 进行压缩。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>脚本语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博文</tag>
      
      <tag>hexo</tag>
      
      <tag>配置指南</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode第887题（动态规划）：鸡蛋掉落</title>
    <link href="/posts/15584.html"/>
    <url>/posts/15584.html</url>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第887题（动态规划）：鸡蛋掉落"><a href="#LeetCode第887题（动态规划）：鸡蛋掉落" class="headerlink" title="LeetCode第887题（动态规划）：鸡蛋掉落"></a>LeetCode第887题（动态规划）：鸡蛋掉落</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220217LeetCode%E7%AC%AC887%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">LeetCode第887题（动态规划）：鸡蛋掉落<br>You are given k identical eggs and you have access to a building with n floors labeled from 1 to n.<br><br>You know that there exists a floor f where 0 &lt;= f &lt;= n such that any egg dropped at a floor higher than f will break, and any egg dropped at or below floor f will not break.<br><br>Each move, you may take an unbroken egg and drop it from any floor x (where 1 &lt;= x &lt;= n). If the egg breaks, you can no longer use it. However, if the egg does not break, you may reuse it in future moves.<br><br>Return the minimum number of moves that you need to determine with certainty what the value of f is.<br><br> <br><br>Example 1:<br><br>Input: k = 1, n = 2<br>Output: 2<br>Explanation: <br>Drop the egg from floor 1. If it breaks, we know that f = 0.<br>Otherwise, drop the egg from floor 2. If it breaks, we know that f = 1.<br>If it does not break, then we know f = 2.<br>Hence, we need at minimum 2 moves to determine with certainty what the value of f is.<br>Example 2:<br><br>Input: k = 2, n = 6<br>Output: 3<br>Example 3:<br><br>Input: k = 3, n = 14<br>Output: 4<br> <br><br>Constraints:<br><br>1 &lt;= k &lt;= 100<br>1 &lt;= n &lt;= 104<br><br>给你 k 枚相同的鸡蛋，并可以使用一栋从第 1 层到第 n 层共有 n 层楼的建筑。<br><br>已知存在楼层 f ，满足&nbsp;0 &lt;= f &lt;= n ，任何从 高于 f 的楼层落下的鸡蛋都会碎，从 f 楼层或比它低的楼层落下的鸡蛋都不会破。<br><br>每次操作，你可以取一枚没有碎的鸡蛋并把它从任一楼层 x 扔下（满足&nbsp;1 &lt;= x &lt;= n）。如果鸡蛋碎了，你就不能再次使用它。如果某枚鸡蛋扔下后没有摔碎，则可以在之后的操作中 重复使用 这枚鸡蛋。<br><br>请你计算并返回要确定 f 确切的值 的 最小操作次数 是多少？<br><br>&nbsp;<br>示例 1：<br><br>输入：k = 1, n = 2<br>输出：2<br>解释：<br>鸡蛋从 1 楼掉落。如果它碎了，肯定能得出 f = 0 。 <br>否则，鸡蛋从 2 楼掉落。如果它碎了，肯定能得出 f = 1 。 <br>如果它没碎，那么肯定能得出 f = 2 。 <br>因此，在最坏的情况下我们需要移动 2 次以确定 f 是多少。 <br>示例 2：<br><br>输入：k = 2, n = 6<br>输出：3<br>示例 3：<br><br>输入：k = 3, n = 14<br>输出：4<br>&nbsp;<br><br>提示：<br><br>1 &lt;= k &lt;= 100<br>1 &lt;= n &lt;= 104<br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//没写出来</span><br></code></pre></td></tr></tbody></table></figure><p><code>心得： 这是一道比较经典的动规题，难度高，甚至看完答案后也不好写</code></p><h2 id="官方解答"><a href="#官方解答" class="headerlink" title="官方解答"></a>官方解答</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220217LeetCode%E7%AC%AC887%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/2.png"></p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> {</span><br>    <span class="hljs-built_in">unordered_map</span>&lt;<span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>&gt; memo;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">dp</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> n)</span> </span>{<br>        <span class="hljs-keyword">if</span> (memo.find(n * <span class="hljs-number">100</span> + k) == memo.end()) {<br>            <span class="hljs-keyword">int</span> ans;<br>            <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) {<br>                ans = <span class="hljs-number">0</span>;<br>            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (k == <span class="hljs-number">1</span>) {<br>                ans = n;<br>            } <span class="hljs-keyword">else</span> {<br>                <span class="hljs-keyword">int</span> lo = <span class="hljs-number">1</span>, hi = n;<br>                <span class="hljs-keyword">while</span> (lo + <span class="hljs-number">1</span> &lt; hi) {<br>                    <span class="hljs-keyword">int</span> x = (lo + hi) / <span class="hljs-number">2</span>;<br>                    <span class="hljs-keyword">int</span> t1 = dp(k - <span class="hljs-number">1</span>, x - <span class="hljs-number">1</span>);<br>                    <span class="hljs-keyword">int</span> t2 = dp(k, n - x);<br><br>                    <span class="hljs-keyword">if</span> (t1 &lt; t2) {<br>                        lo = x;<br>                    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (t1 &gt; t2) {<br>                        hi = x;<br>                    } <span class="hljs-keyword">else</span> {<br>                        lo = hi = x;<br>                    }<br>                }<br><br>                ans = <span class="hljs-number">1</span> + min(max(dp(k - <span class="hljs-number">1</span>, lo - <span class="hljs-number">1</span>), dp(k, n - lo)),<br>                                   max(dp(k - <span class="hljs-number">1</span>, hi - <span class="hljs-number">1</span>), dp(k, n - hi)));<br>            }<br><br>            memo[n * <span class="hljs-number">100</span> + k] = ans;<br>        }<br><br>        <span class="hljs-keyword">return</span> memo[n * <span class="hljs-number">100</span> + k];<br>    }<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">superEggDrop</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> n)</span> </span>{<br>        <span class="hljs-keyword">return</span> dp(k, n);<br>    }<br>};<br></code></pre></td></tr></tbody></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> {</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">superEggDrop</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> n)</span> </span>{<br>        <span class="hljs-keyword">int</span> dp[n + <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= n; ++i) {<br>            dp[i] = i;<br>        }<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">2</span>; j &lt;= k; ++j) {<br>            <span class="hljs-keyword">int</span> dp2[n + <span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">int</span> x = <span class="hljs-number">1</span>; <br>            dp2[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> m = <span class="hljs-number">1</span>; m &lt;= n; ++m) {<br>                <span class="hljs-keyword">while</span> (x &lt; m &amp;&amp; max(dp[x - <span class="hljs-number">1</span>], dp2[m - x]) &gt;= max(dp[x], dp2[m - x - <span class="hljs-number">1</span>])) {<br>                    x++;<br>                }<br>                dp2[m] = <span class="hljs-number">1</span> + max(dp[x - <span class="hljs-number">1</span>], dp2[m - x]);<br>            }<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> m = <span class="hljs-number">1</span>; m &lt;= n; ++m) {<br>                dp[m] = dp2[m];<br>            }<br>        }<br>        <span class="hljs-keyword">return</span> dp[n];<br>    }<br>};<br></code></pre></td></tr></tbody></table></figure><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> {</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">superEggDrop</span><span class="hljs-params">(<span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> n)</span> </span>{<br>        <span class="hljs-keyword">if</span> (n == <span class="hljs-number">1</span>) {<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        }<br>        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt; f(n + <span class="hljs-number">1</span>, <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;(k + <span class="hljs-number">1</span>));<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= k; ++i) {<br>            f[<span class="hljs-number">1</span>][i] = <span class="hljs-number">1</span>;<br>        }<br>        <span class="hljs-keyword">int</span> ans = <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; ++i) {<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= k; ++j) {<br>                f[i][j] = <span class="hljs-number">1</span> + f[i - <span class="hljs-number">1</span>][j - <span class="hljs-number">1</span>] + f[i - <span class="hljs-number">1</span>][j];<br>            }<br>            <span class="hljs-keyword">if</span> (f[i][k] &gt;= n) {<br>                ans = i;<br>                <span class="hljs-keyword">break</span>;<br>            }<br>        }<br>        <span class="hljs-keyword">return</span> ans;<br>    }<br>};<br></code></pre></td></tr></tbody></table></figure><p>题目链接：<a href="https://leetcode.com/problems/super-egg-drop/">https://leetcode.com/problems/super-egg-drop/</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>记忆化</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode第72题（动态规划）：编辑距离</title>
    <link href="/posts/48676.html"/>
    <url>/posts/48676.html</url>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第72题（动态规划）：编辑距离"><a href="#LeetCode第72题（动态规划）：编辑距离" class="headerlink" title="LeetCode第72题（动态规划）：编辑距离"></a>LeetCode第72题（动态规划）：编辑距离</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220209LeetCode%E7%AC%AC72%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">72. 编辑距离<br>Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.<br><br>You have the following three operations permitted on a word:<br><br>Insert a character<br>Delete a character<br>Replace a character<br> <br><br>Example 1:<br><br>Input: word1 = "horse", word2 = "ros"<br>Output: 3<br>Explanation: <br>horse -&gt; rorse (replace 'h' with 'r')<br>rorse -&gt; rose (remove 'r')<br>rose -&gt; ros (remove 'e')<br>Example 2:<br><br>Input: word1 = "intention", word2 = "execution"<br>Output: 5<br>Explanation: <br>intention -&gt; inention (remove 't')<br>inention -&gt; enention (replace 'i' with 'e')<br>enention -&gt; exention (replace 'n' with 'x')<br>exention -&gt; exection (replace 'n' with 'c')<br>exection -&gt; execution (insert 'u')<br> <br><br>Constraints:<br><br>0 &lt;= word1.length, word2.length &lt;= 500<br>word1 and word2 consist of lowercase English letters.<br><br><br>给你两个单词&nbsp;word1 和&nbsp;word2， 请返回将&nbsp;word1&nbsp;转换成&nbsp;word2 所使用的最少操作数 &nbsp;。<br><br>你可以对一个单词进行如下三种操作：<br><br>插入一个字符<br>删除一个字符<br>替换一个字符<br>&nbsp;<br><br>示例&nbsp;1：<br><br>输入：word1 = "horse", word2 = "ros"<br>输出：3<br>解释：<br>horse -&gt; rorse (将 'h' 替换为 'r')<br>rorse -&gt; rose (删除 'r')<br>rose -&gt; ros (删除 'e')<br>示例&nbsp;2：<br><br>输入：word1 = "intention", word2 = "execution"<br>输出：5<br>解释：<br>intention -&gt; inention (删除 't')<br>inention -&gt; enention (将 'i' 替换为 'e')<br>enention -&gt; exention (将 'n' 替换为 'x')<br>exention -&gt; exection (将 'n' 替换为 'c')<br>exection -&gt; execution (插入 'u')<br>&nbsp;<br><br>提示：<br><br>0 &lt;= word1.length, word2.length &lt;= 500<br>word1 和 word2 由小写英文字母组成<br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> {</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">minDistance</span><span class="hljs-params">(<span class="hljs-built_in">string</span> word1, <span class="hljs-built_in">string</span> word2)</span> </span>{<br>        <span class="hljs-keyword">int</span> m = (<span class="hljs-keyword">int</span>) word1.length();<br>        <span class="hljs-keyword">int</span> n = (<span class="hljs-keyword">int</span>) word2.length();<br>        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt; dp(m+<span class="hljs-number">1</span>,<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;(n+<span class="hljs-number">1</span>));<br>        <span class="hljs-comment">//int dp[m+1][n+1];</span><br>        dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;m+<span class="hljs-number">1</span>;i++){<br>            dp[i][<span class="hljs-number">0</span>] = i;<br>        }<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;n+<span class="hljs-number">1</span>;i++){<br>            dp[<span class="hljs-number">0</span>][i] = i;<br>        }<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;m+<span class="hljs-number">1</span>;i++){<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;n+<span class="hljs-number">1</span>;j++){<br>                <span class="hljs-keyword">if</span> (word1[i<span class="hljs-number">-1</span>] == word2[j<span class="hljs-number">-1</span>]) {<br>                    dp[i][j] = dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>];<br>                } <span class="hljs-keyword">else</span> {<br>                    dp[i][j] = min(min(dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>], dp[i<span class="hljs-number">-1</span>][j]),dp[i][j<span class="hljs-number">-1</span>])+<span class="hljs-number">1</span>;<br>                }<br>            }<br>        }<br>        <span class="hljs-keyword">return</span> dp[m][n];<br>    }<br>};<br></code></pre></td></tr></tbody></table></figure><p><code>心得： 这是一道比较经典的动规题，难度偏中等，主要是找到初始条件，找到dp[i][j] = dp[i-1][j-1]和dp[i][j] = min(min(dp[i-1][j-1], dp[i-1][j]),dp[i][j-1])+1这两个状态转移方程，下面是我摘取的别人的思路。</code></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs txt">步骤一、定义数组元素的含义<br>由于我们的目的求将 word1 转换成 word2 所使用的最少操作数 。那我们就定义 dp[i] [j]的含义为：当字符串 word1 的长度为 i，字符串 word2 的长度为 j 时，将 word1 转化为 word2 所使用的最少操作次数为 dp[i] [j]。<br><br>有时候，数组的含义并不容易找，所以还是那句话，我给你们一个套路，剩下的还得看你们去领悟。<br><br>步骤二：找出关系数组元素间的关系式<br>接下来我们就要找 dp[i] [j] 元素之间的关系了，比起其他题，这道题相对比较难找一点，但是，不管多难找，大部分情况下，dp[i] [j] 和 dp[i-1] [j]、dp[i] [j-1]、dp[i-1] [j-1] 肯定存在某种关系。因为我们的目标就是，从规模小的，通过一些操作，推导出规模大的。对于这道题，我们可以对 word1 进行三种操作<br><br>插入一个字符<br>删除一个字符<br>替换一个字符<br><br>由于我们是要让操作的次数最小，所以我们要寻找最佳操作。那么有如下关系式：<br><br>一、如果我们 word1[i] 与 word2 [j] 相等，这个时候不需要进行任何操作，显然有 dp[i] [j] = dp[i-1] [j-1]。（别忘了 dp[i] [j] 的含义哈）。<br><br>二、如果我们 word1[i] 与 word2 [j] 不相等，这个时候我们就必须进行调整，而调整的操作有 3 种，我们要选择一种。三种操作对应的关系试如下（注意字符串与字符的区别）：<br><br>（1）、如果把字符 word1[i] 替换成与 word2[j] 相等，则有 dp[i] [j] = dp[i-1] [j-1] + 1;<br><br>（2）、如果在字符串 word1末尾插入一个与 word2[j] 相等的字符，则有 dp[i] [j] = dp[i] [j-1] + 1;<br><br>（3）、如果把字符 word1[i] 删除，则有 dp[i] [j] = dp[i-1] [j] + 1;<br><br>那么我们应该选择一种操作，使得 dp[i] [j] 的值最小，显然有<br><br>dp[i] [j] = min(dp[i-1] [j-1]，dp[i] [j-1]，dp[[i-1] [j]]) + 1;<br><br>于是，我们的关系式就推出来了，<br><br>步骤三、找出初始值<br>显然，当 dp[i] [j] 中，如果 i 或者 j 有一个为 0，那么还能使用关系式吗？答是不能的，因为这个时候把 i - 1 或者 j - 1，就变成负数了，数组就会出问题了，所以我们的初始值是计算出所有的 dp[0] [0….n] 和所有的 dp[0….m] [0]。这个还是非常容易计算的，因为当有一个字符串的长度为 0 时，转化为另外一个字符串，那就只能一直进行插入或者删除操作了。<br></code></pre></td></tr></tbody></table></figure><p>题目链接：<a href="https://leetcode.com/problems/edit-distance/">https://leetcode.com/problems/edit-distance/</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>记忆化</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode第64题（动态规划）：最小路径和</title>
    <link href="/posts/24103.html"/>
    <url>/posts/24103.html</url>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第64题（动态规划）：最小路径和"><a href="#LeetCode第64题（动态规划）：最小路径和" class="headerlink" title="LeetCode第64题（动态规划）：最小路径和"></a>LeetCode第64题（动态规划）：最小路径和</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220130LeetCode%E7%AC%AC64%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">64. 最小路径和<br>给定一个包含非负整数的 m&nbsp;x&nbsp;n&nbsp;网格&nbsp;grid ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。<br><br>说明：每次只能向下或者向右移动一步。<br><br>&nbsp;<br><br>示例 1：<br><br><br>输入：grid = [[1,3,1],[1,5,1],[4,2,1]]<br>输出：7<br>解释：因为路径 1→3→1→1→1 的总和最小。<br>示例 2：<br><br>输入：grid = [[1,2,3],[4,5,6]]<br>输出：12<br>&nbsp;<br><br>提示：<br><br>m == grid.length<br>n == grid[i].length<br>1 &lt;= m, n &lt;= 200<br>0 &lt;= grid[i][j] &lt;= 100<br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> {</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">minPathSum</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt;&amp; grid)</span> </span>{<br>        <span class="hljs-keyword">int</span> m = (<span class="hljs-keyword">int</span>) grid.size();<br>        <span class="hljs-keyword">int</span> n = (<span class="hljs-keyword">int</span>) grid[<span class="hljs-number">0</span>].size();<br>        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt; dp(m, <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;(n));<br>        dp[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] = grid[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++) {<br>            dp[<span class="hljs-number">0</span>][i] = dp[<span class="hljs-number">0</span>][i<span class="hljs-number">-1</span>] + grid[<span class="hljs-number">0</span>][i];<br>        }<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;m;i++) {<br>            dp[i][<span class="hljs-number">0</span>] = dp[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>] + grid[i][<span class="hljs-number">0</span>];<br>        }<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;m;i++){<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;n;j++) {<br>                dp[i][j] = min(dp[i][j<span class="hljs-number">-1</span>] + grid[i][j], dp[i<span class="hljs-number">-1</span>][j] + grid[i][j]);<br>            }<br>        }<br>        <span class="hljs-keyword">return</span> dp[m<span class="hljs-number">-1</span>][n<span class="hljs-number">-1</span>];<br>    }<br>};<br></code></pre></td></tr></tbody></table></figure><h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul><li>时间复杂度：O(mn)。</li><li>空间复杂度：O(mn)，其中 m 和 n 分别是网格的行数和列数。创建一个二维数组dp，和网格大小相同。<br>空间复杂度可以优化，例如每次只存储上一行的dp 值，则可以将空间复杂度优化到 O(n)。</li></ul><p><code>心得： 这是一道比较经典的动规题，难度偏简单，和第62题有着异曲同工之妙，主要是找到初始条件，找到dp[i][j] = min(dp[i][j-1] + grid[i][j], dp[i-1][j] + grid[i][j])这么一个关系，如果求最大，则用max。这个解法和官方思路是一样的。</code></p><p>我看到一种别人写的Python解法，思路是一样，代码却是简洁不少，但它的用时和内存都超过C++代码。</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">minPathSum</span>(<span class="hljs-params">self, grid</span>):</span><br>        dp = [<span class="hljs-built_in">float</span>(<span class="hljs-string">'inf'</span>)] * (<span class="hljs-built_in">len</span>(grid[<span class="hljs-number">0</span>])+<span class="hljs-number">1</span>)<br>        dp[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> grid:<br>            <span class="hljs-keyword">for</span> idx, num <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(row):<br>                dp[idx + <span class="hljs-number">1</span>] = <span class="hljs-built_in">min</span>(dp[idx], dp[idx + <span class="hljs-number">1</span>]) + num<br>        <span class="hljs-keyword">return</span> dp[-<span class="hljs-number">1</span>]<br></code></pre></td></tr></tbody></table></figure><p>题目链接：<a href="https://leetcode-cn.com/problems/minimum-path-sum/">https://leetcode-cn.com/problems/minimum-path-sum/</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>记忆化</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode第62题（动态规划）：不同路径</title>
    <link href="/posts/22189.html"/>
    <url>/posts/22189.html</url>
    
    <content type="html"><![CDATA[<h1 id="LeetCode第62题（动态规划）：不同路径"><a href="#LeetCode第62题（动态规划）：不同路径" class="headerlink" title="LeetCode第62题（动态规划）：不同路径"></a>LeetCode第62题（动态规划）：不同路径</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220130LeetCode%E7%AC%AC62%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/1.png"></p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">62. 不同路径<br>一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。<br><br>机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。<br><br>问总共有多少条不同的路径？<br><br> <br><br>示例 1：<br><br><br>输入：m = 3, n = 7<br>输出：28<br>示例 2：<br><br>输入：m = 3, n = 2<br>输出：3<br>解释：<br>从左上角开始，总共有 3 条路径可以到达右下角。<br>1. 向右 -&gt; 向下 -&gt; 向下<br>2. 向下 -&gt; 向下 -&gt; 向右<br>3. 向下 -&gt; 向右 -&gt; 向下<br>示例 3：<br><br>输入：m = 7, n = 3<br>输出：28<br>示例 4：<br><br>输入：m = 3, n = 3<br>输出：6<br> <br><br>提示：<br><br>1 &lt;= m, n &lt;= 100<br>题目数据保证答案小于等于 2 * 109<br><br></code></pre></td></tr></tbody></table></figure><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> {</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">uniquePaths</span><span class="hljs-params">(<span class="hljs-keyword">int</span> m, <span class="hljs-keyword">int</span> n)</span> </span>{<br>        <span class="hljs-keyword">int</span> dp[m][n];<br>        <span class="hljs-comment">//dp[0][0] = 1;</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++) {<br>            dp[<span class="hljs-number">0</span>][i] = <span class="hljs-number">1</span>;<br>        }<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;m;i++){<br>            dp[i][<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br>        }<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;m;i++){<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">1</span>;j&lt;n;j++){<br>                dp[i][j] = dp[i<span class="hljs-number">-1</span>][j] + dp[i][j<span class="hljs-number">-1</span>];<br>                <span class="hljs-comment">//cout&lt;&lt; i &lt;&lt;"  "&lt;&lt; j &lt;&lt;"  "&lt;&lt;dp[i-1][j]&lt;&lt;" "&lt;&lt;dp[i][j-1]&lt;&lt;"  "&lt;&lt;dp[i][j]&lt;&lt;endl;</span><br>            }<br>        }<br><span class="hljs-comment">//        for(int i=0;i&lt;m;i++){</span><br><span class="hljs-comment">//            for(int j=0;j&lt;n;j++){</span><br><span class="hljs-comment">//                //cout&lt;&lt; i &lt;&lt;"  "&lt;&lt; j &lt;&lt;"  "&lt;&lt;dp[i-1][j]&lt;&lt;" "&lt;&lt;dp[i][j-1]&lt;&lt;"  "&lt;&lt;dp[i][j]&lt;&lt;endl;</span><br><span class="hljs-comment">//            }</span><br><span class="hljs-comment">//        }</span><br>        <span class="hljs-comment">//cout &lt;&lt; dp[m-1][n-1];</span><br>        <span class="hljs-keyword">return</span> dp[m<span class="hljs-number">-1</span>][n<span class="hljs-number">-1</span>];<br>    }<br>};<br></code></pre></td></tr></tbody></table></figure><h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul><li>时间复杂度：O(mn)。</li><li>空间复杂度：O(mn)，即为存储所有状态需要的空间。注意到 f(i, j)仅与第 i 行和第 i-1 行的状态有关，因此我们可以使用滚动数组代替代码中的二维数组，使空间复杂度降低为 O(n)。此外，由于我们交换行列的值并不会对答案产生影响，因此我们总可以通过交换 m 和 n 使得 m≤n，这样空间复杂度降低至 O(min(m,n))。</li></ul><p><code>心得： 这是一道比较经典的动规题，难度偏简单，主要是找到dp[i][j] = dp[i-1][j] + dp[i][j-1]这样一个关系，那么问题便能迎刃而解。我的解法用了双循环，应该是可以进一步优化的，虽然代码AC了，但还未达到最优时间复杂度。</code></p><h2 id="官方方法二：组合数学"><a href="#官方方法二：组合数学" class="headerlink" title="官方方法二：组合数学"></a>官方方法二：组合数学</h2><h3 id="思路与算法"><a href="#思路与算法" class="headerlink" title="思路与算法"></a>思路与算法</h3><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220130LeetCode%E7%AC%AC62%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/2.png"></p><h5 id="C-代码"><a href="#C-代码" class="headerlink" title="C++代码"></a>C++代码</h5><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> {</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">uniquePaths</span><span class="hljs-params">(<span class="hljs-keyword">int</span> m, <span class="hljs-keyword">int</span> n)</span> </span>{<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ans = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = n, y = <span class="hljs-number">1</span>; y &lt; m; ++x, ++y) {<br>            ans = ans * x / y;<br>        }<br>        <span class="hljs-keyword">return</span> ans;<br>    }<br>};<br></code></pre></td></tr></tbody></table></figure><h5 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h5><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>{<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">uniquePaths</span><span class="hljs-params">(<span class="hljs-keyword">int</span> m, <span class="hljs-keyword">int</span> n)</span> </span>{<br>        <span class="hljs-keyword">long</span> ans = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = n, y = <span class="hljs-number">1</span>; y &lt; m; ++x, ++y) {<br>            ans = ans * x / y;<br>        }<br>        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">int</span>) ans;<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><h5 id="Python3代码"><a href="#Python3代码" class="headerlink" title="Python3代码"></a>Python3代码</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">uniquePaths</span>(<span class="hljs-params">self, m: <span class="hljs-built_in">int</span>, n: <span class="hljs-built_in">int</span></span>) -&gt; int:</span><br>        <span class="hljs-keyword">return</span> comb(m + n - <span class="hljs-number">2</span>, n - <span class="hljs-number">1</span>)<br></code></pre></td></tr></tbody></table></figure><h3 id="复杂度分析-1"><a href="#复杂度分析-1" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul><li><p>时间复杂度：O(min(m,n))。由于我们交换行列的值并不会对答案产生影响，因此我们总可以通过交换 m 和 n 使得 m≤n，这样空间复杂度降低至 O(min(m,n))。</p></li><li><p>空间复杂度：O(1)。</p></li></ul><p><code>心得： 官方这种解法就离谱，，，，，用Python简直就是秒解。</code><br>题目链接：<a href="https://leetcode-cn.com/problems/unique-paths/">https://leetcode-cn.com/problems/unique-paths/</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>记忆化</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决动态规划问题的思考过程摘录</title>
    <link href="/posts/7211.html"/>
    <url>/posts/7211.html</url>
    
    <content type="html"><![CDATA[<h1 id="解决动态规划问题的思考过程摘录"><a href="#解决动态规划问题的思考过程摘录" class="headerlink" title="解决动态规划问题的思考过程摘录"></a>解决动态规划问题的思考过程摘录</h1><p>========================</p><p>心得： 这里的记忆化颇有意思，dp[i]如果之前计算过，且不为-1，则直接返回dp[i]。如未计算过则计算且只计算一次dp[i]，也就是说，本来递归需要大量重复的计算，却因为之前已经记录了该值而能直接得到结果。给我感觉是提前记录需要重复计算的值，从而提高效率。这种方法配合递归比较细节，着实让人眼前一亮。</p><p>摘录：</p><p>让我们先从一道例题开始</p><p>题目：300.最长上升子序列</p><p>描述：</p><p>给定一个无序的整数数组，找到其中最长上升子序列的长度。</p><p>示例：</p><p>输入: [10,9,2,5,3,7,101,18]<br>输出: 4<br>解释: 最长的上升子序列是 [2,3,7,101]，它的长度是4。</p><h2 id="考虑能否将问题规模减小"><a href="#考虑能否将问题规模减小" class="headerlink" title="考虑能否将问题规模减小"></a>考虑能否将问题规模减小</h2><p>将问题规模减小的方式有很多种，一些典型的减小方式是动态规划分类的依据，例如线性，区间，树形等。这里考虑数组上常用的两种思路：</p><ul><li>每次减少一半：如果每次将问题规模减少一半，原问题有[10,9,2,5]，和[3,7,101,18]，两个子问题的最优解分别为 [2,5] 和 [3,7,101]，但是找不到好的组合方式将两个子问题最优解组合为原问题最优解 [2,5,7,101]。</li><li>每次减少一个：记 f(n) 为以第 nn 个数结尾的最长子序列，每次减少一个，将原问题分为f(n−1), f(n-2), …, f(1)，共 n - 1n−1 个子问题。n - 1 = 7n−1=7 个子问题以及答案如下：</li></ul><ul><li>[10, 9, 2, 5, 3, 7, 101] -&gt; [2, 5, 7, 101]</li><li>[10, 9, 2, 5, 3, 7] -&gt; [2, 5, 7]</li><li>[10, 9, 2, 5, 3] -&gt; [2, 3]</li><li>[10, 9, 2, 5] -&gt; [2, 5]</li><li>[10, 9, 2] -&gt; [2]</li><li>[10, 9] -&gt; [9]</li><li>[10] -&gt; [10]</li></ul><p>已经有 7 个子问题的最优解之后，可以发现一种组合方式得到原问题的最优解：f(6)的结果 [2,5,7], 7 &lt; 187&lt;18，同时长度也是 f(1)~f(7) 中，结尾小于 18 的结果中最长的。f(7)虽然长度为 4 比 f(6)长，但结尾是不小于 18 的，无法组合成原问题的解。<br>以上组合方式可以写成一个式子，即状态转移方程</p><p>f(n)=maxf(i)+1&nbsp;其中&nbsp;i&lt;n&nbsp;且&nbsp;a[i]&lt;a[n]</p><p>这种思考如何通过f(1)…f(n-1)求出 f(n)的过程实际就是在思考状态转移方程怎么写。</p><p>总结： 解决动态规划问题最难的地方有两点：</p><ul><li>如何定义 f(n)</li><li>如何通过 f(1), f(2), … f(n−1) 推导出f(n)，即状态转移方程<h2 id="1-递归"><a href="#1-递归" class="headerlink" title="1. 递归"></a>1. 递归</h2>有了状态转移方程，实际上已经可以直接用递归进行实现了。<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">f</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums, <span class="hljs-keyword">int</span> i)</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">int</span> a = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; i; ++j)<br>    {<br>        <span class="hljs-keyword">if</span>(nums[j] &lt; nums[i])<br>        ¦   a = max(a, f(nums, j) + <span class="hljs-number">1</span>);<br>    }<br>    <span class="hljs-keyword">return</span> a;<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="2-自顶向下（记忆化）"><a href="#2-自顶向下（记忆化）" class="headerlink" title="2. 自顶向下（记忆化）"></a>2. 自顶向下（记忆化）</h2>递归的解法需要非常多的重复计算，如果有一种办法能避免这些重复计算，可以节省大量计算时间。记忆化就是基于这个思路的算法。在递归地求解子问题 f(1)f(1), f(2)f(2)… 过程中，将结果保存到一个表里，在后续求解子问题中如果遇到求过结果的子问题，直接查表去得到答案而不计算。<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">f</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums, <span class="hljs-keyword">int</span> i, <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; dp)</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">if</span>(dp[i] != <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> dp[i];<br>    <span class="hljs-keyword">int</span> a = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; i; ++j)<br>    {<br>        <span class="hljs-keyword">if</span>(nums[j] &lt; nums[i])<br>        ¦   a = max(a, f(nums, j) + <span class="hljs-number">1</span>);<br>    }<br>    dp[i] = a;<br>    <span class="hljs-keyword">return</span> dp[i];<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="3-自底向上（迭代）"><a href="#3-自底向上（迭代）" class="headerlink" title="3. 自底向上（迭代）"></a>3. 自底向上（迭代）</h2>在自顶向下的算法中，由于递归的存在，程序运行时有额外的栈的消耗。</li></ul><p>有了状态转移方程，我们就知道如何从最小的问题规模入手，然后不断地增加问题规模，直到所要求的问题规模为止。在这个过程中，我们同样地可以记忆每个问题规模的解来避免重复的计算。这种方法就是自底向上的方法，由于避免了递归，这是一种更好的办法。</p><p>但是迭代法需要有一个明确的迭代方向，例如线性，区间，树形，状态压缩等比较主流的动态规划问题中，迭代方向都有相应的模式。参考后面的例题。但是有一些问题迭代法方向是不确定的，这时可以退而求其次用记忆化来做。</p><p>链接：<a href="https://leetcode-cn.com/leetbook/read/dynamic-programming-1-plus/xcos8s/">https://leetcode-cn.com/leetbook/read/dynamic-programming-1-plus/xcos8s/</a></p>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
      <tag>记忆化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo进阶之各种优化摘录</title>
    <link href="/posts/36046.html"/>
    <url>/posts/36046.html</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo进阶之各种优化摘录"><a href="#Hexo进阶之各种优化摘录" class="headerlink" title="Hexo进阶之各种优化摘录"></a>Hexo进阶之各种优化摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220121Hexo%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E6%91%98%E5%BD%95/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>脚本语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>博文</tag>
      
      <tag>hexo</tag>
      
      <tag>ejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Hexo的matery主题搭建博客并深度优化摘录</title>
    <link href="/posts/46171.html"/>
    <url>/posts/46171.html</url>
    
    <content type="html"><![CDATA[<h1 id="基于Hexo的matery主题搭建博客并深度优化摘录"><a href="#基于Hexo的matery主题搭建博客并深度优化摘录" class="headerlink" title="基于Hexo的matery主题搭建博客并深度优化摘录"></a>基于Hexo的matery主题搭建博客并深度优化摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/strange/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>脚本语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>博文</tag>
      
      <tag>hexo</tag>
      
      <tag>ejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git Large File Storage摘录</title>
    <link href="/posts/55425.html"/>
    <url>/posts/55425.html</url>
    
    <content type="html"><![CDATA[<h1 id="git-Large-File-Storage摘录"><a href="#git-Large-File-Storage摘录" class="headerlink" title="git Large File Storage摘录"></a>git Large File Storage摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220120gitLargeFileStorage%E6%91%98%E5%BD%95/gitLargeFileStorage%E6%91%98%E5%BD%95.png"></p>]]></content>
    
    
    <categories>
      
      <category>版本控制git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo文件名大小写问题摘录</title>
    <link href="/posts/12645.html"/>
    <url>/posts/12645.html</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo文件名大小写问题摘录"><a href="#Hexo文件名大小写问题摘录" class="headerlink" title="Hexo文件名大小写问题摘录"></a>Hexo文件名大小写问题摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220119Hexo%E6%96%87%E4%BB%B6%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E9%97%AE%E9%A2%98/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>脚本语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>博文</tag>
      
      <tag>hexo</tag>
      
      <tag>ejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>动态规划之状态压缩</title>
    <link href="/posts/49630.html"/>
    <url>/posts/49630.html</url>
    
    <content type="html"><![CDATA[<h1 id="动态规划之状态压缩摘录"><a href="#动态规划之状态压缩摘录" class="headerlink" title="动态规划之状态压缩摘录"></a>动态规划之状态压缩摘录</h1><p>========================</p><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><h4 id="1-状态压缩"><a href="#1-状态压缩" class="headerlink" title="1.状态压缩"></a>1.状态压缩</h4><p><code>状态压缩</code>就是使用某种方法，简明扼要地以最小代价来表示某种状态，通常是用一串01数字（二进制数）来表示各个点的状态。这就要求使用状态压缩的对象的点的状态必须只有两种，0 或 1；当然如果有三种状态用三进制来表示也未尝不可。</p><h4 id="2-使用条件"><a href="#2-使用条件" class="headerlink" title="2.使用条件"></a>2.使用条件</h4><p>从状态压缩的特点来看，这个算法适用的题目符合以下的条件：</p><ul><li><code>解法需要保存一定的状态数据</code>（表示一种状态的一个数据值），每个状态数据通常情况下是可以通过2进制来表示的。这就要求状态数据的每个单元只有两种状态，比如说棋盘上的格子，放棋子或者不放，或者是硬币的正反两面。这样用0或者1来表示状态数据的每个单元，而<code>整个状态数据就是一个一串0和1组成的二进制数</code>。</li><li>解法需要将状态数据实现为一个基本数据类型，比如int，long等等，即所谓的状态压缩。状态压缩的目的一方面是<code>缩小了数据存储的空间</code>，另一方面是在<code>状态对比和状态整体处理时能够提高效率</code>。这样就要求状态数据中的单元个数不能太大，比如用int来表示一个状态的时候，状态的单元个数不能超过32（32位的机器），所以题目一般都是至少有一维的数据范围很小。</li></ul><h4 id="3-状压DP"><a href="#3-状压DP" class="headerlink" title="3.状压DP"></a>3.状压DP</h4><p>状压DP，顾名思义，就是使用状态压缩的动态规划。</p><p>动态规划问题通常有两种，一种是对递归问题的记忆化求解，另一种是把大问题看作是多阶段的决策求解。这里用的便是后一种，这带来一个需求，即存储之前的状态，再由状态及状态对应的值推演出状态转移方程最终得到最优解。</p><h2 id="二、位运算"><a href="#二、位运算" class="headerlink" title="二、位运算"></a>二、位运算</h2><p>一般基础的状压就是将一行的状态压成一个数，这个数的二进制形式反映了这一行的情况。由于使用二进制数来保存被压缩的状态，所以要用到神奇的二进制位运算操作，将一个十进制数转成二进制进行位运算操作再转回十进制数。包括：</p><ul><li>按位与&amp;（有0为0，其实就是且）</li><li>按位或|（有1为1，其实就是或）</li><li>按位取反~（注意负数补码的符号，最前面的第一位是1）</li><li>异或^（相同为0，不同为1）</li><li>左移&lt;&lt;</li><li>右移&gt;&gt;</li></ul><p>常见操作：</p><ul><li>判断x是奇数还是偶数：(x&amp;1)==0</li><li>x乘以一个2的n次方的数：x&lt;&lt;n</li><li>x除以一个2的n次方的数：x&gt;&gt;n</li><li>消去x最后一位的1：x&amp;(x-1)</li><li>求x的相反数： <del>(x-1)或者</del>x+1</li><li>x的异或操作：~x = -x-1</li><li>把x从右边数第n位变1：x|(1&lt;&lt;(n-1))（n从1开始）</li><li>把x从右边数第n位变0：x&amp;(~(1&lt;&lt;(n-1)))（n从1开始）</li><li>取x最后n位的值：x&amp;((1&lt;&lt;n)-1)</li><li>取x前n位的值，后面的全部置为0：x &amp; (~((1 &lt;&lt; (32 - n)) - 1))</li><li>只保留x右边第一个1，其他的全部置为0：x &amp; (-x) 或 x &amp; ~(x - 1)</li><li>判断x的第n位是偶数还是奇数：(x &amp; (1 &lt;&lt; (n - 1))) == 0</li><li>求x的绝对值：(n ^ (n &gt;&gt; 31)) - (n &gt;&gt; 31) 或 (x &gt;&gt; 31) == 0 ? x : (~x + 1) 或 (x + (x &gt;&gt; 31)) ^ (x &gt;&gt; 31)</li><li>求两个数的最大数：(x &amp; ((y - x) &gt;&gt; 31)) | (y &amp; (~(y - x) &gt;&gt; 31))</li><li>返回x的符号：(i &gt;&gt; 31) | (-i &gt;&gt;&gt; 31)（正数为1，负数为-1）</li><li>两数相加：(x | y) + (x &amp; y) 或 (x ^ y) + ((x &amp; y) &lt;&lt; 1)</li><li>两数相减：(x &amp; <del>y) - (</del>x &amp; y)</li><li>求两数的平均数：(x &amp; y) + ((x ^ y) &gt;&gt; 1) 或 (x + y) &gt;&gt; 1</li><li>判断一个数是不是2的次幂：(x != 0) &amp;&amp; (x &amp; (x - 1)) == 0</li><li>x对2的n次方求余：x &amp; (2^n - 1)（这里的^是幂的次方）</li><li>判断x和y的符号是否相同：(a ^ b) &gt;= 0</li><li>if(x == a) x = b; if(x == b) x = a：用异或运算符：x = a ^ b ^ x</li></ul><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220116%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B9%8B%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/1.png"></p><p>初试化状态的时候要看清条件，什么要，什么不要。<br>一般情况下要预处理前k行（k由题目定）。<br>Dp时题目给的条件和fit函数、state数组都要检查。</p><p>最最重要的一点：</p><blockquote><p>位反（~ )  &gt;  算术  &gt;  位左移、位右移  &gt;  关系运算<br>&gt;位与  &gt;  位或  &gt;  位异或  &gt;  逻辑运算</p></blockquote><p>所以一般位运算最好打括号。</p><h2 id="三、例题引入"><a href="#三、例题引入" class="headerlink" title="三、例题引入"></a>三、例题引入</h2><h4 id="【例1】填满棋盘"><a href="#【例1】填满棋盘" class="headerlink" title="【例1】填满棋盘"></a>【例1】填满棋盘</h4><p>有一个NM(N&lt;=5,M&lt;=1000)的棋盘，现在有12及2*1的小木块无数个，要盖满整个棋盘，有多少种方式？答案只需要mod1,000,000,007即可。</p><p>例如：对于一个22的棋盘，有两种方法，一种是使用2个12的，一种是使用2个2*1的。</p><p><code>【算法分析】</code></p><p>在这道题目中,N和M的范围本应该是一样的，但实际上，N和M的范围却差别甚远，对于这种题目，首先应该想到的就是，正确算法与这两个范围有关！N的范围特别小，因此可以考虑使用状态压缩动态规划的思想，请看下面的图：</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220116%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B9%8B%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/2.png"></p><p>本思路来自博客，不过原博没有图，我帮他补个图，再优化一下内容。</p><p>假设第一列已经填满，则第二列的摆设方式，只与第一列对第二列的影响有关。同理，第三列的摆设方式也只与第二列对它的影响有关。那么，使用一个长度为NN的二进制数statestate来表示这个影响，例如：4(00100)就表示了图上第二列的状态。</p><p>因此，本题的状态可以这样表示：</p><p>dp[i][state]表示该填充第 ii 列，第 i-1i−1 列对它的影响是 statestate 的时候的方法数。i&lt;=M,0&lt;=state&lt;2^Ni&lt;=M,0&lt;=state&lt;2<br>N</p><p>对于每一列，情况数也有很多，但由于 NN 很小，所以可以采取搜索的办法去处理。对于每一列，搜索所有可能的放木块的情况，并记录它对下一列的影响，之后更新状态。状态转移方程如下：</p><p>dp[i][state]=∑dp[i-1][pre] 每一个prepre可以通过填放成为statestate</p><p>对于每一列的深度优先搜索，写法如下：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//第i列，枚举到了第j行，当前状态是state，对下一列的影响是nex</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(ll i,ll j,ll state,ll nex)</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">if</span>(j==n)<span class="hljs-comment">//最后一行</span><br>    {<br>        dp[i+<span class="hljs-number">1</span>][nex]+=dp[i][state];<br>        dp[i+<span class="hljs-number">1</span>][nex]%=mod;<br>        <span class="hljs-keyword">return</span>;<br>    }<br>    <span class="hljs-comment">//如果这个位置（第j行）已经被上一列给站了（state的第j位为1），所以就直接跳过</span><br>    <span class="hljs-keyword">if</span>(state&amp;(<span class="hljs-number">1</span>&lt;&lt;j)&gt;<span class="hljs-number">0</span>)<br>        dfs(i,j+<span class="hljs-number">1</span>,state,nex);<br>    <span class="hljs-comment">//如果这个位置是空的，那么就尝试放一个1*2的棋子</span><br>    <span class="hljs-keyword">if</span>(state&amp;(<span class="hljs-number">1</span>&lt;&lt;j)==<span class="hljs-number">0</span>)<br>        dfs(i,j+<span class="hljs-number">1</span>,state,nex|(<span class="hljs-number">1</span>&lt;&lt;j));<span class="hljs-comment">//（使nex的第j位变成1）</span><br>    <span class="hljs-comment">//如果这个位置以及下一行都空的，那么就放一个2*1的棋子并直接跳到下下行</span><br>    <span class="hljs-keyword">if</span>(j+<span class="hljs-number">1</span>&lt;n&amp;&amp;state&amp;(<span class="hljs-number">1</span>&lt;&lt;j)==<span class="hljs-number">0</span>&amp;&amp;state&amp;(<span class="hljs-number">1</span>&lt;&lt;j+<span class="hljs-number">1</span>)==<span class="hljs-number">0</span>)<span class="hljs-comment">//注意要特判第j行下面是否还有一行</span><br>        dfs(i,j+<span class="hljs-number">2</span>,state,nex);<br>    <span class="hljs-keyword">return</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><p>最终，答案就是dp[M+1][0]。<br>完整代码</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;<br><span class="hljs-keyword">const</span> ll N=<span class="hljs-number">2000</span>+<span class="hljs-number">7</span>;<br><span class="hljs-keyword">const</span> ll mod=<span class="hljs-number">1000000007</span>;<br>ll n,m;<br>ll dp[N][N];<span class="hljs-comment">//dp[i][state]; 铺满前i-1列的所有方案数</span><br><span class="hljs-comment">//第i列，枚举到了第j行，当前状态是state，对下一列的影响是nex</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(ll i,ll j,ll state,ll nex)</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">if</span>(j==n)<span class="hljs-comment">//最后一行</span><br>    {<br>        dp[i+<span class="hljs-number">1</span>][nex]+=dp[i][state];<span class="hljs-comment">//nex一直接受前面的变化直到最后一行当前的可能性已经遍历完了就+上即可</span><br>        dp[i+<span class="hljs-number">1</span>][nex]%=mod;<br>        <span class="hljs-keyword">return</span>;<br>    }<br> <br>    <span class="hljs-comment">//如果这个位置（第j行）已经被上一列给占了（state的第j位为1），所以就直接跳过</span><br>    <span class="hljs-keyword">if</span>(((<span class="hljs-number">1</span>&lt;&lt;j)&amp;state)&gt;<span class="hljs-number">0</span>)<br>        dfs(i,j+<span class="hljs-number">1</span>,state,nex);<span class="hljs-comment">//不会对下一列有什么影响</span><br> <br>    <span class="hljs-comment">//如果这个位置是空的，那么就尝试放一个1*2的棋子</span><br>    <span class="hljs-keyword">if</span>(((<span class="hljs-number">1</span>&lt;&lt;j)&amp;state)==<span class="hljs-number">0</span>)<br>        dfs(i,j+<span class="hljs-number">1</span>,state,nex|(<span class="hljs-number">1</span>&lt;&lt;j));<span class="hljs-comment">//（使nex的第j位变成1）横着放一个1*2的棋子会对下一列造成影响</span><br> <br>    <span class="hljs-comment">//如果这个位置以及下一行都空的，那么就放一个2*1的棋子并直接跳到下下行</span><br>    <span class="hljs-keyword">if</span>(j+<span class="hljs-number">1</span>&lt;n&amp;&amp;((<span class="hljs-number">1</span>&lt;&lt;j)&amp;state)==<span class="hljs-number">0</span>&amp;&amp;((<span class="hljs-number">1</span>&lt;&lt;(j+<span class="hljs-number">1</span>))&amp;state)==<span class="hljs-number">0</span>)<span class="hljs-comment">//注意要特判第j行下面是否还有一行,以及要加上足够的括号以免因为位运算的优先级问题而导致出bug</span><br>        dfs(i,j+<span class="hljs-number">2</span>,state,nex);<span class="hljs-comment">//不会对下一列造成影响</span><br> <br>    <span class="hljs-keyword">return</span>;<br>}<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>{<br>    <span class="hljs-keyword">while</span>(~<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%lld %lld"</span>,&amp;n,&amp;m))<br>    {<br>        <span class="hljs-keyword">if</span>(n==<span class="hljs-number">0</span>&amp;&amp;m==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;<br>        <span class="hljs-built_in">memset</span>(dp,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span> dp);<br>        dp[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<span class="hljs-comment">//注意初始化</span><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;++i)<span class="hljs-comment">//一共m列//枚举第i列 -&gt; 影响第i+1列</span><br>        {<br>            <span class="hljs-comment">//注意1&lt;&lt;n结果是二进制，到for循环中会转换成十进制计算，这里最多也就是2的5次方，即32，可别以为是十进制的100000。</span><br>            <span class="hljs-comment">//如下为遍历情况：</span><br><span class="hljs-comment">//            *0 *0 *0 *0     *1 *1 *1 *1</span><br><span class="hljs-comment">//            *0 *0 *0 *0     *1 *1 *1 *1</span><br><span class="hljs-comment">//            *0 *0 *0 *0 ... *1 *1 *1 *1</span><br><span class="hljs-comment">//            *0 *0 *1 *1     *0 *0 *1 *1</span><br><span class="hljs-comment">//            *0 *1 *0 *1     *0 *1 *0 *1</span><br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;(<span class="hljs-number">1</span>&lt;&lt;n);++j)<span class="hljs-comment">//到2^n，遍历一遍，二进制会把所有填充的情况都列举一遍</span><br>            {<br>                <span class="hljs-keyword">if</span>(dp[i][j])<span class="hljs-comment">//如果存在方案数 -&gt; 则可以推广到i+1列</span><br>                    dfs(i,<span class="hljs-number">0</span>,j,<span class="hljs-number">0</span>);<br>            }<br>        }<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%lld\n"</span>,dp[m+<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]);<br>    }<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><p>要注意多加几个括号，能加就加，以免因为位运算的优先级问题而导致出bug。</p><h4 id="【例2】最小总代价（Vijos-1456）"><a href="#【例2】最小总代价（Vijos-1456）" class="headerlink" title="【例2】最小总代价（Vijos-1456）"></a>【例2】最小总代价（Vijos-1456）</h4><p>题目描述：</p><p>n个人在做传递物品的游戏,编号为1-n。</p><p>游戏规则是这样的：开始时物品可以在任意一人手上，他可把物品传递给其他人中的任意一位；下一个人可以传递给未接过物品的任意一人。</p><p>即物品只能经过同一个人一次，而且每次传递过程都有一个代价；不同的人传给不同的人的代价值之间没有联系；</p><p>求当物品经过所有n个人后，整个过程的总代价是多少。</p><p>输入格式：</p><p>第一行为n,表示共有n个人（16&gt;=n&gt;=2）；</p><p>以下为n*n的矩阵，第i+1行、第j列表示物品从编号为i的人传递到编号为j的人所花费的代价，特别的有第i+1行、第i列为-1（因为物品不能自己传给自己），其他数据均为正整数(&lt;=10000)。</p><p>(对于50%的数据，n&lt;=11)。</p><p>输出格式：</p><p>一个数，为最小的代价总和。</p><p>输入样例：</p><p>2</p><p>-1 9794</p><p>2724 –1</p><p>输出样例：</p><p>2724</p><p><code>【算法分析】</code></p><p>看到2&lt;=n&lt;=16，应想到此题和状态压缩dp有关。每个人只能够被传递一次，因此使用一个n位二进制数state来表示每个人是否已经被访问过了。但这还不够，因为从这样的状态中，并不能清楚地知道现在物品在谁 的手中，因此，需要在此基础上再增加一个状态now，表示物品在谁的手上。</p><p>dp[state][now]表示每个人是否被传递的状态是state，物品在now的手上的时候，最小的总代价。</p><p>初始状态为：dp[1&lt;&lt;i][i]=0；表示一开始物品在i手中。</p><p>所求状态为：min(dp[(1&lt;&lt;n)-1][j]); 0&lt;=j&lt;n</p><p>状态转移方程是：</p><p>dp[state][now]=min(dp[pre][t]+dist[now][t])；</p><p>pre表示的是能够到达state这个状态的一个状态，t能够传递物品给now且只有二进制下第t位与state不同。</p><p>状态的大小是O((2n)*n)，转移复杂度是O(n)。总的时间复杂度是O((2n)<em>n</em>n)。</p><p><code>【代码实现】</code></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*</span><br><span class="hljs-comment">ID:shijieyywd</span><br><span class="hljs-comment">PROG:Vijos-1456</span><br><span class="hljs-comment">LANG:c++</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br> <br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAXN 20</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INF 0x3f3f3f3f</span><br> <br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br> <br><span class="hljs-keyword">int</span> n;<br><span class="hljs-keyword">int</span> edges[MAXN][MAXN];<br><span class="hljs-keyword">int</span> dp[<span class="hljs-number">65546</span>][MAXN];<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">min</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span><br><span class="hljs-function"></span>{<br><span class="hljs-keyword">if</span> (a == <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> b;<br><span class="hljs-keyword">if</span> (b == <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> a;<br><span class="hljs-keyword">return</span> a &lt; b ? a : b;<br>}<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{<br>freopen(<span class="hljs-string">"p1456.in"</span>, <span class="hljs-string">"r"</span>, <span class="hljs-built_in">stdin</span>);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);<br><span class="hljs-keyword">int</span> t;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) <br>{<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j++) <br>{<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;edges[i][j]);<br>}<br>}<br><span class="hljs-built_in">memset</span>(dp, <span class="hljs-number">-1</span>, <span class="hljs-keyword">sizeof</span>(dp));<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) <br>{<br>dp[<span class="hljs-number">1</span> &lt;&lt; i][i] = <span class="hljs-number">0</span>;<br>}<br><span class="hljs-keyword">int</span> ans = <span class="hljs-number">-1</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1</span> &lt;&lt; n; i++) <br>{<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j++) <br>{<br><span class="hljs-keyword">if</span> (dp[i][j] != <span class="hljs-number">-1</span>) <br>{<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; n; k++) <br>{<br><span class="hljs-keyword">if</span> (!(i &amp; (<span class="hljs-number">1</span> &lt;&lt; k))) <br>{<br>dp[i | (<span class="hljs-number">1</span> &lt;&lt; k)][k] = min(dp[i | (<span class="hljs-number">1</span> &lt;&lt; k)][k], dp[i][j] + edges[j][k]);<br><span class="hljs-keyword">if</span> ((i | (<span class="hljs-number">1</span> &lt;&lt; k)) == (<span class="hljs-number">1</span> &lt;&lt; n) - <span class="hljs-number">1</span>) ans = min(ans, dp[i | (<span class="hljs-number">1</span> &lt;&lt; k)][k]);<br>}<br>}<br>}<br>}<br>}<br><span class="hljs-keyword">if</span> (ans != <span class="hljs-number">-1</span>)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, ans);<br><span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"0\n"</span>);<br> <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><h4 id="【例3】胜利大逃亡-续-Hdoj-1429"><a href="#【例3】胜利大逃亡-续-Hdoj-1429" class="headerlink" title="【例3】胜利大逃亡(续)(Hdoj-1429)"></a>【例3】胜利大逃亡(续)(Hdoj-1429)</h4><p>题目描述：</p><p>Ignatius再次被魔王抓走了(搞不懂他咋这么讨魔王喜欢)……</p><p>这次魔王汲取了上次的教训，把Ignatius关在一个n*m的地牢里，并在地牢的某些地方安装了带锁的门，钥匙藏在地牢另外的某些地方。刚开始Ignatius被关在(sx,sy)的位置，离开地牢的门在(ex,ey)的位置。Ignatius每分钟只能从一个坐标走到相邻四个坐标中的其中一个。魔王每t分钟回地牢视察一次，若发现Ignatius不在原位置便把他拎回去。经过若干次的尝试，Ignatius已画出整个地牢的地图。现在请你帮他计算能否再次成功逃亡。只要在魔王下次视察之前走到出口就算离开地牢，如果魔王回来的时候刚好走到出口或还未到出口都算逃亡失败。</p><p>输入格式：</p><p>每组测试数据的第一行有三个整数n,m,t(2&lt;=n,m&lt;=20,t&gt;0)。接下来的n行m列为地牢的地图，其中包括:</p><p>. 代表路</p><ul><li>代表墙</li></ul><p>@ 代表Ignatius的起始位置</p><p>^ 代表地牢的出口</p><p>A-J 代表带锁的门,对应的钥匙分别为a-j</p><p>a-j 代表钥匙，对应的门分别为A-J</p><p>每组测试数据之间有一个空行。</p><p>输出格式：</p><p>针对每组测试数据，如果可以成功逃亡，请输出需要多少分钟才能离开，如果不能则输出-1。</p><p>输入样例：</p><p>4 5 17</p><p>@A.B.</p><p>a*.*.</p><p>*..*^</p><p>c..b*</p><p>输出样例：</p><p>16</p><p><code>【算法分析】</code></p><p>初看此题感觉十分像是宽度优先搜索（BFS），但搜索的过程中如何表示钥匙的拥有情况，却是个问题。借鉴状态压缩的思想，使用一个10位的二进制数state来表示此刻对10把钥匙的拥有情况，那么，dp[x][y][state]表示到达(x,y)，钥匙拥有状况为state的最短路径。另外，需要注意到一旦拥有了某一把钥匙，那个有门的位置就如履平地了。</p><p>代码的实现方式可以采用Spfa求最短路的方式。值得一提的是，Spfa算法本来就是一种求解最短路径问题的动态规划算法，本文假设读者已经非常熟悉Spfa等基础算法，在此处不再赘述。</p><p>状态压缩dp可以出现在各种算法中，本题就是典型的搜索算法和状态压缩dp算法结合的题目。另外，很多状态压缩dp本身就是通过搜索算法实现的状态转移。</p><p><code>【代码实现】</code></p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*</span><br><span class="hljs-comment">ID:shijieyywd</span><br><span class="hljs-comment">PROG:Hdu-1429</span><br><span class="hljs-comment">LANG:c++</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><br> <br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br> <br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Node</span>{</span><br><span class="hljs-keyword">int</span> x;<br><span class="hljs-keyword">int</span> y;<br><span class="hljs-keyword">int</span> step;<br><span class="hljs-keyword">int</span> key;<br>Node() {}<br>Node(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b, <span class="hljs-keyword">int</span> s, <span class="hljs-keyword">int</span> k) : x(a), y(b), step(s), key(k) {}<br>};<br> <br><span class="hljs-keyword">int</span> n, m, t;<br><span class="hljs-keyword">int</span> arr[<span class="hljs-number">25</span>][<span class="hljs-number">25</span>];<br><span class="hljs-keyword">int</span> door[<span class="hljs-number">25</span>][<span class="hljs-number">25</span>];<br><span class="hljs-keyword">int</span> key[<span class="hljs-number">25</span>][<span class="hljs-number">25</span>];<br><span class="hljs-keyword">int</span> Go[<span class="hljs-number">4</span>][<span class="hljs-number">2</span>] = {{<span class="hljs-number">0</span>, <span class="hljs-number">1</span>}, {<span class="hljs-number">0</span>, <span class="hljs-number">-1</span>}, {<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>}, {<span class="hljs-number">1</span>, <span class="hljs-number">0</span>}};<br><span class="hljs-keyword">int</span> sx, sy;<br><span class="hljs-keyword">int</span> ex, ey;<br><span class="hljs-keyword">int</span> vis[<span class="hljs-number">25</span>][<span class="hljs-number">25</span>][<span class="hljs-number">1049</span>];<br> <br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">canGo</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y, <span class="hljs-keyword">int</span> k)</span> </span><br><span class="hljs-function"></span>{<br><span class="hljs-keyword">if</span> (x &gt;= <span class="hljs-number">0</span> &amp;&amp; x &lt; n &amp;&amp; y &gt;= <span class="hljs-number">0</span> &amp;&amp; y &lt; m &amp;&amp; !arr[x][y]) <br>{<br><span class="hljs-keyword">if</span> (vis[x][y][k]) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> ((k &amp; door[x][y]) == door[x][y]) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>}<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>}<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">bfs</span><span class="hljs-params">()</span> </span>{<br><span class="hljs-built_in">memset</span>(vis, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(vis));<br><span class="hljs-built_in">queue</span>&lt;Node&gt; q;<br>Node s = Node(sx, sy, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>q.push(s);<br>vis[sx][sy][<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span> (!q.empty()) <br>{<br>Node e = q.front();<br>q.pop();<br><span class="hljs-keyword">if</span> (e.x == ex &amp;&amp; e.y == ey) <span class="hljs-keyword">return</span> e.step;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) <br>{<br><span class="hljs-keyword">int</span> nx = e.x + Go[i][<span class="hljs-number">0</span>];<br><span class="hljs-keyword">int</span> ny = e.y + Go[i][<span class="hljs-number">1</span>];<br><span class="hljs-keyword">if</span> (canGo(nx, ny, e.key)) <br>{<br>Node nex = Node(nx, ny, e.step + <span class="hljs-number">1</span>, e.key | key[nx][ny]);<br>vis[nx][ny][nex.key] = <span class="hljs-number">1</span>;<br>q.push(nex);<br>}<br>}<br>}<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br> <br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{<br><span class="hljs-keyword">while</span> (~<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d %d %d\n"</span>, &amp;n, &amp;m, &amp;t)) <br>{<br><span class="hljs-built_in">memset</span>(arr, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(arr));<br><span class="hljs-built_in">memset</span>(door, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(door));<br><span class="hljs-built_in">memset</span>(key, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(key));<br><span class="hljs-keyword">char</span> c;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) <br>{<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; m; j++) <br>{<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%c"</span>, &amp;c);<br><span class="hljs-keyword">if</span> (c == <span class="hljs-string">'*'</span>) arr[i][j] = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c == <span class="hljs-string">'@'</span>) sx = i, sy = j;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c == <span class="hljs-string">'^'</span>) ex = i, ey = j;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c &gt;= <span class="hljs-string">'a'</span> &amp;&amp; c &lt;= <span class="hljs-string">'z'</span>) key[i][j] = <span class="hljs-number">1</span> &lt;&lt; (c - <span class="hljs-string">'a'</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c &gt;= <span class="hljs-string">'A'</span> &amp;&amp; c &lt;= <span class="hljs-string">'Z'</span>) door[i][j] = <span class="hljs-number">1</span> &lt;&lt; (c - <span class="hljs-string">'A'</span>);<br>}<br>getchar();<br>}<br><span class="hljs-keyword">int</span> ans = bfs();<br><span class="hljs-keyword">if</span> (ans &lt; t &amp;&amp; ans) <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, ans);<br><span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"-1\n"</span>);<br>}<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>动态规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C++标准库使用</title>
    <link href="/posts/44130.html"/>
    <url>/posts/44130.html</url>
    
    <content type="html"><![CDATA[<h1 id="C-标准库使用"><a href="#C-标准库使用" class="headerlink" title="C++标准库使用"></a>C++标准库使用</h1><p>========================</p><h2 id="测试了一些标准库提供的数据结构和函数等"><a href="#测试了一些标准库提供的数据结构和函数等" class="headerlink" title="测试了一些标准库提供的数据结构和函数等"></a>测试了一些标准库提供的数据结构和函数等</h2><p>值得一提的是那个自动推导<code>auto</code>用着非常舒服,可自动推导容器内的变量类型、函数的返回值类型等。<br>模板就不用说了，一行胜百行。需要大量重复的工作，还是建议用模板，模板的效率我还没时间去测试，不过不管怎么样，模板真方便。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-function"><span class="hljs-keyword">auto</span> <span class="hljs-title">printData</span><span class="hljs-params">(<span class="hljs-keyword">const</span> T&amp; v)</span></span>{<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> i: v) {<br>        <span class="hljs-built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">" "</span>;<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><p>以下是.hpp文件和.cpp文件</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  test.hpp</span><br><span class="hljs-comment">//  Code</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东 on 2022/1/6.</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> test_hpp</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> test_hpp</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">"stdc++.hpp"</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">using</span> gg = <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span>;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> {</span><br>    <span class="hljs-keyword">int</span> testThings;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">func</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">func2</span><span class="hljs-params">()</span></span>;<br>};<br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span> <span class="hljs-comment">/* test_hpp */</span></span><br><br></code></pre></td></tr></tbody></table></figure><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  test.cpp</span><br><span class="hljs-comment">//  Code</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东 on 2022/1/6.</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">"test.hpp"</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(gg a, gg b)</span> </span>{ <span class="hljs-keyword">return</span> a&lt;b; }<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Compare</span> {</span><br><span class="hljs-comment">//    gg score;</span><br><span class="hljs-comment">//    Compare(gg s):score(s){}</span><br>    <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">operator</span><span class="hljs-params">()</span> <span class="hljs-params">(<span class="hljs-keyword">const</span> gg&amp; s1, <span class="hljs-keyword">const</span> gg&amp; s2)</span><span class="hljs-keyword">const</span> </span>{<br>        <span class="hljs-keyword">return</span> s1 &lt; s2;<br>    }<br>};<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-function"><span class="hljs-keyword">auto</span> <span class="hljs-title">printData</span><span class="hljs-params">(<span class="hljs-keyword">const</span> T&amp; v)</span></span>{<span class="hljs-comment">//可能改变的话，就需要用引用&amp;, 引用可被修改，值类型固定</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> i: v) {<br>        <span class="hljs-built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">" "</span>;<br>    }<br>}<br><br><span class="hljs-function"><span class="hljs-keyword">auto</span> <span class="hljs-title">lowerBound1</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;gg&gt;&amp; v, gg left, gg right, gg x, gg a)</span> </span>{<br>    <span class="hljs-keyword">while</span>(left&lt;right){<br>        gg mid = (left+right)/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">if</span>(v[mid]&gt;x)<br>            right=mid;<br>        <span class="hljs-keyword">else</span><br>            left=mid+<span class="hljs-number">1</span>;<br>    }<br>    <span class="hljs-keyword">return</span> left&gt;right <span class="hljs-keyword">or</span> v[left]&gt;x?left:a;<br>}<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Test::func</span><span class="hljs-params">()</span></span>{<br>    <span class="hljs-built_in">vector</span>&lt;gg&gt;v={<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>};<br>    <span class="hljs-comment">//sort(v.begin(),v.end());</span><br>    sort(v.rbegin(),v.rend());<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"V:\n"</span>;<br>    <span class="hljs-comment">//cout&lt;&lt;&amp;v&lt;&lt;"\n";</span><br><span class="hljs-comment">//    for (gg i: v) {</span><br><span class="hljs-comment">//        cout&lt;&lt;i&lt;&lt;" ";</span><br><span class="hljs-comment">//    }</span><br>    printData(v);<br>    <br>    reverse(v.begin()+<span class="hljs-number">4</span>, v.begin()+<span class="hljs-number">6</span>);<span class="hljs-comment">//转置了第5（4+1）、6（5+1）个位置，6是开区间所在</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v);<br>    <br>    sort(v.begin(), v.end());<span class="hljs-comment">//必须先排序，才能用unique去重，因为unique只看相邻的元素。</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"This is v"</span>;<br>    printData(v);<br>    <span class="hljs-comment">//auto it = unique(v.begin(), v.end());</span><br>    <span class="hljs-built_in">vector</span>&lt;gg&gt;::iterator it = unique(v.begin(), v.end());<br>    v.erase(it, v.end());<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v);<br>    <br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    <span class="hljs-keyword">auto</span> it2 = remove(v.begin(), v.end(), <span class="hljs-number">8</span>);<br>    v.erase(it2,v.end());<br>    printData(v);<br>    <br>    reverse(v.begin(), v.end());<br>    partial_sort(v.begin(), v.begin()+<span class="hljs-number">4</span>, v.end());<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v);<br>    <br>    reverse(v.begin(), v.end());<br>    v.insert(v.begin(),{<span class="hljs-number">20</span>, <span class="hljs-number">29</span>, <span class="hljs-number">88</span>, <span class="hljs-number">15</span>, <span class="hljs-number">65</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span> ,<span class="hljs-number">9</span>});<br>    nth_element(v.begin(), v.begin()+<span class="hljs-number">6</span>, v.end());<span class="hljs-comment">//将第6小的数字放到v[6]的位置（即第七个位置）上去，且其前面的数字必小于它，其后面的数字必大于它。</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\nThis is v:"</span>;<br>    printData(v);<br>    <br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\nThis is v:"</span>;<br>    <span class="hljs-comment">//任何二分查找算法都必须排序，没有顺序，还何谈二分。</span><br>    sort(v.begin(), v.end()<span class="hljs-number">-1</span>);<br>    printData(v);<br>    <span class="hljs-built_in">cout</span>&lt;&lt; <span class="hljs-string">"\n"</span>;<br>    <span class="hljs-comment">//用v.end()-1比较好，因为v.end()它背后其实也还是有数字的，如:140704480081848，如果你查的数大于所有元素，那么此时会显示v.end()背后的值。</span><br>    <span class="hljs-comment">//当要读取值时，考虑v.end()-1,其他时候没必要。</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;*v.begin()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;*(v.end()<span class="hljs-number">-1</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;*v.end()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;*v.rbegin()&lt;&lt;<span class="hljs-string">"\n"</span>;<br>    <span class="hljs-comment">//输出第一个大于等于该数的值</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt; *lower_bound(v.begin(), v.end()<span class="hljs-number">-1</span>, <span class="hljs-number">140704480081848</span>)&lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; *lower_bound(v.begin(), v.end()<span class="hljs-number">-1</span>, <span class="hljs-number">65</span>)<br>    <span class="hljs-comment">//输出第一个大于该数的值</span><br>    &lt;&lt;<span class="hljs-string">"\n"</span>&lt;&lt; *upper_bound(v.begin(), v.end()<span class="hljs-number">-1</span>, <span class="hljs-number">9</span>)&lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; *upper_bound(v.begin(), v.end()<span class="hljs-number">-1</span>, <span class="hljs-number">65</span>, cmp);<br>    <br>    <span class="hljs-comment">//输出第一个大于等于该数的值所在位置索引。</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"Position:"</span>&lt;&lt;lowerBound1(v, <span class="hljs-number">0</span>, v.size()<span class="hljs-number">-1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">-1</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;lowerBound1(v, <span class="hljs-number">0</span>, v.size()<span class="hljs-number">-1</span>, <span class="hljs-number">65</span>, <span class="hljs-number">-1</span>);<br>    <br>    <span class="hljs-comment">//将序列调整为大根堆，即大顶堆。</span><br>    make_heap(v.begin(), v.end());<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v);<br>    <br>    <span class="hljs-comment">//将大根堆序列调整为升序，即堆排序。</span><br>    sort_heap(v.begin(), v.end());<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v);<br>    <br><br>    sort(v.begin(), v.end(), greater&lt;gg&gt;());<br>    <span class="hljs-comment">//如序列已是最大的排列，将序列重排为最小的排列</span><br>    next_permutation(v.begin(), v.end());<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v);<br>    <br>    sort(v.begin(), v.end(), greater&lt;gg&gt;());<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>&lt;&lt;*v.data();<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\nMax:"</span>&lt;&lt;*max_element(v.begin(), v.end());<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\nMin:"</span>&lt;&lt;*min_element(v.begin(), v.end());<br>    <span class="hljs-comment">//取值型的最好用v.end()-1。</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\nthe Max:"</span>&lt;&lt;*minmax(v.begin(), v.end()<span class="hljs-number">-1</span>).first&lt;&lt;<span class="hljs-string">"\n\nthe Min:"</span>&lt;&lt;*minmax(v.begin(), v.end()<span class="hljs-number">-1</span>).second;<br>    <br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\nthe sum:"</span>;<br>    <span class="hljs-comment">//0表示初始值</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;accumulate(v.begin(), v.end(), <span class="hljs-number">0</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;accumulate(v.begin(), v.end(), <span class="hljs-number">100</span>);<br>    <br>    <br>    gg v2[<span class="hljs-number">100</span>] = {<span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">33</span>, <span class="hljs-number">58</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">33</span>, <span class="hljs-number">51</span>, <span class="hljs-number">4</span>,<span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">33</span>, <span class="hljs-number">57</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">33</span>, <span class="hljs-number">56</span>, <span class="hljs-number">4</span>};<br>    <span class="hljs-comment">//sort(v2,v2+5);</span><br>    <span class="hljs-comment">//sort(v2, v2+3);</span><br>    sort(v2, v2+<span class="hljs-number">10</span>, greater&lt;gg&gt;());<span class="hljs-comment">//10是开区间所在，故排序了第1（0+1）、……10（9+1）个位置。</span><br>    sort(v2+<span class="hljs-number">10</span>, v2+<span class="hljs-number">20</span>, less&lt;gg&gt;());<br>    sort(v2+<span class="hljs-number">20</span>, v2+<span class="hljs-number">30</span>, cmp);<br>    sort(v2+<span class="hljs-number">30</span>, v2+<span class="hljs-number">40</span>, Compare());<br>    sort(v2+<span class="hljs-number">40</span>, v2+<span class="hljs-number">50</span>, [](gg&amp; a,gg&amp; b){<span class="hljs-keyword">return</span> a&gt;b;});<br>    partition(v2,v2+<span class="hljs-number">100</span>, [](gg a){ <span class="hljs-keyword">return</span> a!=<span class="hljs-number">3</span> &amp;&amp; a!=<span class="hljs-number">7</span>; });<span class="hljs-comment">//符合条件的放到序列前方，不符合的放到序列后方</span><br>    <br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\nV2:\n"</span>;<br>    <span class="hljs-keyword">int</span> times = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(gg i:v2) {<br>        ++times;<br>        <span class="hljs-built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">" "</span>;<br>        <span class="hljs-keyword">if</span>(times%<span class="hljs-number">10</span> == <span class="hljs-number">0</span>)<br>            <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n"</span>;<br>    }<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v2);<br> <br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\nV3:\n"</span>;<br>    <span class="hljs-keyword">char</span> v3[<span class="hljs-number">20</span>] = {<span class="hljs-string">'e'</span>,<span class="hljs-string">'c'</span>,<span class="hljs-string">'b'</span>,<span class="hljs-string">'a'</span>,<span class="hljs-string">'d'</span>,<span class="hljs-string">'g'</span>,<span class="hljs-string">'f'</span>,<span class="hljs-string">'h'</span>,<span class="hljs-string">'j'</span>,<span class="hljs-string">'f'</span>,<span class="hljs-string">'f'</span>};<span class="hljs-comment">//后面的默认为' '，即空字符。</span><br>    sort(v3, v3+<span class="hljs-number">20</span>);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v3);<br>    <span class="hljs-comment">//如序列已经是最小序列，则重排为最大序列</span><br>    prev_permutation(v3, v3+<span class="hljs-number">20</span>);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v3);<br>    <br>    <span class="hljs-comment">//将'u'赋值给指定位置元素，递增后的值赋值给下一个元素</span><br>    iota(v3+<span class="hljs-number">10</span>, v3+<span class="hljs-number">20</span>, <span class="hljs-string">'u'</span>);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    printData(v3);<br>    <br>    <span class="hljs-keyword">int</span> v4[] = {<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>};<br>    <span class="hljs-keyword">int</span> v5[] = {<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>};<br>    <span class="hljs-comment">//向量内积</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>&lt;&lt;inner_product(v4, v4+<span class="hljs-number">3</span>, v5, <span class="hljs-number">0</span>);<br>    <br>    <span class="hljs-keyword">int</span> v6[] = {<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>};<br>    <span class="hljs-comment">//这里多输出个地址不知道怎么回事</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>&lt;&lt;partial_sum(v6, v6+<span class="hljs-number">10</span>, v6);<br>    printData(v6);<br>    <br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; v7 = {<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>};<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    <span class="hljs-comment">//前缀和，即前n项和。</span><br>    partial_sum(v7.begin(), v7.end(), v7.begin());<br>    printData(v7);<br>    <br>    <span class="hljs-comment">//前缀和的逆向操作。</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    adjacent_difference(v7.begin(), v7.end(), v7.begin());<br>    printData(v7);<br>    <br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n\n"</span>;<br>    <span class="hljs-function"><span class="hljs-built_in">bitset</span>&lt;8&gt; <span class="hljs-title">b</span><span class="hljs-params">(<span class="hljs-number">257</span>)</span></span>;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;b&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b.flip()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b.to_ulong()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b.to_ullong()&lt;&lt;<span class="hljs-string">"\n"</span>;<br>    <br>    <span class="hljs-function"><span class="hljs-built_in">bitset</span>&lt;16&gt; <span class="hljs-title">b2</span><span class="hljs-params">(<span class="hljs-number">257</span>)</span></span>;<span class="hljs-comment">//整数的二进制表示</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;b2&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b2.flip()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b2.to_ulong()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b2.to_ullong()&lt;&lt;<span class="hljs-string">"\n"</span><br>    &lt;&lt;(b2&lt;&lt;<span class="hljs-number">2</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;(b2&gt;&gt;<span class="hljs-number">1</span>)&lt;&lt;<span class="hljs-string">"\n"</span>&lt;&lt;(b2&lt;&lt;=<span class="hljs-number">2</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;(b2&gt;&gt;=<span class="hljs-number">1</span>)&lt;&lt;<span class="hljs-string">"\n"</span><br>    &lt;&lt;b2&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;~b2&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt; (b2&amp;=<span class="hljs-number">255</span>) &lt;&lt;<span class="hljs-string">'\n'</span><br>    &lt;&lt;(b2^=<span class="hljs-number">255</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;(b2|=<span class="hljs-number">255</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;(b2^=<span class="hljs-number">255</span>) &lt;&lt;<span class="hljs-string">'\n'</span><br>    &lt;&lt;b2[<span class="hljs-number">12</span>]&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b2.count()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;~b2&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;(b2|=<span class="hljs-number">255</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b2.count()&lt;&lt;<span class="hljs-string">'\n'</span><span class="hljs-comment">//count: b2中true即1的位数</span><br>    &lt;&lt;b2.reset()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b2.all()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b2.any()&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;b2.none()&lt;&lt;<span class="hljs-string">'\n'</span>;<br>    <br>    <span class="hljs-built_in">cout</span>&lt;&lt;to_string(<span class="hljs-number">1000</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stoi(<span class="hljs-string">"1111"</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stod(<span class="hljs-string">"10.78"</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stof(<span class="hljs-string">"11.766"</span>)&lt;&lt;<span class="hljs-string">'\n'</span>;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;showpos&lt;&lt;<span class="hljs-number">20</span>&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;<span class="hljs-number">100</span>&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;<span class="hljs-number">20</span><span class="hljs-number">-50</span>&lt;&lt;<span class="hljs-string">'\n'</span>;<span class="hljs-comment">//展示正负号</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;to_string(<span class="hljs-number">1000</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stoi(<span class="hljs-string">"1111"</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stod(<span class="hljs-string">"10.78"</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stof(<span class="hljs-string">"11.766"</span>)&lt;&lt;<span class="hljs-string">'\n'</span>;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;noshowpos&lt;&lt;to_string(<span class="hljs-number">1000</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stoi(<span class="hljs-string">"1111"</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stod(<span class="hljs-string">"10.78"</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stof(<span class="hljs-string">"11.766"</span>)<br>    &lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stol(<span class="hljs-string">"23453"</span>)&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;stoll(<span class="hljs-string">"1043791749713284"</span>)&lt;&lt;<span class="hljs-string">'\n'</span>;<br>    <br>    <span class="hljs-built_in">string</span> str = <span class="hljs-string">"00001234"</span>;<br>    str.erase(<span class="hljs-number">0</span>, str.find_first_not_of(<span class="hljs-string">'0'</span>));<span class="hljs-comment">//第一个不是0的数字。</span><br>    <span class="hljs-built_in">cout</span>&lt;&lt;str&lt;&lt;<span class="hljs-string">'\n'</span>;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">'8'</span> - <span class="hljs-string">'0'</span>&lt;&lt;<span class="hljs-string">'\n'</span>;<br>    <br>    <span class="hljs-built_in">string</span> str2 = <span class="hljs-string">"63433"</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">char</span> c: str2) {<br>        c-= <span class="hljs-string">'2'</span>;<br>    }<br>    <span class="hljs-built_in">cout</span>&lt;&lt;str2&lt;&lt;<span class="hljs-string">'\n'</span>;<br>    <br>    <span class="hljs-built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="hljs-number">10</span>)&lt;&lt;<span class="hljs-number">1e5</span>&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;<span class="hljs-number">200e5</span>&lt;&lt;<span class="hljs-string">" "</span>&lt;&lt;(<span class="hljs-keyword">double</span>)<span class="hljs-number">3e-8</span>&lt;&lt;<span class="hljs-string">'\n'</span>;<span class="hljs-comment">//1乘以10的5次方</span><br>    <br>    <span class="hljs-comment">//并查集</span><br>    <span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;gg&gt; <span class="hljs-title">ufs</span><span class="hljs-params">(<span class="hljs-number">1e2</span>)</span></span>;<br>    iota(ufs.begin(), ufs.end(), <span class="hljs-number">0</span>);<span class="hljs-comment">//赋值函数</span><br>    printData(ufs);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;<span class="hljs-string">"\n"</span>;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Test::func2</span><span class="hljs-params">()</span></span>{<br>    ios::sync_with_stdio(<span class="hljs-literal">false</span>);<br>    <span class="hljs-built_in">cin</span>.tie(<span class="hljs-number">0</span>);<br>    <span class="hljs-built_in">string</span> s;<br>    getline(<span class="hljs-built_in">cin</span>, s);<br>    <span class="hljs-built_in">cout</span>&lt;&lt;s;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}<br><br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac上使用C++万能头文件</title>
    <link href="/posts/33854.html"/>
    <url>/posts/33854.html</url>
    
    <content type="html"><![CDATA[<h1 id="Mac上使用C-万能头文件"><a href="#Mac上使用C-万能头文件" class="headerlink" title="Mac上使用C++万能头文件"></a>Mac上使用C++万能头文件</h1><p>========================</p><h2 id="下述代码相当于-include-lt-bits-stdc-h-gt"><a href="#下述代码相当于-include-lt-bits-stdc-h-gt" class="headerlink" title="下述代码相当于#include<bits/stdc++.h>"></a>下述代码相当于#include&lt;bits/stdc++.h&gt;</h2><p>直接将下列文件拷贝或移入工程，引用时，使用<code>#include "stdc++.hpp"</code>,当然你可以自定义该hpp头文件名。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  stdc++.hpp</span><br><span class="hljs-comment">//  Code</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东 on 2021/1/1.</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> stdc___hpp</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> stdc___hpp</span><br><br><span class="hljs-comment">//下述代码相当于#include&lt;bits/stdc++.h&gt;</span><br><span class="hljs-comment">// C++ includes used for precompiling -*- C++ -*-</span><br> <br><span class="hljs-comment">// Copyright (C) 2003-2014 Free Software Foundation, Inc.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// This file is part of the GNU ISO C++ Library.  This library is free</span><br><span class="hljs-comment">// software; you can redistribute it and/or modify it under the</span><br><span class="hljs-comment">// terms of the GNU General Public License as published by the</span><br><span class="hljs-comment">// Free Software Foundation; either version 3, or (at your option)</span><br><span class="hljs-comment">// any later version.</span><br> <br><span class="hljs-comment">// This library is distributed in the hope that it will be useful,</span><br><span class="hljs-comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="hljs-comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="hljs-comment">// GNU General Public License for more details.</span><br> <br><span class="hljs-comment">// Under Section 7 of GPL version 3, you are granted additional</span><br><span class="hljs-comment">// permissions described in the GCC Runtime Library Exception, version</span><br><span class="hljs-comment">// 3.1, as published by the Free Software Foundation.</span><br> <br><span class="hljs-comment">// You should have received a copy of the GNU General Public License and</span><br><span class="hljs-comment">// a copy of the GCC Runtime Library Exception along with this program;</span><br><span class="hljs-comment">// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see</span><br><span class="hljs-comment">// &lt;http://www.gnu.org/licenses/&gt;.</span><br> <br><span class="hljs-comment">/** @file stdc++.h</span><br><span class="hljs-comment"> *  This is an implementation file for a precompiled header.</span><br><span class="hljs-comment"> */</span><br> <br><span class="hljs-comment">// 17.4.1.2 Headers</span><br> <br><span class="hljs-comment">// C</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> _GLIBCXX_NO_ASSERT</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cassert&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cctype&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cerrno&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cfloat&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ciso646&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;climits&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;clocale&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;csetjmp&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;csignal&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdarg&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstddef&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctime&gt;</span></span><br> <br><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> __cplusplus &gt;= 201103L</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ccomplex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cfenv&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cinttypes&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdbool&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdint&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctgmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cwchar&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cwctype&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br> <br><span class="hljs-comment">// C++</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;bitset&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;complex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;deque&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;exception&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;fstream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;functional&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iomanip&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ios&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iosfwd&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;istream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iterator&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;limits&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;list&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;locale&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;memory&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;new&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;numeric&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;queue&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;sstream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stack&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdexcept&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;streambuf&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;typeinfo&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;utility&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;valarray&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br> <br><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> __cplusplus &gt;= 201103L</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;array&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;atomic&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;chrono&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;condition_variable&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;forward_list&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;future&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;initializer_list&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;mutex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;random&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ratio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;regex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;scoped_allocator&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;system_error&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;thread&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;tuple&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;typeindex&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;type_traits&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unordered_map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unordered_set&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span> <span class="hljs-comment">/* stdc___hpp */</span></span><br><br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据结构与算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>InterfaceKit：一行代码实现在SwiftUI界面使用UIKit、AppKit和WatchKit的接口！</title>
    <link href="/posts/47700.html"/>
    <url>/posts/47700.html</url>
    
    <content type="html"><![CDATA[<h1 id="InterfaceKit"><a href="#InterfaceKit" class="headerlink" title="InterfaceKit"></a>InterfaceKit</h1><p>========================</p><p><code>一行代码</code>实现在<code>SwiftUI</code>界面使用<code>UIKit、AppKit和WatchKit</code>的接口！</p><h5 id="English-English-Document"><a href="#English-English-Document" class="headerlink" title="English: English Document"></a>English: <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.md">English Document</a></h5><h5 id="代码解释文档：https-github-com-adong666666-InterfaceKitDoc（或此存储库的Docs）"><a href="#代码解释文档：https-github-com-adong666666-InterfaceKitDoc（或此存储库的Docs）" class="headerlink" title="代码解释文档：https://github.com/adong666666/InterfaceKitDoc（或此存储库的Docs）"></a>代码解释文档：<a href="https://github.com/adong666666/InterfaceKitDoc">https://github.com/adong666666/InterfaceKitDoc</a>（或此存储库的<code>Docs</code>）</h5><p>InterfaceKit的基本思想是，我们想要一些用户界面抽象层，它能充分封装直接调用UIKit，AppKit和WatchKit。它应该足够简单，使普通的东西容易，但要足够全面，使复杂的东西也容易。</p><p>您可以在<a href="https://github.com/adong666666/InterfaceKit/blob/master/Vision.zh-Hans.md">愿景</a>中查看有关项目方向的更多信息。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs none">                    ┌──────────────┐<br>                    │   SwiftUI    │<br>                    └──────▲───────┘<br>                           │        <br>┌──────────────────────────┴───────────────────────────┐<br>│                    InterfaceKit                      │<br>└───────▲──────────────────▲───────────────────▲───────┘<br>        │                  │                   │        <br>┌───────┴──────┐    ┌──────┴───────┐    ┌──────┴───────┐<br>│     UIKit    │    │    AppKit    │    │   WatchKit   │<br>└──────────────┘    └──────────────┘    └──────────────┘<br></code></pre></td></tr></tbody></table></figure><ul><li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E5%B9%B3%E5%8F%B0">平台</a></li><li><a href="#%E7%A4%BE%E5%8C%BA">社区</a></li><li><a href="#%E7%8A%B6%E6%80%81">状态</a></li><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a></li><li><a href="#%E4%BF%A1%E7%94%A8">信用</a></li><li><a href="#%E6%8D%90%E7%8C%AE">捐献</a></li><li><a href="#%E8%B4%A1%E7%8C%AE">贡献</a></li><li><a href="#%E8%AE%B8%E5%8F%AF">许可</a></li><li><a href="#%E7%89%88%E6%9C%AC%E5%8E%86%E5%8F%B2">版本历史</a></li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用UIKit</li><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用AppKit</li><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用WatchKit</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h3><h4 id="对于iOS或tvOS："><a href="#对于iOS或tvOS：" class="headerlink" title="对于iOS或tvOS："></a>对于iOS或tvOS：</h4><ul><li><p>展示UIView</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">InterfaceView</span>(<span class="hljs-type">MyUIView</span>())<br></code></pre></td></tr></tbody></table></figure></li><li><p>展示UIViewController</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">InterfaceViewController</span>(<span class="hljs-type">MyUIViewController</span>())<br></code></pre></td></tr></tbody></table></figure></li></ul><h4 id="对于macOS："><a href="#对于macOS：" class="headerlink" title="对于macOS："></a>对于macOS：</h4><ul><li><p>展示NSView</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">NSInterfaceView</span>(<span class="hljs-type">MyNSView</span>())<br></code></pre></td></tr></tbody></table></figure></li><li><p>展示NSViewController</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">NSInterfaceViewController</span>(<span class="hljs-type">MyNSViewController</span>())<br></code></pre></td></tr></tbody></table></figure></li></ul><h4 id="对于watchOS："><a href="#对于watchOS：" class="headerlink" title="对于watchOS："></a>对于watchOS：</h4><ul><li>展示WKInterfaceObject</li></ul><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">WKInterfaceView</span>(<span class="hljs-type">MyWKInterfaceObject</span>())<br></code></pre></td></tr></tbody></table></figure><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> InterfaceKit<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">MyInterfaceView</span>: <span class="hljs-title">View</span> </span>{<br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> {<br>        <span class="hljs-type">ZStack</span> {<br>            <span class="hljs-type">InterfaceViewController</span>(<span class="hljs-type">MyViewController</span>())<br>            <span class="hljs-type">InterfaceView</span>(<span class="hljs-type">MyView</span>())<br>            <span class="hljs-type">SwiftUIView</span>()<br>        }<br>    }<br>}<br><br><span class="hljs-keyword">#if</span> <span class="hljs-type">DEBUG</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">MyInterfaceView_Previews</span>: <span class="hljs-title">PreviewProvider</span> </span>{<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">var</span> previews: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> {<br>        <span class="hljs-type">MyInterfaceView</span>()<br>    }<br>}<br><span class="hljs-keyword">#endif</span><br></code></pre></td></tr></tbody></table></figure><h3 id="配合闭包使用"><a href="#配合闭包使用" class="headerlink" title="配合闭包使用"></a>配合闭包使用</h3><p>展示SwiftuI视图时，您可以执行一些操作。</p><ul><li>示例</li></ul><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">InterfaceViewController</span>(<span class="hljs-type">MyUIViewController</span>.shared, {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"Hello World"</span>)<br>    <span class="hljs-type">MyUIViewController</span>.shared.delegate <span class="hljs-operator">=</span> <span class="hljs-type">SomeViewControler</span>.shared<br>    <span class="hljs-type">MyUIViewController</span>.shared.view.alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><br>    <span class="hljs-type">MyUIViewController</span>.shared.view.backgroundColor <span class="hljs-operator">=</span> .white<br>    <span class="hljs-type">MyUIViewController</span>.someFunction()<br>    networkRequest()<br>    <span class="hljs-type">JSONParsing</span>()<br>    downloadFile()<br>    showProgress()<br>    makeToast()<br>    databaseOperation()<br>    <span class="hljs-comment">//do something</span><br>    <span class="hljs-operator">...</span><br>})<br>.navigationBarBackButtonHidden(<span class="hljs-literal">false</span>)<br>.navigationBarHidden(<span class="hljs-literal">false</span>)<br>.navigationBarTitle(<span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"Title"</span>), displayMode: .large)<br></code></pre></td></tr></tbody></table></figure><h3 id="多平台"><a href="#多平台" class="headerlink" title="多平台"></a>多平台</h3><p>InterfaceKit 让多平台编程更加清晰。</p><ul><li>示例</li></ul><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> MapKit<br><span class="hljs-keyword">import</span> InterfaceKit<br><br><span class="hljs-keyword">let</span> kStr <span class="hljs-operator">=</span> <span class="hljs-string">"Hello World"</span><br><span class="hljs-keyword">#if</span> os(iOS) <span class="hljs-operator">||</span> os(tvOS)<br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSViewController</span> <span class="hljs-operator">=</span> <span class="hljs-type">UIViewController</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSView</span> <span class="hljs-operator">=</span> <span class="hljs-type">UILabel</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSInterfaceView</span> <span class="hljs-operator">=</span> <span class="hljs-type">InterfaceView</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSInterfaceVC</span> <span class="hljs-operator">=</span> <span class="hljs-type">InterfaceViewController</span><br>    <span class="hljs-keyword">let</span> kBounds <span class="hljs-operator">=</span> <span class="hljs-type">UIScreen</span>.main.bounds <span class="hljs-keyword">as</span> <span class="hljs-type">CGRect</span>?<br><span class="hljs-keyword">#elseif</span> os(macOS)<br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSViewController</span> <span class="hljs-operator">=</span> <span class="hljs-type">NSViewController</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSView</span> <span class="hljs-operator">=</span> <span class="hljs-type">NSTextField</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSInterfaceView</span> <span class="hljs-operator">=</span> <span class="hljs-type">NSInterfaceView</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSInterfaceVC</span> <span class="hljs-operator">=</span> <span class="hljs-type">NSInterfaceViewController</span><br>    <span class="hljs-keyword">let</span> kBounds <span class="hljs-operator">=</span> <span class="hljs-type">NSScreen</span>.main<span class="hljs-operator">?</span>.frame<br><span class="hljs-keyword">#endif</span><br><br><span class="hljs-keyword">@main</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">EApp</span>: <span class="hljs-title">App</span> </span>{<br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">Scene</span> {<br>        <span class="hljs-type">WindowGroup</span> {<br>            <span class="hljs-type">ZStack</span> {<br>                <span class="hljs-keyword">#if</span> <span class="hljs-operator">!</span>os(watchOS)<br>                    <span class="hljs-type">OSInterfaceView</span>(<span class="hljs-type">MKMapView</span>())<br>                    <span class="hljs-type">OSInterfaceView</span>(<span class="hljs-type">MyView</span>(), { <span class="hljs-built_in">print</span>(kStr) })<br>                    <span class="hljs-type">OSInterfaceVC</span>(<span class="hljs-type">MyVC</span>())<br>                <span class="hljs-keyword">#else</span><br>                    <span class="hljs-type">WKInterfaceView</span>(<span class="hljs-type">WKInterfaceMap</span>(), { <span class="hljs-built_in">print</span>(kStr) })<br>                <span class="hljs-keyword">#endif</span><br>                <span class="hljs-type">Text</span>(kStr).foregroundColor(.purple)<br>            }<br>        }<br>    }<br>}<br><br><span class="hljs-keyword">#if</span> <span class="hljs-operator">!</span>os(watchOS)<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyVC</span>: <span class="hljs-title">OSViewController</span> </span>{<br>    <span class="hljs-keyword">#if</span> os(iOS) <span class="hljs-operator">||</span> os(tvOS)<br>        <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">viewDidLoad</span>()</span> {<br>            <span class="hljs-keyword">let</span> lbl <span class="hljs-operator">=</span> <span class="hljs-type">MyView</span>()<br>            lbl.textAlignment <span class="hljs-operator">=</span> .right<br>            view.addSubview(lbl)<br>        }<br>    <span class="hljs-keyword">#elseif</span> os(macOS)<br>        <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">loadView</span>()</span> { view <span class="hljs-operator">=</span> <span class="hljs-type">MyView</span>() }<br>    <span class="hljs-keyword">#endif</span><br>}<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyView</span>: <span class="hljs-title">OSView</span> </span>{<br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">init</span>(<span class="hljs-params">frame</span>: <span class="hljs-type">CGRect</span>)</span> {<br>        <span class="hljs-keyword">super</span>.<span class="hljs-keyword">init</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: kBounds<span class="hljs-operator">!</span>.height <span class="hljs-operator">/</span> <span class="hljs-number">2</span> <span class="hljs-operator">-</span> <span class="hljs-number">60</span>, width: kBounds<span class="hljs-operator">!</span>.width, height: <span class="hljs-number">40</span>))<br>        <span class="hljs-keyword">#if</span> os(iOS) <span class="hljs-operator">||</span> os(tvOS)<br>            text <span class="hljs-operator">=</span> kStr<br>        <span class="hljs-keyword">#elseif</span> os(macOS)<br>            stringValue <span class="hljs-operator">=</span> kStr<br>        <span class="hljs-keyword">#endif</span><br>    }<br>    <br>    <span class="hljs-keyword">required</span> <span class="hljs-function"><span class="hljs-keyword">init?</span>(<span class="hljs-params">coder</span>: <span class="hljs-type">NSCoder</span>)</span> { <span class="hljs-built_in">fatalError</span>() }<br>}<br><span class="hljs-keyword">#endif</span><br></code></pre></td></tr></tbody></table></figure><h2 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h2><ul><li>iOS 13.0+ / macOS 10.15+ / tvOS 13.0+ / watchOS 6.0+</li><li>Xcode 11+</li><li>Swift 5.1+</li></ul><h2 id="交流"><a href="#交流" class="headerlink" title="交流"></a>交流</h2><ul><li>QQ群：1027277979</li><li>您可以和我联系（邮箱：<a href="mailto:3440217568@qq.com">3440217568@qq.com</a>，QQ：3440217568，微信：adongenjoylife，电话：15674119605）。</li><li>如果您发现了一个bug，并且可以提供可靠地重现它的步骤，请打开一个问题。</li><li>如果您有一个特性请求，请打开一个问题。</li><li>如果您想贡献，请提交一个拉取请求。</li></ul><h2 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h2><p>这个项目正在积极开发中。我们认为它可以用于项目开发。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下表显示了您应该根据您的Swift版本使用哪个版本的InterfaceKit。</p><table><thead><tr><th>Swift</th><th>InterfaceKit</th></tr></thead><tbody><tr><td>5.X</td><td>&gt;= 5.4.0</td></tr></tbody></table><p>InterfaceKit支持多种方法在项目中安装框架。</p><h3 id="直接拷贝"><a href="#直接拷贝" class="headerlink" title="直接拷贝"></a>直接拷贝</h3><p>通过运行以下命令来克隆此存储库：</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/adong666666/</span>InterfaceKit.git --depth=<span class="hljs-number">1</span><br></code></pre></td></tr></tbody></table></figure><p>将github工程中的<code>InterfaceKit</code>文件夹下的Swift文件复制到您的工程中。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/copy_files.png" alt=""></div><ul><li>如果是iOS或tvOS项目，您可以复制文件<code>UIInterface.swift</code>。</li><li>如果是macOS项目，您可以复制文件<code>NSInterface.swift</code>。</li><li>如果是watchOS项目，您可以复制文件<code>WKInterface.swift</code>。</li></ul><h3 id="CocoaPods安装"><a href="#CocoaPods安装" class="headerlink" title="CocoaPods安装"></a>CocoaPods安装</h3><p><a href="https://cocoapods.org/">CocoaPods</a> 是Cocoa项目的依赖关系管理器。有关使用和安装说明，请访问他们的网站。如果您还没有安装cocoapods则请先执行如下命令：</p><figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ gem <span class="hljs-keyword">install</span> cocoapods<br></code></pre></td></tr></tbody></table></figure><br>您需要一个`Podfile`文件来通过CocoaPods整合InterfaceKit到您的Xcode工程中去, 如果您没有Podfile，那么直接创建一个Podfile或使用此存储库在`PodfileExample`文件夹中提供的Podfile。Podfile的内容如下：<figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Podfile</span><br>source <span class="hljs-string">'https://github.com/CocoaPods/Specs.git'</span><br><span class="hljs-comment"># platform:ios, '13.0'</span><br>use_frameworks!<br>inhibit_all_warnings!<br><br>target <span class="hljs-string">'YOUR_TARGET_NAME'</span> <span class="hljs-keyword">do</span><br>    pod <span class="hljs-string">'InterfaceKit'</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># post_install do |installer_representation|</span><br><span class="hljs-comment">#   installer_representation.pods_project.targets.each do |target|</span><br><span class="hljs-comment">#     target.build_configurations.each do |config|</span><br><span class="hljs-comment">#       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'</span><br><span class="hljs-comment">#     end</span><br><span class="hljs-comment">#   end</span><br><span class="hljs-comment"># end</span><br></code></pre></td></tr></tbody></table></figure><p>用您的项目名称替换<code>YOUR_TARGET_NAME</code>。<br>要使用CocoaPods将InterfaceKit集成到Xcode项目中，请在<code>Podfile</code>中指定它：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit'</span><br></code></pre></td></tr></tbody></table></figure><p>或许您还没有更新CocoaPods, 那么<code>InterfaceKit</code> 可能不会被找到，您可以运行 <code>pod update</code>来更新CocoaPods，或者直接运行下面的命令行：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit'</span>, <span class="hljs-symbol">:git</span> =&gt; <span class="hljs-string">'https://github.com/adong666666/InterfaceKit.git'</span><br></code></pre></td></tr></tbody></table></figure><ul><li><p>如果只是针对iOS或tvOS项目，您可以在<code>Podfile</code>中指定它：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit/UIKit'</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>如果只是针对macOS项目，您可以在<code>Podfile</code>中指定它：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit/AppKit'</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>如果只是针对watchOS项目，您可以在<code>Podfile</code>中指定它：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit/WatchKit'</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>如果您要使用此框架的最新发布的版本，您可以在<code>Podfile</code>中指定它：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit'</span>, <span class="hljs-symbol">:git</span> =&gt; <span class="hljs-string">'https://github.com/adong666666/InterfaceKit.git'</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>如果您要使用此框架的<code>特定的</code>某一个版本，您可以在<code>Podfile</code>中指定它：</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit'</span>, <span class="hljs-symbol">:git</span> =&gt; <span class="hljs-string">'https://github.com/adong666666/InterfaceKit.git'</span>, <span class="hljs-symbol">:branch</span> =&gt; <span class="hljs-string">'master'</span><span class="hljs-comment">#, commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27", '~&gt; 5.4.0', :tag =&gt; '5.4.0'</span><br></code></pre></td></tr></tbody></table></figure></li></ul><p>然后，在<code>Podfile</code>所在的目录中（确保Podfile和xcodeproj文件位于同一目录中），运行以下命令：</p><figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ pod <span class="hljs-keyword">install</span><br></code></pre></td></tr></tbody></table></figure><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/PodfileLocation.png" alt=""></div><h3 id="Carthage"><a href="#Carthage" class="headerlink" title="Carthage"></a>Carthage</h3><p><a href="https://github.com/Carthage/Carthage">Carthage</a>是一个分散的依赖关系管理器，它构建依赖关系并为您提供二进制框架。</p><ol><li><p>要使用Carthage将InterfaceKit集成到Xcode项目中，请在此您的<code>Cartfile</code>中指定它（如果没有Cartfile，只需创建一个或使用此存储库在<code>CartfileExample</code>文件夹中提供的Cartfile）：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ogdl">github "adong666666/InterfaceKit" "master"<br></code></pre></td></tr></tbody></table></figure></li><li><p>然后，在<code>Cartfile</code>目录中（确保Podfile和xcodeproj文件位于同一目录中），运行<code>carthage update --use xcframeworks</code>。<br>或者</p><ul><li>对于iOS工程, 运行<code>carthage update --platform iOS</code>。</li><li>对于macOS工程, 运行<code>carthage update --platform macOS</code>。</li><li>对于tvOS工程, 运行<code>carthage update --platform tvOS</code>。</li><li>对于watchOS工程, 运行<code>carthage update --platform watchOS</code>。 <div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/CartfileLocation.png" alt=""></div></li></ul></li><li><p>在您的应用程序目标<code>“General”</code>设置选项卡的<code>“Frameworks,Libraries,and Embedded Content”</code>部分中，从磁盘上的Carthage/Build文件夹拖放<code>InterfaceKit</code>xcframework（或从xcframework中选择合适的framework）。</p></li></ol><h4 id="Carthage作为静态库"><a href="#Carthage作为静态库" class="headerlink" title="Carthage作为静态库"></a>Carthage作为静态库</h4><p>Carthage默认将InterfaceKit构建为一个动态库。</p><p>如果您希望使用Carthage将InterfaceKit构建为静态库，您可以在使用Carthage构建之前使用下面的脚本手动修改框架类型：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">carthage update InterfaceKit --platform iOS --no-build<br>sed -i -e <span class="hljs-string">'s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g'</span> Carthage/Checkouts/InterfaceKit/InterfaceKit/InterfaceKit.xcodeproj/project.pbxproj<br>carthage build InterfaceKit --platform iOS<br></code></pre></td></tr></tbody></table></figure><h3 id="Swift-Package-Manager"><a href="#Swift-Package-Manager" class="headerlink" title="Swift Package Manager"></a>Swift Package Manager</h3><p><a href="https://swift.org/package-manager/">Swift Package Manager</a>是一种用于自动分发Swift代码的工具，并集成到<code>Swift</code>编译器中。它处于早期开发阶段，但InterfaceKit仍支持在其支持的平台上使用它。</p><ol><li>设置Swift包后，将InterfaceKit添加为依赖项就像将其添加到<code>package.Swift</code>的<code>dependencies</code>的值一样简单。然后运行<code>swift build</code>。</li></ol><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift">dependencies: [<br>    .package(url: <span class="hljs-string">"https://github.com/adong666666/InterfaceKit.git"</span>, .upToNextMajor(from: <span class="hljs-string">"5.4.0"</span>))<br>]<br></code></pre></td></tr></tbody></table></figure><p>或者</p><ol><li>在Xcode中，选择File &gt; Swift Packages &gt; Add Package Dependency。</li><li>安装提示操作使用这个URL(“<a href="https://github.com/adong666666/InterfaceKit.git%E2%80%9D)%E6%9D%A5%E9%9B%86%E6%88%90%E6%AD%A4%E6%A1%86%E6%9E%B6">https://github.com/adong666666/InterfaceKit.git”)来集成此框架</a>.<div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/SwiftPackageManager.png" alt=""></div></li></ol><h3 id="手动设置"><a href="#手动设置" class="headerlink" title="手动设置"></a>手动设置</h3><p>如果您不想使用上述任何依赖关系管理器，可以手动将InterfaceKit集成到项目中。</p><h4 id="嵌入式框架"><a href="#嵌入式框架" class="headerlink" title="嵌入式框架"></a>嵌入式框架</h4><ul><li>打开Terminal，<code>cd</code>到顶级项目目录，如果您的项目未初始化为git存储库，则运行以下命令：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init<br></code></pre></td></tr></tbody></table></figure><ul><li>通过以下命令来将InterfaceKit添加为git<a href="https://git-scm.com/docs/git-submodule">子模块</a>：</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git submodule add https://github.com/adong666666/InterfaceKit.git<br></code></pre></td></tr></tbody></table></figure><ul><li><p>打开<code>InterfaceKit</code>文件夹，将<code>InterfaceKit.xcodeproj</code>拖到应用程序Xcode项目的项目导航器中。</p><blockquote><p>它应该嵌套在应用程序的蓝色项目图标下面。它是否高于或低于所有其他Xcode组并不重要。</p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/drag_framework.png" alt=""></div><ul><li><p>在项目导航器中选择<code>InterfaceKit.xcodeproj</code>，并验证部署目标是否与应用程序目标匹配。</p></li><li><p>接下来，在项目导航器（蓝色项目图标）中选择您的应用程序项目，以导航到目标配置窗口，并在侧边栏的“Targets”标题下选择应用程序目标。</p></li><li><p>在该窗口顶部的选项卡栏中，打开<code>“General”</code>面板。</p></li><li><p>单击<code>“Frameworks,Libraries,and Embedded Content”</code>部分下的<code>+</code>按钮。</p></li><li><p>您将看到<code>Workspace</code>下的<code>InterfaceKit</code>文件夹，<code>InterfaceKit</code>文件夹下有<code>InterfaceKit.framework</code>和<code>InterfaceKitTests.xctest</code></p><blockquote><p>点击<code>InterfaceKit.framework</code>，然后点击<code>Add</code></p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/add_framework.png" alt=""></div><ul><li><p>就这样！</p><blockquote><p><code>InterfaceKit.framework</code>在复制文件构建阶段自动添加为目标依赖项、链接框架和嵌入式框架，这是在模拟器和设备上构建所需的全部内容。</p></blockquote></li></ul><h3 id="解压，拖拽"><a href="#解压，拖拽" class="headerlink" title="解压，拖拽"></a>解压，拖拽</h3><ol><li><p>解压此存储库提供的<code>InterfaceKit.xcframework.zip</code>文件。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/unzip.png" alt=""></div></li><li><p>在应用程序目标的<code>“General”</code>设置选项卡上，在<code>“Frameworks,Libraries,and Embedded Content”</code>部分，拖放解压缩后的文件<code>InterfaceKit.xcframework</code>（或从InterfaceKit.xcframework中选择合适的framework）。</p></li></ol><ul><li><p>如果您使用<code>xcfamework</code>，只需拖放<code>InterfaceKit.xcframework</code>。<code>InterfaceKit.xcframework</code>支持所有四种平台（<code>iOS、macOS、tvOS、watchOS</code>）。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/use_xcframeworks.png" alt=""></div></li><li><p>如果您使用<code>framework</code>，请根据文件夹名称和项目平台从InterfaceKit.xcframework中选择合适的框架。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/use_frameworks.png" alt=""></div></li></ul><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="为什么使用-InterfaceKit"><a href="#为什么使用-InterfaceKit" class="headerlink" title="为什么使用 InterfaceKit?"></a>为什么使用 InterfaceKit?</h3><p><code>一行代码</code>实现在<code>SwiftUI</code>界面使用<code>UIKit、AppKit和WatchKit</code>的接口！ InterfaceKit 同时支持全部四个平台(<code>iOS, macOS, tvOS, watchOS</code>)。InterfaceKit<code>持续</code>更新。</p><h2 id="信用"><a href="#信用" class="headerlink" title="信用"></a>信用</h2><p>InterfaceKit 由<a href="https://zsd.name/">张赛东</a>持续更新。 您可以关注他 <a href="https://github.com/adong666666">@Github</a> 以及时了解工程的更新与发布。</p><h3 id="安全披露"><a href="#安全披露" class="headerlink" title="安全披露"></a>安全披露</h3><p>如果您认为InterfaceKit存在安全漏洞，请您尽快通过邮箱告知：<a href="mailto:3440217568@qq.com">3440217568@qq.com</a>。</p><h2 id="捐献"><a href="#捐献" class="headerlink" title="捐献"></a>捐献</h2><p>不需要捐献，但仍表示感谢。</p><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><p>您喜欢InterfaceKit吗？真好！我们真的需要您的帮助！</p><p>开源不仅仅是编写代码。您可以帮我们做以下的任何一件事：</p><ul><li>查找（和报告）漏洞。</li><li>新功能建议。</li><li>回答问题。</li><li>文件改进。</li><li>查看拉取请求。</li><li>帮助管理问题优先级。</li><li>修复错误/新功能。</li></ul><p>如果您觉得这些听起来很酷，发送一个请求！第一次贡献之后，我们会将把您设置为此存储库的成员，以便您可以合并请求，您可以<a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.zh-Hans.md">在我们的投稿人指南中</a>阅读更多的细节。</p><p>InterfaceKit的社区拥有巨大的正能量，维护人员致力于保持事物的精彩。就像 <a href="https://github.com/CocoaPods/CocoaPods/wiki/Communication-&amp;-Design-Rules">在CocoaPods社区</a>, 总是表现出积极的意图；即使一个评论听起来很刻薄，也要让这个人从怀疑中受益。</p><p>请注意，这个项目伴随着贡献者的行为准则而发布。参与此项目即表示您同意遵守<a href="https://github.com/adong666666/InterfaceKit/blob/master/Code%20of%20Conduct.zh-Hans.md">其条款</a>.</p><h3 id="添加新源文件"><a href="#添加新源文件" class="headerlink" title="添加新源文件"></a>添加新源文件</h3><p>如果从InterfaceKIt添加或删除源文件，则需要对此存储库根目录下的<code>InterfaceKIt.xcworkspace</code>项目进行相应的更改。这个项目用于迦太基。别担心，如果您忘记了，在提交拉取请求时会自动收到警告。</p><h3 id="帮助我们改进InterfaceKit的文档"><a href="#帮助我们改进InterfaceKit的文档" class="headerlink" title="帮助我们改进InterfaceKit的文档"></a>帮助我们改进InterfaceKit的文档</h3><p>无论您是核心成员还是第一次尝试它的用户，您都可以通过改进文档对InterfaceKit做出有价值的贡献。帮助我们：</p><ul><li>向我们发送有关您认为混淆或遗漏的内容的反馈</li><li>建议用更好的措辞或方式来解释某些话题</li><li>通过GitHub向我们发送拉取请求</li><li>改进 <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.md">英文文档</a></li></ul><h3 id="上面的话太啰嗦了？-那么直接看下面吧。"><a href="#上面的话太啰嗦了？-那么直接看下面吧。" class="headerlink" title="上面的话太啰嗦了？ 那么直接看下面吧。"></a>上面的话太啰嗦了？ 那么直接看下面吧。</h3><ul><li>分叉此存储库！</li><li>创建您的分支：<code>git checkout -b my-new-feature</code></li><li>提交您的更改：<code>git commit -am 'Add some feature'</code></li><li>推送至该分支：<code>git push origin my-new-feature</code></li><li>发起拉取请求</li><li>其他：<br>详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.zh-Hans.md">贡献</a>。</li></ul><h2 id="许可"><a href="#许可" class="headerlink" title="许可"></a>许可</h2><p>InterfaceKit是在MIT许可下发布的，详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/LICENSE.zh-Hans.md">许可</a>。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title="版本历史"></a>版本历史</h2><p>详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/CHANGELOG.zh-Hans.md">版本历史</a>。</p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>git</tag>
      
      <tag>framework</tag>
      
      <tag>github</tag>
      
      <tag>carthage</tag>
      
      <tag>cocoapods</tag>
      
      <tag>macOS</tag>
      
      <tag>tvOS</tag>
      
      <tag>watchOS</tag>
      
      <tag>swift package manager</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>InterfaceKit--One line of code to implement interfaces of UIKit,AppKit,and WatchKit in SwiftUI interface!</title>
    <link href="/posts/35069.html"/>
    <url>/posts/35069.html</url>
    
    <content type="html"><![CDATA[<h1 id="InterfaceKit"><a href="#InterfaceKit" class="headerlink" title="InterfaceKit"></a>InterfaceKit</h1><p>========================</p><p><code>One line of code</code> to implement interfaces of <code>UIKit,AppKit,and WatchKit</code> in <code>SwiftUI</code> interface!</p><h5 id="Chinese-Simplified-中文文档"><a href="#Chinese-Simplified-中文文档" class="headerlink" title="Chinese (Simplified): 中文文档"></a>Chinese (Simplified): <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.zh-Hans.md">中文文档</a></h5><h5 id="Code-interpretation-document-https-github-com-adong666666-InterfaceKitDoc-or-this-repository’s-Docs"><a href="#Code-interpretation-document-https-github-com-adong666666-InterfaceKitDoc-or-this-repository’s-Docs" class="headerlink" title="Code interpretation document: https://github.com/adong666666/InterfaceKitDoc(or this repository’s Docs)"></a>Code interpretation document: <a href="https://github.com/adong666666/InterfaceKitDoc">https://github.com/adong666666/InterfaceKitDoc</a>(or this repository’s <code>Docs</code>)</h5><p>The basic idea of InterfaceKit is that we want some user interface abstraction layer that sufficiently encapsulates actually calling UIKit,AppKit,and WatchKit directly. It should be simple enough that common things are easy, but comprehensive enough that complicated things are also easy.</p><p>You can check out more about the project direction in the <a href="https://github.com/adong666666/InterfaceKit/blob/master/Vision.md">vision document</a>.</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs none">                    ┌──────────────┐<br>                    │   SwiftUI    │<br>                    └──────▲───────┘<br>                           │        <br>┌──────────────────────────┴───────────────────────────┐<br>│                    InterfaceKit                      │<br>└───────▲──────────────────▲───────────────────▲───────┘<br>        │                  │                   │        <br>┌───────┴──────┐    ┌──────┴───────┐    ┌──────┴───────┐<br>│     UIKit    │    │    AppKit    │    │   WatchKit   │<br>└──────────────┘    └──────────────┘    └──────────────┘<br></code></pre></td></tr></tbody></table></figure><ul><li><a href="#features">Features</a></li><li><a href="#usage">Usage</a></li><li><a href="#requirements">Requirements</a></li><li><a href="#communication">Communication</a></li><li><a href="#status">Status</a></li><li><a href="#installation">Installation</a></li><li><a href="#faq">FAQ</a></li><li><a href="#credits">Credits</a></li><li><a href="#donations">Donations</a></li><li><a href="#contributing">Contributing</a></li><li><a href="#license">License</a></li><li><a href="#history">History</a></li></ul><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li><input checked="" disabled="" type="checkbox"> use interface of UIKit in SwiftUI interface </li><li><input checked="" disabled="" type="checkbox"> use interface of AppKit in SwiftUI interface</li><li><input checked="" disabled="" type="checkbox"> use interface of WatchKit in SwiftUI interface</li></ul><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Universal"><a href="#Universal" class="headerlink" title="Universal"></a>Universal</h3><h4 id="For-iOS-or-tvOS"><a href="#For-iOS-or-tvOS" class="headerlink" title="For iOS or tvOS:"></a>For iOS or tvOS:</h4><ul><li><p>To present UIView.</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">InterfaceView</span>(<span class="hljs-type">MyUIView</span>())<br></code></pre></td></tr></tbody></table></figure></li><li><p>To present UIViewController.</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">InterfaceViewController</span>(<span class="hljs-type">MyUIViewController</span>())<br></code></pre></td></tr></tbody></table></figure></li></ul><h4 id="For-macOS"><a href="#For-macOS" class="headerlink" title="For macOS:"></a>For macOS:</h4><ul><li><p>To present NSView.</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">NSInterfaceView</span>(<span class="hljs-type">MyNSView</span>())<br></code></pre></td></tr></tbody></table></figure></li><li><p>To present NSViewController.</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">NSInterfaceViewController</span>(<span class="hljs-type">MyNSViewController</span>())<br></code></pre></td></tr></tbody></table></figure></li></ul><h4 id="For-watchOS"><a href="#For-watchOS" class="headerlink" title="For watchOS:"></a>For watchOS:</h4><ul><li>To present WKInterfaceObject. </li></ul><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">WKInterfaceView</span>(<span class="hljs-type">MyWKInterfaceObject</span>())<br></code></pre></td></tr></tbody></table></figure><h4 id="eg"><a href="#eg" class="headerlink" title="eg."></a>eg.</h4><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> InterfaceKit<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">MyInterfaceView</span>: <span class="hljs-title">View</span> </span>{<br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> {<br>        <span class="hljs-type">ZStack</span> {<br>            <span class="hljs-type">InterfaceViewController</span>(<span class="hljs-type">MyViewController</span>())<br>            <span class="hljs-type">InterfaceView</span>(<span class="hljs-type">MyView</span>())<br>            <span class="hljs-type">SwiftUIView</span>()<br>        }<br>    }<br>}<br><br><span class="hljs-keyword">#if</span> <span class="hljs-type">DEBUG</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">MyInterfaceView_Previews</span>: <span class="hljs-title">PreviewProvider</span> </span>{<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">var</span> previews: <span class="hljs-keyword">some</span> <span class="hljs-type">View</span> {<br>        <span class="hljs-type">MyInterfaceView</span>()<br>    }<br>}<br><span class="hljs-keyword">#endif</span><br></code></pre></td></tr></tbody></table></figure><h3 id="With-Closure"><a href="#With-Closure" class="headerlink" title="With Closure"></a>With Closure</h3><p>You can do something while presenting SwiftUI view.</p><ul><li>For Example</li></ul><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">InterfaceViewController</span>(<span class="hljs-type">MyUIViewController</span>.shared, {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"Hello World"</span>)<br>    <span class="hljs-type">MyUIViewController</span>.shared.delegate <span class="hljs-operator">=</span> <span class="hljs-type">SomeViewControler</span>.shared<br>    <span class="hljs-type">MyUIViewController</span>.shared.view.alpha <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><br>    <span class="hljs-type">MyUIViewController</span>.shared.view.backgroundColor <span class="hljs-operator">=</span> .white<br>    <span class="hljs-type">MyUIViewController</span>.someFunction()<br>    networkRequest()<br>    <span class="hljs-type">JSONParsing</span>()<br>    downloadFile()<br>    showProgress()<br>    makeToast()<br>    databaseOperation()<br>    <span class="hljs-comment">//do something</span><br>    <span class="hljs-operator">...</span><br>})<br>.navigationBarBackButtonHidden(<span class="hljs-literal">false</span>)<br>.navigationBarHidden(<span class="hljs-literal">false</span>)<br>.navigationBarTitle(<span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"Title"</span>), displayMode: .large)<br></code></pre></td></tr></tbody></table></figure><h3 id="Multiple-platforms"><a href="#Multiple-platforms" class="headerlink" title="Multiple platforms"></a>Multiple platforms</h3><p>InterfaceKit makes it clearer for multiple platforms programming.</p><ul><li>For Example</li></ul><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> MapKit<br><span class="hljs-keyword">import</span> InterfaceKit<br><br><span class="hljs-keyword">let</span> kStr <span class="hljs-operator">=</span> <span class="hljs-string">"Hello World"</span><br><span class="hljs-keyword">#if</span> os(iOS) <span class="hljs-operator">||</span> os(tvOS)<br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSViewController</span> <span class="hljs-operator">=</span> <span class="hljs-type">UIViewController</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSView</span> <span class="hljs-operator">=</span> <span class="hljs-type">UILabel</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSInterfaceView</span> <span class="hljs-operator">=</span> <span class="hljs-type">InterfaceView</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSInterfaceVC</span> <span class="hljs-operator">=</span> <span class="hljs-type">InterfaceViewController</span><br>    <span class="hljs-keyword">let</span> kBounds <span class="hljs-operator">=</span> <span class="hljs-type">UIScreen</span>.main.bounds <span class="hljs-keyword">as</span> <span class="hljs-type">CGRect</span>?<br><span class="hljs-keyword">#elseif</span> os(macOS)<br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSViewController</span> <span class="hljs-operator">=</span> <span class="hljs-type">NSViewController</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSView</span> <span class="hljs-operator">=</span> <span class="hljs-type">NSTextField</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSInterfaceView</span> <span class="hljs-operator">=</span> <span class="hljs-type">NSInterfaceView</span><br>    <span class="hljs-keyword">typealias</span> <span class="hljs-type">OSInterfaceVC</span> <span class="hljs-operator">=</span> <span class="hljs-type">NSInterfaceViewController</span><br>    <span class="hljs-keyword">let</span> kBounds <span class="hljs-operator">=</span> <span class="hljs-type">NSScreen</span>.main<span class="hljs-operator">?</span>.frame<br><span class="hljs-keyword">#endif</span><br><br><span class="hljs-keyword">@main</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">EApp</span>: <span class="hljs-title">App</span> </span>{<br>    <span class="hljs-keyword">var</span> body: <span class="hljs-keyword">some</span> <span class="hljs-type">Scene</span> {<br>        <span class="hljs-type">WindowGroup</span> {<br>            <span class="hljs-type">ZStack</span> {<br>                <span class="hljs-keyword">#if</span> <span class="hljs-operator">!</span>os(watchOS)<br>                    <span class="hljs-type">OSInterfaceView</span>(<span class="hljs-type">MKMapView</span>())<br>                    <span class="hljs-type">OSInterfaceView</span>(<span class="hljs-type">MyView</span>(), { <span class="hljs-built_in">print</span>(kStr) })<br>                    <span class="hljs-type">OSInterfaceVC</span>(<span class="hljs-type">MyVC</span>())<br>                <span class="hljs-keyword">#else</span><br>                    <span class="hljs-type">WKInterfaceView</span>(<span class="hljs-type">WKInterfaceMap</span>(), { <span class="hljs-built_in">print</span>(kStr) })<br>                <span class="hljs-keyword">#endif</span><br>                <span class="hljs-type">Text</span>(kStr).foregroundColor(.purple)<br>            }<br>        }<br>    }<br>}<br><br><span class="hljs-keyword">#if</span> <span class="hljs-operator">!</span>os(watchOS)<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyVC</span>: <span class="hljs-title">OSViewController</span> </span>{<br>    <span class="hljs-keyword">#if</span> os(iOS) <span class="hljs-operator">||</span> os(tvOS)<br>        <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">viewDidLoad</span>()</span> {<br>            <span class="hljs-keyword">let</span> lbl <span class="hljs-operator">=</span> <span class="hljs-type">MyView</span>()<br>            lbl.textAlignment <span class="hljs-operator">=</span> .right<br>            view.addSubview(lbl)<br>        }<br>    <span class="hljs-keyword">#elseif</span> os(macOS)<br>        <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">loadView</span>()</span> { view <span class="hljs-operator">=</span> <span class="hljs-type">MyView</span>() }<br>    <span class="hljs-keyword">#endif</span><br>}<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyView</span>: <span class="hljs-title">OSView</span> </span>{<br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">init</span>(<span class="hljs-params">frame</span>: <span class="hljs-type">CGRect</span>)</span> {<br>        <span class="hljs-keyword">super</span>.<span class="hljs-keyword">init</span>(frame: <span class="hljs-type">CGRect</span>(x: <span class="hljs-number">0</span>, y: kBounds<span class="hljs-operator">!</span>.height <span class="hljs-operator">/</span> <span class="hljs-number">2</span> <span class="hljs-operator">-</span> <span class="hljs-number">60</span>, width: kBounds<span class="hljs-operator">!</span>.width, height: <span class="hljs-number">40</span>))<br>        <span class="hljs-keyword">#if</span> os(iOS) <span class="hljs-operator">||</span> os(tvOS)<br>            text <span class="hljs-operator">=</span> kStr<br>        <span class="hljs-keyword">#elseif</span> os(macOS)<br>            stringValue <span class="hljs-operator">=</span> kStr<br>        <span class="hljs-keyword">#endif</span><br>    }<br>    <br>    <span class="hljs-keyword">required</span> <span class="hljs-function"><span class="hljs-keyword">init?</span>(<span class="hljs-params">coder</span>: <span class="hljs-type">NSCoder</span>)</span> { <span class="hljs-built_in">fatalError</span>() }<br>}<br><span class="hljs-keyword">#endif</span><br></code></pre></td></tr></tbody></table></figure><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ul><li>iOS 13.0+ / macOS 10.15+ / tvOS 13.0+ / watchOS 6.0+</li><li>Xcode 11+</li><li>Swift 5.1+</li></ul><h2 id="Communication"><a href="#Communication" class="headerlink" title="Communication"></a>Communication</h2><ul><li>QQ Group: 1027277979</li><li>If you’d like to contact me, use mail:<a href="mailto:3440217568@qq.com">3440217568@qq.com</a> or QQ:3440217568 or WeChat:adongenjoylife or telephone:15674119605.</li><li>If you found a bug, and can provide steps to reliably reproduce it, please open an issue.</li><li>If you have a feature request, please open an issue.</li><li>If you want to contribute, please submit a pull request.</li></ul><h2 id="Status"><a href="#Status" class="headerlink" title="Status"></a>Status</h2><p>This project is actively under development. We consider it ready for production use.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Below is a table that shows which version of InterfaceKit you should use for your Swift version.</p><table><thead><tr><th>Swift</th><th>InterfaceKit</th></tr></thead><tbody><tr><td>5.X</td><td>&gt;= 5.4.0</td></tr></tbody></table><p>InterfaceKit supports multiple methods for installing the library in a project.</p><h3 id="Copy-to-your-project"><a href="#Copy-to-your-project" class="headerlink" title="Copy to your project"></a>Copy to your project</h3><p>Clone the repository by running the following command:</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/adong666666/</span>InterfaceKit.git --depth=<span class="hljs-number">1</span><br></code></pre></td></tr></tbody></table></figure><p>Copy the Swift files in <code>InterfaceKit</code> folder to your project.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/copy_files.png" alt=""></div><ul><li>If for iOS or tvOS project, you can copy the file <code>UIInterface.swift</code>.</li><li>If for macOS project, you can copy the file <code>NSInterface.swift</code>.</li><li>If for watchOS project, you can copy the file <code>WKInterface.swift</code>.</li></ul><h3 id="CocoaPods"><a href="#CocoaPods" class="headerlink" title="CocoaPods"></a>CocoaPods</h3><p><a href="https://cocoapods.org/">CocoaPods</a> is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. If you have not installed CocoaPods, just install it with the following command:</p><figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ gem <span class="hljs-keyword">install</span> cocoapods<br></code></pre></td></tr></tbody></table></figure><br>You need a `Podfile` to Integrate InterfaceKit into your Xcode project with CocoaPods. If you do not have a Podfile, just create one or use the Podfile provided in `PodfileExample` folder by this repository. Podfile is as follows.<figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># Podfile</span><br>source <span class="hljs-string">'https://github.com/CocoaPods/Specs.git'</span><br><span class="hljs-comment"># platform:ios, '13.0'</span><br>use_frameworks!<br>inhibit_all_warnings!<br><br>target <span class="hljs-string">'YOUR_TARGET_NAME'</span> <span class="hljs-keyword">do</span><br>    pod <span class="hljs-string">'InterfaceKit'</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment"># post_install do |installer_representation|</span><br><span class="hljs-comment">#   installer_representation.pods_project.targets.each do |target|</span><br><span class="hljs-comment">#     target.build_configurations.each do |config|</span><br><span class="hljs-comment">#       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'</span><br><span class="hljs-comment">#     end</span><br><span class="hljs-comment">#   end</span><br><span class="hljs-comment"># end</span><br></code></pre></td></tr></tbody></table></figure><p>Replace <code>YOUR_TARGET_NAME</code> with your project name.<br>To integrate InterfaceKit into your Xcode project using CocoaPods, specify it in your <code>Podfile</code>:</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit'</span><br></code></pre></td></tr></tbody></table></figure><p>Maybe you have not update CocoaPods, then <code>InterfaceKit</code> may not be found, you can run <code>pod update</code> to update CocoaPods, or just run the following command. </p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit'</span>, <span class="hljs-symbol">:git</span> =&gt; <span class="hljs-string">'https://github.com/adong666666/InterfaceKit.git'</span><br></code></pre></td></tr></tbody></table></figure><ul><li><p>If just for iOS or tvOS project, you can specify it in your <code>Podfile</code>:</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit/UIKit'</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>If just for mac project, you can specify it in your <code>Podfile</code>:</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit/AppKit'</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>If just for watchOS project, you can specify it in your <code>Podfile</code>:</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit/WatchKit'</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>If you want to use the newest release of the framework, you can specify it in your <code>Podfile</code>:</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit'</span>, <span class="hljs-symbol">:git</span> =&gt; <span class="hljs-string">'https://github.com/adong666666/InterfaceKit.git'</span><br></code></pre></td></tr></tbody></table></figure></li><li><p>If you want to use the <code>specific</code> release of the framework, you can specify it like following in your <code>Podfile</code>:</p><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">pod <span class="hljs-string">'InterfaceKit'</span>, <span class="hljs-symbol">:git</span> =&gt; <span class="hljs-string">'https://github.com/adong666666/InterfaceKit.git'</span>, <span class="hljs-symbol">:branch</span> =&gt; <span class="hljs-string">'master'</span><span class="hljs-comment">#, commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27", '~&gt; 5.4.0', :tag =&gt; '5.4.0'</span><br></code></pre></td></tr></tbody></table></figure></li></ul><p>Then, in the <code>Podfile</code> directory(Make sure that your Podfile and your xcodeproj file are in the same directory), run the following command:</p><figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ pod <span class="hljs-keyword">install</span><br></code></pre></td></tr></tbody></table></figure><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/PodfileLocation.png" alt=""></div><h3 id="Carthage"><a href="#Carthage" class="headerlink" title="Carthage"></a>Carthage</h3><p><a href="https://github.com/Carthage/Carthage">Carthage</a> is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.</p><ol><li><p>To integrate InterfaceKit into your Xcode project using Carthage, specify it in your <code>Cartfile</code>(If you don’t have Cartfile, just create one or use the Cartfile provided by this repository in <code>CartfileExample</code> folder):</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ogdl">github "adong666666/InterfaceKit" "master"<br></code></pre></td></tr></tbody></table></figure></li><li><p>Then, in the <code>Cartfile</code> directory(Make sure that your Podfile and your xcodeproj file are in the same directory), run <code>carthage update --use-xcframeworks</code>.<br>OR</p><ul><li>For iOS project, Run <code>carthage update --platform iOS</code>.</li><li>For macOS project, Run <code>carthage update --platform macOS</code>.</li><li>For tvOS project, Run <code>carthage update --platform tvOS</code>.</li><li>For watchOS project, Run <code>carthage update --platform watchOS</code>. <div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/CartfileLocation.png" alt=""></div></li></ul></li><li><p>On your application targets’ <code>"General"</code> settings tab, in the <code>"Frameworks,Libraries,and Embedded Content"</code> section, drag and drop <code>InterfaceKit</code> xcframework (or just select the appropriate framework from xcframework) from the Carthage/Build folder on disk.</p></li></ol><h4 id="Carthage-as-a-Static-Library"><a href="#Carthage-as-a-Static-Library" class="headerlink" title="Carthage as a Static Library"></a>Carthage as a Static Library</h4><p>Carthage defaults to building InterfaceKit as a Dynamic Library. </p><p>If you wish to build InterfaceKit as a Static Library using Carthage you may use the script below to manually modify the framework type before building with Carthage:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">carthage update InterfaceKit --platform iOS --no-build<br>sed -i -e <span class="hljs-string">'s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g'</span> Carthage/Checkouts/InterfaceKit/InterfaceKit/InterfaceKit.xcodeproj/project.pbxproj<br>carthage build InterfaceKit --platform iOS<br></code></pre></td></tr></tbody></table></figure><h3 id="Swift-Package-Manager"><a href="#Swift-Package-Manager" class="headerlink" title="Swift Package Manager"></a>Swift Package Manager</h3><p>The <a href="https://swift.org/package-manager/">Swift Package Manager</a> is a tool for automating the distribution of Swift code and is integrated into the <code>swift</code> compiler. It is in early development, but InterfaceKit does support its use on supported platforms.</p><ol><li>Once you have your Swift package set up, adding InterfaceKit as a dependency is as easy as adding it to the <code>dependencies</code> value of your <code>Package.swift</code>. Then run <code>swift build</code>.</li></ol><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift">dependencies: [<br>    .package(url: <span class="hljs-string">"https://github.com/adong666666/InterfaceKit.git"</span>, .upToNextMajor(from: <span class="hljs-string">"5.4.0"</span>))<br>]<br></code></pre></td></tr></tbody></table></figure><p>OR</p><ol><li>In Xcode, select File &gt; Swift Packages &gt; Add Package Dependency.</li><li>Follow the prompts using the URL(“<a href="https://github.com/adong666666/InterfaceKit.git&quot;">https://github.com/adong666666/InterfaceKit.git"</a>) for this repository.<div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/SwiftPackageManager.png" alt=""></div></li></ol><h3 id="Manually"><a href="#Manually" class="headerlink" title="Manually"></a>Manually</h3><p>If you prefer not to use any of the aforementioned dependency managers, you can integrate InterfaceKit into your project manually.</p><h4 id="Embedded-Framework"><a href="#Embedded-Framework" class="headerlink" title="Embedded Framework"></a>Embedded Framework</h4><ul><li>Open up Terminal, <code>cd</code> into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init<br></code></pre></td></tr></tbody></table></figure><ul><li>Add InterfaceKit as a git <a href="https://git-scm.com/docs/git-submodule">submodule</a> by running the following command:</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git submodule add https://github.com/adong666666/InterfaceKit.git<br></code></pre></td></tr></tbody></table></figure><ul><li><p>Open the <code>InterfaceKit</code> folder, and drag the <code>InterfaceKit.xcodeproj</code> into the Project Navigator of your application’s Xcode project.</p><blockquote><p>It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter.</p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/drag_framework.png" alt=""></div><ul><li><p>Select the <code>InterfaceKit.xcodeproj</code> in the Project Navigator and verify the deployment target matches that of your application target.</p></li><li><p>Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the “Targets” heading in the sidebar.</p></li><li><p>In the tab bar at the top of that window, open the <code>"General"</code> panel.</p></li><li><p>Click on the <code>+</code> button under the <code>"Frameworks,Libraries,and Embedded Content"</code> section.</p></li><li><p>You will see the <code>InterfaceKit</code> folder under <code>Workspace</code>. There are <code>InterfaceKit.framework</code> and  <code>InterfaceKitTests.xctest</code> in the <code>InterfaceKit</code> folder`</p><blockquote><p>Click <code>InterfaceKit.framework</code>, and then click <code>Add</code></p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/add_framework.png" alt=""></div><ul><li><p>And that’s it!</p><blockquote><p>The <code>InterfaceKit.framework</code> is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.</p></blockquote></li></ul><h3 id="Unzip-drag-and-drop"><a href="#Unzip-drag-and-drop" class="headerlink" title="Unzip,drag and drop"></a>Unzip,drag and drop</h3><ol><li><p>Unzip the <code>InterfaceKit.xcframework.zip</code> file provided by the repository.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/unzip.png" alt=""></div></li><li><p>On your application targets’ <code>“General”</code> settings tab, in the <code>"Frameworks,Libraries,and Embedded Content"</code> section, drag and drop the unzipped file <code>InterfaceKit.xcframework</code> (or just select the appropriate framework from InterfaceKit.xcframework).</p></li></ol><ul><li><p>If you use <code>xcfameworks</code>, just drag and drop <code>InterfaceKit.xcframework</code>. <code>InterfaceKit.xcframework</code> supports all four platforms(<code>iOS, macOS, tvOS, watchOS</code>).</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/use_xcframeworks.png" alt=""></div></li><li><p>If you use <code>frameworks</code>, select the appropriate framework from InterfaceKit.xcframework according to the folder name and the platform of your project.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/use_frameworks.png" alt=""></div></li></ul><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="Why-use-InterfaceKit"><a href="#Why-use-InterfaceKit" class="headerlink" title="Why use InterfaceKit?"></a>Why use InterfaceKit?</h3><p><code>One line of code</code> to implement interfaces of <code>UIKit,AppKit,and WatchKit</code> in <code>SwiftUI</code> interface! InterfaceKit supports for all four platforms(<code>iOS, macOS, tvOS, watchOS</code>). InterfaceKit is <code>constantly</code> updated.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p>InterfaceKit is owned and maintained by <a href="https://zsd.name/">Saidong Zhang</a>. You can follow him on github at <a href="https://github.com/adong666666">@Github</a> for project updates and releases. </p><h3 id="Security-Disclosure"><a href="#Security-Disclosure" class="headerlink" title="Security Disclosure"></a>Security Disclosure</h3><p>If you believe you have identified a security vulnerability with InterfaceKit, you should report it as soon as possible via email to <a href="mailto:3440217568@qq.com">3440217568@qq.com</a>. </p><h2 id="Donations"><a href="#Donations" class="headerlink" title="Donations"></a>Donations</h2><p>No donation required, but thanks anyway.</p><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>Hey! Do you like InterfaceKit? Awesome! We could actually really use your help!</p><p>Open source isn’t just writing code. InterfaceKit could use your help with any of the following:</p><ul><li>Finding (and reporting!) bugs.</li><li>New feature suggestions.</li><li>Answering questions on issues.</li><li>Documentation improvements.</li><li>Reviewing pull requests.</li><li>Helping to manage issue priorities.</li><li>Fixing bugs/new features.</li></ul><p>If any of that sounds cool to you, send a pull request! After your first contribution, we will add you as a member to the repo so you can merge pull requests and help steer the ship <span class="github-emoji"><span>🚢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a2.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> You can read more details about that <a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.md">in our contributor guidelines</a>.</p><p>InterfaceKit’s community has a tremendous positive energy, and the maintainers are committed to keeping things awesome. Like <a href="https://github.com/CocoaPods/CocoaPods/wiki/Communication-&amp;-Design-Rules">in the CocoaPods community</a>, always assume positive intent; even if a comment sounds mean-spirited, give the person the benefit of the doubt.</p><p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by <a href="https://github.com/adong666666/InterfaceKit/blob/master/Code%20of%20Conduct.md">its terms</a>.</p><h3 id="Adding-new-source-files"><a href="#Adding-new-source-files" class="headerlink" title="Adding new source files"></a>Adding new source files</h3><p>If you add or remove a source file from InterfaceKIt, a corresponding change needs to be made to the <code>InterfaceKit.xcworkspace</code> project at the root of this repository. This project is used for Carthage. Don’t worry, you’ll get an automated warning when submitting a pull request if you forget.</p><h3 id="Help-us-improve-InterfaceKit-documentation"><a href="#Help-us-improve-InterfaceKit-documentation" class="headerlink" title="Help us improve InterfaceKit documentation"></a>Help us improve InterfaceKit documentation</h3><p>Whether you’re a core member or a user trying it out for the first time, you can make a valuable contribution to InterfaceKit by improving the documentation. Help us by:</p><ul><li>sending us feedback about something you thought was confusing or simply missing</li><li>suggesting better wording or ways of explaining certain topics</li><li>sending us a pull request via GitHub</li><li>improving the <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.zh-Hans.md">Chinese documentation</a></li></ul><h3 id="Too-wordy-about-the-above-Then-just-do-it"><a href="#Too-wordy-about-the-above-Then-just-do-it" class="headerlink" title="Too wordy about the above? Then just do it."></a>Too wordy about the above? Then just do it.</h3><ul><li>Fork the repository!</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request</li><li>Other:<br><a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.md">See CONTRIBUTING.md</a> for details.</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>InterfaceKit is released under the MIT license. <a href="https://github.com/adong666666/InterfaceKit/blob/master/LICENSE.md">See LICENSE</a> for details.</p><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p><a href="https://github.com/adong666666/InterfaceKit/blob/master/CHANGELOG.md">See CHANGELOG.md</a> for details.</p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>git</tag>
      
      <tag>framework</tag>
      
      <tag>github</tag>
      
      <tag>carthage</tag>
      
      <tag>cocoapods</tag>
      
      <tag>macOS</tag>
      
      <tag>tvOS</tag>
      
      <tag>watchOS</tag>
      
      <tag>swift package manager</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jazzy生成代码解释文档</title>
    <link href="/posts/31013.html"/>
    <url>/posts/31013.html</url>
    
    <content type="html"><![CDATA[<h1 id="jazzy生成代码解释文档"><a href="#jazzy生成代码解释文档" class="headerlink" title="jazzy生成代码解释文档"></a>jazzy生成代码解释文档</h1><p>========================<br>realm的jazzy的确好用</p><h2 id="安装看官网"><a href="#安装看官网" class="headerlink" title="安装看官网"></a>安装看官网</h2><p><a href="https://github.com/realm/jazzy">https://github.com/realm/jazzy</a></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>这个不配置也可以生成文档，只是默认的文档比较丑，我用的文件如下</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">author: Saidong Zhang<br>author_url: https:<span class="hljs-regexp">//</span>zsd.name/<br>github_url: https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/adong666666/</span>InterfaceKit<br>root_url: https:<span class="hljs-regexp">//</span>zsd.name<span class="hljs-regexp">/InterfaceKit/</span><br>module: InterfaceKit<br>output: Docs<br>theme: fullwidth<br>xcodebuild_arguments: [-workspace, <span class="hljs-string">'InterfaceKit.xcworkspace'</span>, -scheme, <span class="hljs-string">'InterfaceKit'</span>]<br></code></pre></td></tr></tbody></table></figure><h2 id="命令行生成文档"><a href="#命令行生成文档" class="headerlink" title="命令行生成文档"></a>命令行生成文档</h2><p>我用这个命令行<code>jazzy -o Docs</code>将文档生成至Docs文件夹下，注意默认要在xcodeproj目录下执行。<br>这样一来，只要你的代码遵守iOS注释规范，就能生成非常漂亮的代码解释文档<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/jazzy%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E8%A7%A3%E9%87%8A%E6%96%87%E6%A1%A3/%E6%96%87%E6%A1%A3%E6%88%AA%E5%9B%BE.png" alt="文档截图"></p>]]></content>
    
    
    <categories>
      
      <category>文档处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
      <tag>Objective-C</tag>
      
      <tag>doc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>podspec示例</title>
    <link href="/posts/34032.html"/>
    <url>/posts/34032.html</url>
    
    <content type="html"><![CDATA[<h1 id="podspec示例"><a href="#podspec示例" class="headerlink" title="podspec示例"></a>podspec示例</h1><p>========================</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></div></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#</span><br><span class="hljs-comment">#  Be sure to run `pod spec lint CommonUse.podspec' to ensure this is a</span><br><span class="hljs-comment">#  valid spec and to remove all comments including this before submitting the spec.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  To learn more about Podspec attributes see http://docs.cocoapods.org/specification.html</span><br><span class="hljs-comment">#  To see working Podspecs in the CocoaPods repo see https://github.com/CocoaPods/Specs/</span><br><span class="hljs-comment">#</span><br><br>Pod::Spec.new <span class="hljs-keyword">do</span> <span class="hljs-params">|s|</span><br><br>  <span class="hljs-comment"># ―――  Spec Metadata  ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  These will help people to find your library, and whilst it</span><br>  <span class="hljs-comment">#  can feel like a chore to fill in it's definitely to your advantage. The</span><br>  <span class="hljs-comment">#  summary should be tweet-length, and the description more in depth.</span><br>  <span class="hljs-comment">#</span><br><br>  s.name         = <span class="hljs-string">"CommonUse"</span><br>  s.version      = <span class="hljs-string">"0.0.3"</span><br>  s.summary      = <span class="hljs-string">"I am now testing my first framwork"</span><br><br>  <span class="hljs-comment"># This description is used to generate tags and improve search results.</span><br>  <span class="hljs-comment">#   * Think: What does it do? Why did you write it? What is the focus?</span><br>  <span class="hljs-comment">#   * Try to keep it short, snappy and to the point.</span><br>  <span class="hljs-comment">#   * Write the description between the DESC delimiters below.</span><br>  <span class="hljs-comment">#   * Finally, don't worry about the indent, CocoaPods strips it!</span><br>  s.description  = &lt;&lt;-DESC<br>                   I am testing my framwork.Hope to create a perfect one soon .<br>                   DESC<br><br>  s.homepage     = <span class="hljs-string">"https://github.com/adong666666/CommonUse"</span><br>  <span class="hljs-comment"># s.screenshots  = "www.example.com/screenshots_1.gif", "www.example.com/screenshots_2.gif"</span><br><br><br>  <span class="hljs-comment"># ―――  Spec License  ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  Licensing your code is important. See http://choosealicense.com for more info.</span><br>  <span class="hljs-comment">#  CocoaPods will detect a license file if there is a named LICENSE*</span><br>  <span class="hljs-comment">#  Popular ones are 'MIT', 'BSD' and 'Apache License, Version 2.0'.</span><br>  <span class="hljs-comment">#</span><br><br>  <span class="hljs-comment"># s.license      = "MIT (example)"</span><br>  s.license      = { <span class="hljs-symbol">:type</span> =&gt; <span class="hljs-string">"MIT"</span>, <span class="hljs-symbol">:file</span> =&gt; <span class="hljs-string">"FILE_LICENSE"</span> }<br><br><br>  <span class="hljs-comment"># ――― Author Metadata  ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  Specify the authors of the library, with email addresses. Email addresses</span><br>  <span class="hljs-comment">#  of the authors are extracted from the SCM log. E.g. $ git log. CocoaPods also</span><br>  <span class="hljs-comment">#  accepts just a name if you'd rather not provide an email address.</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  Specify a social_media_url where others can refer to, for example a twitter</span><br>  <span class="hljs-comment">#  profile URL.</span><br>  <span class="hljs-comment">#</span><br><br>  s.author             = { <span class="hljs-string">"Zhangsaidong"</span> =&gt; <span class="hljs-string">"3440217568@qq.com"</span> }<br>  <span class="hljs-comment"># Or just: s.author    = "Zhangsaidong"</span><br>  <span class="hljs-comment"># s.authors            = { "Zhangsaidong" =&gt; "3440217568<span class="hljs-doctag">@qq</span>.com" }</span><br>  <span class="hljs-comment"># s.social_media_url   = "http://twitter.com/Zhangsaidong"</span><br><br>  <span class="hljs-comment"># ――― Platform Specifics ――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  If this Pod runs only on iOS or OS X, then specify the platform and</span><br>  <span class="hljs-comment">#  the deployment target. You can optionally include the target after the platform.</span><br>  <span class="hljs-comment">#</span><br><br>  <span class="hljs-comment"># s.platform     = :ios</span><br>   s.platform     = <span class="hljs-symbol">:ios</span>, <span class="hljs-string">"8.0"</span><br><br>  <span class="hljs-comment">#  When using multiple platforms</span><br>   s.ios.deployment_target = <span class="hljs-string">"8.0"</span><br>  <span class="hljs-comment"># s.osx.deployment_target = "10.7"</span><br>  <span class="hljs-comment"># s.watchos.deployment_target = "2.0"</span><br>  <span class="hljs-comment"># s.tvos.deployment_target = "9.0"</span><br><br><br>  <span class="hljs-comment"># ――― Source Location ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  Specify the location from where the source should be retrieved.</span><br>  <span class="hljs-comment">#  Supports git, hg, bzr, svn and HTTP.</span><br>  <span class="hljs-comment">#</span><br><br>  s.source       = { <span class="hljs-symbol">:git</span> =&gt; <span class="hljs-string">"https://github.com/adong666666/CommonUse.git"</span>, <span class="hljs-symbol">:tag</span> =&gt; <span class="hljs-string">"<span class="hljs-subst">#{s.version}</span>"</span> }<br><br><br>  <span class="hljs-comment"># ――― Source Code ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  CocoaPods is smart about how it includes source code. For source files</span><br>  <span class="hljs-comment">#  giving a folder will include any swift, h, m, mm, c &amp; cpp files.</span><br>  <span class="hljs-comment">#  For header files it will include any header in the folder.</span><br>  <span class="hljs-comment">#  Not including the public_header_files will make all headers public.</span><br>  <span class="hljs-comment">#</span><br><br>  s.source_files  = <span class="hljs-string">"*.{h,m,swift}"</span><br><br>  <span class="hljs-comment"># s.public_header_files = "Classes/**/*.h"</span><br><br><br>  <span class="hljs-comment"># ――― Resources ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  A list of resources included with the Pod. These are copied into the</span><br>  <span class="hljs-comment">#  target bundle with a build phase script. Anything else will be cleaned.</span><br>  <span class="hljs-comment">#  You can preserve files from being cleaned, please don't preserve</span><br>  <span class="hljs-comment">#  non-essential files like tests, examples and documentation.</span><br>  <span class="hljs-comment">#</span><br><br>  <span class="hljs-comment"># s.resource  = "icon.png"</span><br>  <span class="hljs-comment"># s.resources = "Resources/*.png"</span><br><br>  <span class="hljs-comment"># s.preserve_paths = "FilesToSave", "MoreFilesToSave"</span><br><br><br>  <span class="hljs-comment"># ――― Project Linking ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  Link your library with frameworks, or libraries. Libraries do not include</span><br>  <span class="hljs-comment">#  the lib prefix of their name.</span><br>  <span class="hljs-comment">#</span><br><br>  <span class="hljs-comment"># s.framework  = "SomeFramework"</span><br>  <span class="hljs-comment"># s.frameworks = "SomeFramework", "AnotherFramework"</span><br><br>  <span class="hljs-comment"># s.library   = "iconv"</span><br>  <span class="hljs-comment"># s.libraries = "iconv", "xml2"</span><br><br><br>  <span class="hljs-comment"># ――― Project Settings ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#  If your library depends on compiler flags you can set them in the xcconfig hash</span><br>  <span class="hljs-comment">#  where they will only apply to your library. If you depend on other Podspecs</span><br>  <span class="hljs-comment">#  you can include multiple dependencies to ensure it works.</span><br><br>  <span class="hljs-comment"># s.requires_arc = true</span><br><br>  <span class="hljs-comment"># s.xcconfig = { "HEADER_SEARCH_PATHS" =&gt; "$(SDKROOT)/usr/include/libxml2" }</span><br>  <span class="hljs-comment"># s.dependency "JSONKit", "~&gt; 1.4"</span><br><br>  <span class="hljs-comment"># ――― Swift Version ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span><br>  s.swift_version = <span class="hljs-string">'4.2'</span><br>   <br><span class="hljs-keyword">end</span><br></code></pre></td></tr></tbody></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs ruby">Pod::Spec.new <span class="hljs-keyword">do</span> <span class="hljs-params">|s|</span><br>  s.name             = <span class="hljs-string">"InterfaceKit"</span><br>  s.version          = <span class="hljs-string">"5.4.0"</span><br>  s.summary          = <span class="hljs-string">"InterfaceKit helps you use interface of UIKit, AppKit and WatchKit in SwiftUI interface easily"</span><br>  s.description      = &lt;&lt;-DESC<br>This is supported by [Saidong Zhang](<span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/zsd.name)</span><br><span class="hljs-regexp"></span><br><span class="hljs-regexp">its intention is to help people use interface of UIKit, AppKit and WatchKit in SwiftUI interface easily.</span><br><span class="hljs-regexp">/</span><span class="hljs-regexp">//</span> You create custom views by declaring types that conform to the <span class="hljs-string">``</span>View<span class="hljs-string">``</span><br>/<span class="hljs-regexp">//</span> protocol. Implement the required <span class="hljs-string">``</span>View/body-swift.property<span class="hljs-string">``</span> computed<br>/<span class="hljs-regexp">//</span> property to provide the content <span class="hljs-keyword">for</span> your custom view. Then you can present your UIKit<br>/<span class="hljs-regexp">//</span> ViewController View by using <span class="hljs-string">`InterfaceView(MyView())`</span> , as follows.<br><span class="hljs-string">``</span><span class="hljs-string">`swift</span><br><span class="hljs-string">///</span><br><span class="hljs-string">///     struct MyView: View {</span><br><span class="hljs-string">///         var body: some View {</span><br><span class="hljs-string">///             InterfaceView(MyView())</span><br><span class="hljs-string">///         }</span><br><span class="hljs-string">///     }</span><br><span class="hljs-string">///</span><br><span class="hljs-string">`</span><span class="hljs-string">``</span><br>/<span class="hljs-regexp">//</span> The <span class="hljs-string">``</span>View<span class="hljs-string">``</span> protocol provides a large set of modifiers, <span class="hljs-keyword">defined</span> as protocol<br>/<span class="hljs-regexp">//</span> methods with default implementations, that you use to position <span class="hljs-keyword">and</span> configure<br>/<span class="hljs-regexp">//</span> views <span class="hljs-keyword">in</span> the layout of your app. Modifiers typically work by wrapping the<br>/<span class="hljs-regexp">//</span> view instance on which you call them <span class="hljs-keyword">in</span> another view with the specified<br>/<span class="hljs-regexp">//</span> characteristics. For example, adding the <span class="hljs-string">``</span>View/opacity(<span class="hljs-symbol">_:</span>)<span class="hljs-string">``</span> modifier to a<br>/<span class="hljs-regexp">//</span> interface view returns a new view with some amount of <span class="hljs-symbol">transparency:</span><br><span class="hljs-string">``</span><span class="hljs-string">`swift</span><br><span class="hljs-string">///</span><br><span class="hljs-string">///     InterfaceView(MyView())</span><br><span class="hljs-string">///         .opacity(0.5) // Display partially transparent interface view.</span><br><span class="hljs-string">///</span><br><span class="hljs-string">`</span><span class="hljs-string">``</span><br>/<span class="hljs-regexp">//</span> It is recommended to use <span class="hljs-string">`ZStack`</span> with <span class="hljs-string">`InterfaceView`</span> , as follows.<br><span class="hljs-string">``</span><span class="hljs-string">`swift</span><br><span class="hljs-string">///</span><br><span class="hljs-string">///     ZStack {</span><br><span class="hljs-string">///         InterfaceView(MyView())</span><br><span class="hljs-string">///         MySwiftUIView()</span><br><span class="hljs-string">///     }</span><br><span class="hljs-string">///</span><br><span class="hljs-string">`</span><span class="hljs-string">``</span><br>                        DESC<br>  s.homepage         = <span class="hljs-string">"https://github.com/adong666666/InterfaceKit"</span><br>  s.license          = <span class="hljs-string">'MIT'</span><br>  s.author           = { <span class="hljs-string">"Saidong Zhang"</span> =&gt; <span class="hljs-string">"3440217568@qq.com"</span> }<br>  s.source           = { <span class="hljs-symbol">:git</span> =&gt; <span class="hljs-string">"https://github.com/adong666666/InterfaceKit.git"</span>, <span class="hljs-symbol">:tag</span> =&gt; s.version.to_s }<br><br>  s.requires_arc          = <span class="hljs-literal">true</span><br><br>  s.ios.deployment_target = <span class="hljs-string">'13.0'</span><br>  s.osx.deployment_target = <span class="hljs-string">'10.15'</span><br>  s.watchos.deployment_target = <span class="hljs-string">'6.0'</span><br>  s.tvos.deployment_target = <span class="hljs-string">'13.0'</span><br><br>  s.source_files          = <span class="hljs-string">'Sources/InterfaceKit/*.swift'</span><br>  s.exclude_files         = <span class="hljs-string">''</span><br><br>  s.frameworks = <span class="hljs-string">'SwiftUI'</span><br>  s.swift_version = <span class="hljs-string">'5.4'</span><br>  <span class="hljs-comment"># UIKit</span><br>  s.subspec <span class="hljs-string">'UIKit'</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|sp|</span><br>    sp.source_files  = <span class="hljs-string">'Sources/InterfaceKit/UIInterface.swift'</span><br>  <span class="hljs-keyword">end</span><br>  <span class="hljs-comment"># AppKit</span><br>  s.subspec <span class="hljs-string">'AppKit'</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|sp|</span><br>    sp.source_files  = <span class="hljs-string">'Sources/InterfaceKit/NSInterface.swift'</span><br>  <span class="hljs-keyword">end</span><br>  <span class="hljs-comment"># WatchKit</span><br>  s.subspec <span class="hljs-string">'WatchKit'</span> <span class="hljs-keyword">do</span> <span class="hljs-params">|sp|</span><br>    sp.source_files  = <span class="hljs-string">'Sources/InterfaceKit/WKInterface.swift'</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>cocoapods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Carthage使用工作记录</title>
    <link href="/posts/16458.html"/>
    <url>/posts/16458.html</url>
    
    <content type="html"><![CDATA[<h1 id="Carthage使用工作记录"><a href="#Carthage使用工作记录" class="headerlink" title="Carthage使用工作记录"></a>Carthage使用工作记录</h1><p>========================<br>主要是三点</p><h2 id="1、写Cartfile"><a href="#1、写Cartfile" class="headerlink" title="1、写Cartfile"></a>1、写Cartfile</h2><figure class="highlight erlang"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs erlang">github <span class="hljs-string">"SnapKit/SnapKit"</span>                    ~&gt; <span class="hljs-number">5.0</span><br>...<br></code></pre></td></tr></tbody></table></figure><h2 id="2、工程目录下命令行"><a href="#2、工程目录下命令行" class="headerlink" title="2、工程目录下命令行"></a>2、工程目录下命令行</h2><h3 id="生成framework"><a href="#生成framework" class="headerlink" title="生成framework"></a>生成framework</h3><figure class="highlight pgsql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">carthage <span class="hljs-keyword">update</span> <span class="hljs-comment">--platform iOS</span><br></code></pre></td></tr></tbody></table></figure><h3 id="生成xcframework"><a href="#生成xcframework" class="headerlink" title="生成xcframework"></a>生成xcframework</h3><figure class="highlight brainfuck"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">carthage</span> <span class="hljs-comment">update</span> --<span class="hljs-comment">platform</span> <span class="hljs-comment">iOS</span> --<span class="hljs-comment">use</span><span class="hljs-literal">-</span><span class="hljs-comment">xcframeworks</span><br></code></pre></td></tr></tbody></table></figure><h3 id="多平台"><a href="#多平台" class="headerlink" title="多平台"></a>多平台</h3><figure class="highlight n1ql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">carthage <span class="hljs-keyword">update</span> --<span class="hljs-keyword">use</span>-xcframeworks<br></code></pre></td></tr></tbody></table></figure><h2 id="3、拖入工程"><a href="#3、拖入工程" class="headerlink" title="3、拖入工程"></a>3、拖入工程</h2><p>在工程目录下会生成一个Carthage文件，里面有个Build文件，其中可以找到生成的库</p><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % <span class="hljs-built_in">cd</span> /Users/zhangsaidong/Desktop/<span class="hljs-built_in">test</span><br>zhangsaidong@zhangsaidongs-MacBook-Pro <span class="hljs-built_in">test</span> % $ carthage update --platform iOS<br>zsh: <span class="hljs-built_in">command</span> not found: $<br>zhangsaidong@zhangsaidongs-MacBook-Pro <span class="hljs-built_in">test</span> % carthage update --platform iOS <br>*** Fetching SnapKit<br>*** Checking out SnapKit at <span class="hljs-string">"5.0.1"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.LDPWAL.log<br>*** Building scheme <span class="hljs-string">"SnapKit"</span> <span class="hljs-keyword">in</span> SnapKit.xcworkspace<br>A shell task (/usr/bin/xcrun lipo -create /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Intermediates.noindex/ArchiveIntermediates/SnapKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/SnapKit.framework/SnapKit /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Products/Release-iphonesimulator/SnapKit.framework/SnapKit -output /Users/zhangsaidong/Desktop/<span class="hljs-built_in">test</span>/Carthage/Build/iOS/SnapKit.framework/SnapKit) failed with <span class="hljs-built_in">exit</span> code 1:<br>fatal error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Intermediates.noindex/ArchiveIntermediates/SnapKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/SnapKit.framework/SnapKit and /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Products/Release-iphonesimulator/SnapKit.framework/SnapKit have the same architectures (arm64) and can<span class="hljs-string">'t be in the same fat output file</span><br><span class="hljs-string"></span><br><span class="hljs-string">Building universal frameworks with common architectures is not possible. The device and simulator slices for "SnapKit" both build for: arm64</span><br><span class="hljs-string">Rebuild with --use-xcframeworks to create an xcframework bundle instead.</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro test % carthage update --platform iOS --use-xcframeworks</span><br><span class="hljs-string">*** Fetching SnapKit</span><br><span class="hljs-string">*** Checking out SnapKit at "5.0.1"</span><br><span class="hljs-string">*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.w2ACyI.log</span><br><span class="hljs-string">*** Building scheme "SnapKit" in SnapKit.xcworkspace</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">zhangsaidong@zhangsaidongs-MacBook-Pro <span class="hljs-built_in">test</span> % carthage update --use-xcframeworks<br>*** Cloning RxSwift<br>*** Checking out RxSwift at <span class="hljs-string">"6.1.0"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ZgiMrd.log<br>*** Downloading RxSwift.framework binary at <span class="hljs-string">"Ethan.1"</span><br>*** Building scheme <span class="hljs-string">"RxBlocking"</span> <span class="hljs-keyword">in</span> Rx.xcworkspace<br>*** Building scheme <span class="hljs-string">"RxRelay"</span> <span class="hljs-keyword">in</span> Rx.xcworkspace<br>*** Building scheme <span class="hljs-string">"RxSwift"</span> <span class="hljs-keyword">in</span> Rx.xcworkspace<br>*** Building scheme <span class="hljs-string">"RxCocoa"</span> <span class="hljs-keyword">in</span> Rx.xcworkspace<br>*** Building scheme <span class="hljs-string">"RxTest"</span> <span class="hljs-keyword">in</span> Rx.xcworkspace<br></code></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><code class="hljs bash">Last login: Sat Apr 24 16:54:56 on ttys004<br>c%                                                                              zhangsaidong@zhangsaidongs-MacBook-Pro ~ % <span class="hljs-built_in">cd</span> /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/RunInto<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % <span class="hljs-built_in">cd</span> ..<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod install<br>Analyzing dependencies<br>Downloading dependencies<br>Removing Bagel<br>Removing ResponseDetective<br>Removing Reveal-SDK<br>Generating Pods project<br>Integrating client project<br>Pod installation complete! There are 75 dependencies from the Podfile and 90 total pods installed.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod install<br>Analyzing dependencies<br>Downloading dependencies<br>Generating Pods project<br>Integrating client project<br>Pod installation complete! There are 75 dependencies from the Podfile and 90 total pods installed.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod install<br>Analyzing dependencies<br>Downloading dependencies<br>Generating Pods project<br>Integrating client project<br>Pod installation complete! There are 75 dependencies from the Podfile and 90 total pods installed.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Fetching CocoaDebug<br>A shell task (/usr/bin/env git fetch --prune --quiet https://github.com/CocoaDebug/CocoaDebug.git refs/tags/*:refs/tags/* +refs/heads/*:refs/heads/* (launched <span class="hljs-keyword">in</span> /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/dependencies/CocoaDebug)) failed with <span class="hljs-built_in">exit</span> code 128:<br>error: RPC failed; curl 56 LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54<br>fatal: the remote end hung up unexpectedly<br>fatal: early EOF<br>fatal: index-pack failed<br><br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Cloning CocoaDebug<br>A shell task (/usr/bin/env git <span class="hljs-built_in">clone</span> --bare --quiet https://github.com/CocoaDebug/CocoaDebug.git /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/dependencies/CocoaDebug) failed with <span class="hljs-built_in">exit</span> code 128:<br>error: RPC failed; curl 56 LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54<br>fatal: the remote end hung up unexpectedly<br>fatal: early EOF<br>fatal: index-pack failed<br><br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Cloning TangramKit<br>*** Checking out TangramKit at <span class="hljs-string">"1.4.2"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.p4tLc5.log<br>*** Building scheme <span class="hljs-string">"TangramKit"</span> <span class="hljs-keyword">in</span> TangramKit.xcodeproj<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod install<br>Analyzing dependencies<br>Downloading dependencies<br>Removing TangramKit<br>Generating Pods project<br>Integrating client project<br>Pod installation complete! There are 73 dependencies from the Podfile and 88 total pods installed.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod install<br>Analyzing dependencies<br>Downloading dependencies<br>Generating Pods project<br>Integrating client project<br>Pod installation complete! There are 73 dependencies from the Podfile and 88 total pods installed.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Cloning CocoaDebug<br>^C<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Fetching CocoaDebug<br>^C<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Cloning SQLite.swift<br>*** Checking out SQLite.swift at <span class="hljs-string">"70fb7af324cb3170d921f135f0c84cbdb6487cc2"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.WCcwXI.log<br>*** Building scheme <span class="hljs-string">"SQLite tvOS"</span> <span class="hljs-keyword">in</span> SQLite.xcodeproj<br>*** Building scheme <span class="hljs-string">"SQLite Mac"</span> <span class="hljs-keyword">in</span> SQLite.xcodeproj<br>*** Building scheme <span class="hljs-string">"SQLite watchOS"</span> <span class="hljs-keyword">in</span> SQLite.xcodeproj<br>*** Building scheme <span class="hljs-string">"SQLite iOS"</span> <span class="hljs-keyword">in</span> SQLite.xcodeproj<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Cloning CocoaDebug<br>^C<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Cloning Surge<br>*** Checking out Surge at <span class="hljs-string">"2.3.2"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.0VCdna.log<br>*** Building scheme <span class="hljs-string">"Surge-tvOS"</span> <span class="hljs-keyword">in</span> Surge.xcworkspace<br>*** Building scheme <span class="hljs-string">"Surge-watchOS"</span> <span class="hljs-keyword">in</span> Surge.xcworkspace<br>*** Building scheme <span class="hljs-string">"Surge-iOS"</span> <span class="hljs-keyword">in</span> Surge.xcworkspace<br>*** Building scheme <span class="hljs-string">"Surge-macOS"</span> <span class="hljs-keyword">in</span> Surge.xcworkspace<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Cloning InterfaceKit<br>*** Checking out InterfaceKit at <span class="hljs-string">"6c54d468ae1a5c45fc68d800c86e0edd728f913c"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.FScun9.log<br>*** Building scheme <span class="hljs-string">"InterfaceKit"</span> <span class="hljs-keyword">in</span> InterfaceKit.xcworkspace<br>Build Failed<br>    Task failed with <span class="hljs-built_in">exit</span> code 1:<br>    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYM<br><br>This usually indicates that project itself failed to compile. Please check the xcodebuild <span class="hljs-built_in">log</span> <span class="hljs-keyword">for</span> more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.FScun9.log<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Fetching InterfaceKit<br>*** Checking out InterfaceKit at <span class="hljs-string">"6c54d468ae1a5c45fc68d800c86e0edd728f913c"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.QqfIWe.log<br>*** Building scheme <span class="hljs-string">"InterfaceKit"</span> <span class="hljs-keyword">in</span> InterfaceKit.xcworkspace<br>Build Failed<br>    Task failed with <span class="hljs-built_in">exit</span> code 1:<br>    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYM<br><br>This usually indicates that project itself failed to compile. Please check the xcodebuild <span class="hljs-built_in">log</span> <span class="hljs-keyword">for</span> more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.QqfIWe.log<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % open /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Fetching InterfaceKit<br>*** Checking out InterfaceKit at <span class="hljs-string">"4c1d617d73bd40393e71741b39c9e2ead3c7572d"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.dM9GjZ.log<br>*** Building scheme <span class="hljs-string">"InterfaceKit"</span> <span class="hljs-keyword">in</span> InterfaceKit.xcworkspace<br>Build Failed<br>    Task failed with <span class="hljs-built_in">exit</span> code 1:<br>    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYM<br><br>This usually indicates that project itself failed to compile. Please check the xcodebuild <span class="hljs-built_in">log</span> <span class="hljs-keyword">for</span> more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.dM9GjZ.log<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks<br>*** Fetching InterfaceKit<br>*** Checking out InterfaceKit at <span class="hljs-string">"4c1d617d73bd40393e71741b39c9e2ead3c7572d"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.XFquCD.log<br>*** Building scheme <span class="hljs-string">"InterfaceKit"</span> <span class="hljs-keyword">in</span> InterfaceKit.xcworkspace<br>Build Failed<br>    Task failed with <span class="hljs-built_in">exit</span> code 1:<br>    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYM<br><br>This usually indicates that project itself failed to compile. Please check the xcodebuild <span class="hljs-built_in">log</span> <span class="hljs-keyword">for</span> more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.XFquCD.log<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries<br>*** Fetching InterfaceKit<br>^C<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries<br>*** Fetching InterfaceKit<br>*** Checking out InterfaceKit at <span class="hljs-string">"4c1d617d73bd40393e71741b39c9e2ead3c7572d"</span><br>*** xcodebuild output can be found <span class="hljs-keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.KPX9mF.log<br>*** Building scheme <span class="hljs-string">"InterfaceKit"</span> <span class="hljs-keyword">in</span> InterfaceKit.xcworkspace<br>A shell task (/usr/bin/xcrun lipo -create /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/InterfaceKit.framework/InterfaceKit /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Products/Release-iphonesimulator/InterfaceKit.framework/InterfaceKit -output /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/Carthage/Build/iOS/InterfaceKit.framework/InterfaceKit) failed with <span class="hljs-built_in">exit</span> code 1:<br>fatal error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/InterfaceKit.framework/InterfaceKit and /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Products/Release-iphonesimulator/InterfaceKit.framework/InterfaceKit have the same architectures (arm64) and can<span class="hljs-string">'t be in the same fat output file</span><br><span class="hljs-string"></span><br><span class="hljs-string">Building universal frameworks with common architectures is not possible. The device and simulator slices for "InterfaceKit" both build for: arm64</span><br><span class="hljs-string">Rebuild with --use-xcframeworks to create an xcframework bundle instead.</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries --use-xcframeworks</span><br><span class="hljs-string">*** Fetching InterfaceKit</span><br><span class="hljs-string">*** Checking out InterfaceKit at "4c1d617d73bd40393e71741b39c9e2ead3c7572d"</span><br><span class="hljs-string">*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.SrsXrV.log</span><br><span class="hljs-string">*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspace</span><br><span class="hljs-string">Build Failed</span><br><span class="hljs-string">    Task failed with exit code 1:</span><br><span class="hljs-string">    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYM</span><br><span class="hljs-string"></span><br><span class="hljs-string">This usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.SrsXrV.log</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries --use-xcframeworks</span><br><span class="hljs-string">*** Fetching InterfaceKit</span><br><span class="hljs-string">*** Checking out InterfaceKit at "6fbe972cef5ec57adf09e90fb18abf178279f05d"</span><br><span class="hljs-string">*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ztpFGs.log</span><br><span class="hljs-string">*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspace</span><br><span class="hljs-string">Build Failed</span><br><span class="hljs-string">    Task failed with exit code 1:</span><br><span class="hljs-string">    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6fbe972cef5ec57adf09e90fb18abf178279f05d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6fbe972cef5ec57adf09e90fb18abf178279f05d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYM</span><br><span class="hljs-string"></span><br><span class="hljs-string">This usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ztpFGs.log</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks                  </span><br><span class="hljs-string">*** Fetching InterfaceKit</span><br><span class="hljs-string">*** Checking out InterfaceKit at "55b358119d90ce36475caaefb052d0a83dc7e404"</span><br><span class="hljs-string">*** xcodebuild output can be found in /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.5gb46Q.log</span><br><span class="hljs-string">*** Building scheme "InterfaceKit" in InterfaceKit.xcworkspace</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cd ..</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % git add .</span><br><span class="hljs-string">g%                                                                                                                                            zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % git commit -m "fix"</span><br><span class="hljs-string">[master 64157fda] fix</span><br><span class="hljs-string"> 9 files changed, 430 insertions(+), 419 deletions(-)</span><br><span class="hljs-string"> rewrite RunInto/RunInto/SwiftUI/Home/child/Setting/interface/InterfaceView.swift (98%)</span><br><span class="hljs-string"> rewrite RunInto/RunInto/SwiftUI/Home/child/Setting/interface/WCInterfaceView.swift (98%)</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % git push</span><br><span class="hljs-string">Enumerating objects: 53, done.</span><br><span class="hljs-string">Counting objects: 100% (53/53), done.</span><br><span class="hljs-string">Delta compression using up to 16 threads</span><br><span class="hljs-string">Compressing objects: 100% (27/27), done.</span><br><span class="hljs-string">Writing objects: 100% (28/28), 364.31 KiB | 3.72 MiB/s, done.</span><br><span class="hljs-string">Total 28 (delta 17), reused 0 (delta 0)</span><br><span class="hljs-string">remote: Resolving deltas: 100% (17/17), completed with 16 local objects.</span><br><span class="hljs-string">To https://github.com/adong666666/RunInto-Apple.git</span><br><span class="hljs-string">   5dc30f04..64157fda  master -&gt; master</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % </span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>carthage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Carthage使用摘录</title>
    <link href="/posts/8147.html"/>
    <url>/posts/8147.html</url>
    
    <content type="html"><![CDATA[<h1 id="Carthage使用摘录"><a href="#Carthage使用摘录" class="headerlink" title="Carthage使用摘录"></a>Carthage使用摘录</h1><p>========================<br>通常来说，carthage库编译快（因为不用再编译源码），但是编译后的App通常更占内存，Swift Package Manager也是，它们夹带一些其他文件，所以建议发布前，尽量用Pod，也就是开发用Carthage、Swift Package Manager,发布能用cocoapods就用cocoapods。<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E4%BD%BF%E7%94%A8%E6%91%98%E5%BD%95/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>carthage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Carthage库制作摘录</title>
    <link href="/posts/59855.html"/>
    <url>/posts/59855.html</url>
    
    <content type="html"><![CDATA[<h1 id="Carthage库制作摘录"><a href="#Carthage库制作摘录" class="headerlink" title="Carthage库制作摘录"></a>Carthage库制作摘录</h1><p>========================<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E5%BA%93%E5%88%B6%E4%BD%9C%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E5%BA%93%E5%88%B6%E4%BD%9C%E6%91%98%E5%BD%95/2.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>carthage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>制作多平台的framework</title>
    <link href="/posts/65269.html"/>
    <url>/posts/65269.html</url>
    
    <content type="html"><![CDATA[<h1 id="制作多平台的framework"><a href="#制作多平台的framework" class="headerlink" title="制作多平台的framework"></a>制作多平台的framework</h1><p>========================<br>看图秒懂系列，Base SDK务必要设置成No SDK,选择other选项，然后什么都不填。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/4.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/5.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>去除 GLKit API 弃用警告</title>
    <link href="/posts/14629.html"/>
    <url>/posts/14629.html</url>
    
    <content type="html"><![CDATA[<h1 id="去除-GLKit-API-弃用警告"><a href="#去除-GLKit-API-弃用警告" class="headerlink" title="去除 GLKit API 弃用警告"></a>去除 GLKit API 弃用警告</h1><p>========================</p><figure class="highlight delphi"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs delphi"><span class="hljs-string">'GLKViewController'</span> was <span class="hljs-keyword">deprecated</span> <span class="hljs-keyword">in</span> iOS <span class="hljs-number">12.0</span>: OpenGLES API <span class="hljs-keyword">deprecated</span>. (Define GLES_SILENCE_DEPRECATION <span class="hljs-keyword">to</span> silence these warnings)<br></code></pre></td></tr></tbody></table></figure><p><code>GLKit </code>相关的 API 从 iOS12 之后就已经标记为<code>弃用</code>了。<br>为了避免 Xcode 满屏的黄色警告⚠️，我们在 <code>Project--Build Settings</code> 里找到 <code>Preprocessor Macros</code> ，然后配置<code>GLES_SILENCE_DEPRECATION=1</code>即可把 OpenGLES 相关的弃用 API 警告去掉。这样 Xcode 的编辑界面就清爽很多了。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%8E%BB%E9%99%A4GLKit_API%E5%BC%83%E7%94%A8%E8%AD%A6%E5%91%8A/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用R.swift检查各种string文件的问题</title>
    <link href="/posts/39320.html"/>
    <url>/posts/39320.html</url>
    
    <content type="html"><![CDATA[<h1 id="使用R-swift检查各种string文件的问题"><a href="#使用R-swift检查各种string文件的问题" class="headerlink" title="使用R.swift检查各种string文件的问题"></a>使用R.swift检查各种string文件的问题</h1><p>========================<br> [R.swift] Skipping 2 strings in ‘Localizable’ (en) because symbol ‘bottle’ would be generated for all of these keys: bottle, bottle<br>这个错误主要是因为你在.strings文件中有两个相同的键值对，或者两个相同的键。</p><figure class="highlight ini"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">"bottle "</span> = <span class="hljs-string">"Langyao Straight-mouth Bottle"</span><span class="hljs-comment">;</span><br><span class="hljs-attr">"bottle "</span> = <span class="hljs-string">"Langyao Straight-mouth Bottle"</span><span class="hljs-comment">;</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight ini"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">"bottle "</span> = <span class="hljs-string">"Bottle"</span><span class="hljs-comment">;</span><br><span class="hljs-attr">"bottle "</span> = <span class="hljs-string">"Langyao Straight-mouth Bottle"</span><span class="hljs-comment">;</span><br></code></pre></td></tr></tbody></table></figure><p> 这么说起来，可以用R.swift检查各种string文件的问题，缺失，重复等问题它都会报警告。</p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iOS日志框架CocoaLumberjack</title>
    <link href="/posts/9465.html"/>
    <url>/posts/9465.html</url>
    
    <content type="html"><![CDATA[<h1 id="iOS日志框架CocoaLumberjack"><a href="#iOS日志框架CocoaLumberjack" class="headerlink" title="iOS日志框架CocoaLumberjack"></a>iOS日志框架CocoaLumberjack</h1><p>========================<br>我使用了如下代码进行配置，只需在AppDelegate或SceneDelegate调用configDDLog即可（在其他某些文件配置也是可以的）</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  configDDLog.swift</span><br><span class="hljs-comment">//  RunInto</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东（手机：15674119605） on 2021/4/10.</span><br><span class="hljs-comment">//  Copyright © 2021 adong666666. All rights reserved.</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-keyword">import</span> Foundation<br><span class="hljs-keyword">import</span> CocoaLumberjack<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 配置DDLog相关参数</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">configDDLog</span>()</span> {<br><span class="hljs-comment">//    //让日志只在debug时输出</span><br><span class="hljs-comment">//    #if DEBUG</span><br><span class="hljs-comment">//        defaultDebugLevel = .Verbose</span><br><span class="hljs-comment">//    #else</span><br><span class="hljs-comment">//    dynamicLogLevel = .off</span><br><span class="hljs-comment">//    #endif</span><br>    <span class="hljs-comment">//添加发送日志语句到苹果的日志系统</span><br>    <span class="hljs-type">DDLog</span>.add(<span class="hljs-type">DDOSLogger</span>.sharedInstance)<br>    <span class="hljs-comment">//添加发送日志语句到Xcode控制台</span><br>    <span class="hljs-comment">//DDLog.add(DDTTYLogger.sharedInstance!)</span><br>    <br>    <span class="hljs-comment">//MARK: - 日志将会被保存到沙盒/Library/Caches/Logs，这意味着可以上传至服务器</span><br>    <span class="hljs-keyword">let</span> fileLogger: <span class="hljs-type">DDFileLogger</span> <span class="hljs-operator">=</span> <span class="hljs-type">DDFileLogger</span>() <span class="hljs-comment">// File Logger</span><br>    fileLogger.rollingFrequency <span class="hljs-operator">=</span> <span class="hljs-number">60</span> <span class="hljs-operator">*</span> <span class="hljs-number">60</span> <span class="hljs-operator">*</span> <span class="hljs-number">24</span> <span class="hljs-comment">// 24 hours</span><br>    fileLogger.logFileManager.maximumNumberOfLogFiles <span class="hljs-operator">=</span> <span class="hljs-number">7</span><br>    <span class="hljs-type">DDLog</span>.add(fileLogger)<br>    log(fileLogger.currentLogFileInfo<span class="hljs-operator">?</span>.filePath)<br>    <br><span class="hljs-comment">//    //允许控制台带颜色</span><br><span class="hljs-comment">//    DDTTYLogger.sharedInstance?.colorsEnabled = true</span><br><span class="hljs-comment">//    //设置Info下为蓝色</span><br><span class="hljs-comment">//    DDTTYLogger.sharedInstance?.setForegroundColor(UIColor.blue, backgroundColor: UIColor.white, for: .info)</span><br>}<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 得到输出的字符串的格式</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"> - parameter message:  日志消息的主题</span><br><span class="hljs-comment"> - parameter file:     日志消息所在的文件，方便调试定位用</span><br><span class="hljs-comment"> - parameter function: 日志消息所在的方法，方便调试定位用</span><br><span class="hljs-comment"> - parameter line:     日志消息所在的方法中的行数，方便调试定位用</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"> - returns: 返回输出的日志字符串</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">getMessage</span>(<span class="hljs-params">message</span>: <span class="hljs-type">String</span>, <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span>, <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span>, <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> )</span> -&gt; <span class="hljs-type">String</span> {<br>    <span class="hljs-comment">//初始化需要返回的字符串</span><br>    <span class="hljs-keyword">var</span> returnMessage: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-string">""</span><br>    <span class="hljs-comment">//通过file获取文件的名称</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> className <span class="hljs-operator">=</span> file.description.components(separatedBy: <span class="hljs-type">CharacterSet</span>.<span class="hljs-keyword">init</span>(charactersIn: <span class="hljs-string">"/"</span>)).last {<br>        <span class="hljs-comment">//拼接字符串</span><br>        returnMessage <span class="hljs-operator">=</span> <span class="hljs-string">"<span class="hljs-subst">\n</span>"</span> <span class="hljs-operator">+</span><br>                  <span class="hljs-string">"className:<span class="hljs-subst">\(className)</span><span class="hljs-subst">\n</span>"</span> <span class="hljs-operator">+</span><br>                  <span class="hljs-string">" function:<span class="hljs-subst">\(function)</span><span class="hljs-subst">\n</span>"</span> <span class="hljs-operator">+</span><br>                  <span class="hljs-string">"      ine:<span class="hljs-subst">\(line)</span><span class="hljs-subst">\n</span>"</span> <span class="hljs-operator">+</span><br>                  <span class="hljs-string">"  message:<span class="hljs-subst">\(message)</span>"</span><br>    } <span class="hljs-keyword">else</span> {<br>        <span class="hljs-comment">//拼接字符串</span><br>        returnMessage <span class="hljs-operator">=</span> <span class="hljs-string">"<span class="hljs-subst">\n</span>"</span> <span class="hljs-operator">+</span><br>            <span class="hljs-string">" function:<span class="hljs-subst">\(function)</span><span class="hljs-subst">\n</span>"</span> <span class="hljs-operator">+</span><br>            <span class="hljs-string">"      ine:<span class="hljs-subst">\(line)</span><span class="hljs-subst">\n</span>"</span> <span class="hljs-operator">+</span><br>            <span class="hljs-string">"  message:<span class="hljs-subst">\(message)</span>"</span><br>    }<br>    <span class="hljs-keyword">return</span> returnMessage<br>}<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">   输出Info等级的日志消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">logInfo</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-type">String</span>, <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file, <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function, <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line)</span> {<br>    <span class="hljs-type">DDLogInfo</span>(getMessage(message: message, file: file, function: function, line: line))<br>}<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 输出Error等级的日志消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">logError</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-type">String</span>, <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file, <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function, <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line)</span> {<br>    <span class="hljs-type">DDLogError</span>(getMessage(message: message, file: file, function: function, line: line))<br>}<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 输出Debug等级的日志消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">logDebug</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-type">String</span>, <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file, <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function, <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line)</span> {<br>    <span class="hljs-type">DDLogDebug</span>(getMessage(message: message, file: file, function: function, line: line))<br>}<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> 输出Warn等级的日志消息</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">logWarn</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-type">String</span>, <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file, <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function, <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line)</span> {<br>    <span class="hljs-type">DDLogWarn</span>(getMessage(message: message, file: file, function: function, line: line))<br>}<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">logVerbose</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-type">String</span>, <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file, <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function, <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line)</span> {<br>    <span class="hljs-type">DDLogVerbose</span>(getMessage(message: message, file: file, function: function, line: line))<br>}<br><br></code></pre></td></tr></tbody></table></figure><p>此外，我还引用了官方demo的一些代码</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">// Software License Agreement (BSD License)</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// Copyright (c) 2010-2021, Deusty, LLC</span><br><span class="hljs-comment">// All rights reserved.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// Redistribution and use of this software in source and binary forms,</span><br><span class="hljs-comment">// with or without modification, are permitted provided that the following conditions are met:</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// * Redistributions of source code must retain the above copyright notice,</span><br><span class="hljs-comment">//   this list of conditions and the following disclaimer.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// * Neither the name of Deusty nor the names of its contributors may be used</span><br><span class="hljs-comment">//   to endorse or promote products derived from this software without specific</span><br><span class="hljs-comment">//   prior written permission of Deusty, LLC.</span><br><br><span class="hljs-keyword">#if</span> <span class="hljs-type">SWIFT_PACKAGE</span><br><span class="hljs-keyword">import</span> CocoaLumberjack<br><span class="hljs-keyword">import</span> CocoaLumberjackSwiftSupport<br><span class="hljs-keyword">#endif</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Replacement for Swift's `assert` function that will output a log message even when assertions</span><br><span class="hljs-comment"> * are disabled.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * - Parameters:</span><br><span class="hljs-comment"> *   - condition: The condition to test. Unlike `Swift.assert`, `condition` is always evaluated,</span><br><span class="hljs-comment"> *     even when assertions are disabled.</span><br><span class="hljs-comment"> *   - message: A string to log (using `DDLogError`) if `condition` evaluates to `false`.</span><br><span class="hljs-comment"> *     The default is an empty string.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">DDAssert</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">condition</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-type">Bool</span>, <span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-string">""</span>, <span class="hljs-params">level</span>: <span class="hljs-type">DDLogLevel</span> <span class="hljs-operator">=</span> .all, <span class="hljs-params">context</span>: <span class="hljs-type">Int</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file, <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function, <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line, <span class="hljs-params">tag</span>: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span> <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>, <span class="hljs-params">asynchronous</span> <span class="hljs-params">async</span>: <span class="hljs-type">Bool</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>, <span class="hljs-params">ddlog</span>: <span class="hljs-type">DDLog</span> <span class="hljs-operator">=</span> <span class="hljs-type">DDLog</span>.sharedInstance)</span> {<br>    <span class="hljs-keyword">if</span> <span class="hljs-operator">!</span>condition() {<br>        <span class="hljs-type">DDLogError</span>(message(), level: level, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)<br>        <span class="hljs-type">Swift</span>.assertionFailure(message(), file: file, line: line)<br>    }<br>}<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Replacement for Swift's `assertionFailure` function that will output a log message even</span><br><span class="hljs-comment"> * when assertions are disabled.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * - Parameters:</span><br><span class="hljs-comment"> *   - message: A string to log (using `DDLogError`). The default is an empty string.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">DDAssertionFailure</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-string">""</span>, <span class="hljs-params">level</span>: <span class="hljs-type">DDLogLevel</span> <span class="hljs-operator">=</span> .all, <span class="hljs-params">context</span>: <span class="hljs-type">Int</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file, <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function, <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line, <span class="hljs-params">tag</span>: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span> <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>, <span class="hljs-params">asynchronous</span> <span class="hljs-params">async</span>: <span class="hljs-type">Bool</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>, <span class="hljs-params">ddlog</span>: <span class="hljs-type">DDLog</span> <span class="hljs-operator">=</span> <span class="hljs-type">DDLog</span>.sharedInstance)</span> {<br>    <span class="hljs-type">DDLogError</span>(message(), level: level, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)<br>    <span class="hljs-type">Swift</span>.assertionFailure(message(), file: file, line: line)<br>}<br></code></pre></td></tr></tbody></table></figure><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">// Software License Agreement (BSD License)</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// Copyright (c) 2010-2021, Deusty, LLC</span><br><span class="hljs-comment">// All rights reserved.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// Redistribution and use of this software in source and binary forms,</span><br><span class="hljs-comment">// with or without modification, are permitted provided that the following conditions are met:</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// * Redistributions of source code must retain the above copyright notice,</span><br><span class="hljs-comment">//   this list of conditions and the following disclaimer.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// * Neither the name of Deusty nor the names of its contributors may be used</span><br><span class="hljs-comment">//   to endorse or promote products derived from this software without specific</span><br><span class="hljs-comment">//   prior written permission of Deusty, LLC.</span><br><br><span class="hljs-meta">@_exported</span> <span class="hljs-keyword">import</span> CocoaLumberjack<br><span class="hljs-keyword">#if</span> <span class="hljs-type">SWIFT_PACKAGE</span><br><span class="hljs-keyword">import</span> CocoaLumberjackSwiftSupport<br><span class="hljs-keyword">#endif</span><br><br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">DDLogFlag</span> </span>{<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">from</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">logLevel</span>: <span class="hljs-type">DDLogLevel</span>)</span> -&gt; <span class="hljs-type">DDLogFlag</span> {<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DDLogFlag</span>(rawValue: logLevel.rawValue)<br>    }<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">init</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">logLevel</span>: <span class="hljs-type">DDLogLevel</span>)</span> {<br>        <span class="hljs-keyword">self</span> <span class="hljs-operator">=</span> <span class="hljs-type">DDLogFlag</span>(rawValue: logLevel.rawValue)<br>    }<br><br>    <span class="hljs-comment">/// Returns the log level, or the lowest equivalent.</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">toLogLevel</span>()</span> -&gt; <span class="hljs-type">DDLogLevel</span> {<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> ourValid <span class="hljs-operator">=</span> <span class="hljs-type">DDLogLevel</span>(rawValue: rawValue) {<br>            <span class="hljs-keyword">return</span> ourValid<br>        } <span class="hljs-keyword">else</span> {<br>            <span class="hljs-keyword">if</span> contains(.verbose) {<br>                <span class="hljs-keyword">return</span> .verbose<br>            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> contains(.debug) {<br>                <span class="hljs-keyword">return</span> .debug<br>            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> contains(.info) {<br>                <span class="hljs-keyword">return</span> .info<br>            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> contains(.warning) {<br>                <span class="hljs-keyword">return</span> .warning<br>            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> contains(.error) {<br>                <span class="hljs-keyword">return</span> .error<br>            } <span class="hljs-keyword">else</span> {<br>                <span class="hljs-keyword">return</span> .off<br>            }<br>        }<br>    }<br>}<br><br><span class="hljs-comment">/// The log level that can dynamically limit log messages (vs. the static DDDefaultLogLevel). This log level will only be checked, if the message passes the `DDDefaultLogLevel`.</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">var</span> dynamicLogLevel <span class="hljs-operator">=</span> <span class="hljs-type">DDLogLevel</span>.all<br><br><span class="hljs-comment">/// Resets the `dynamicLogLevel` to `.all`.</span><br><span class="hljs-comment">/// - SeeAlso: `dynamicLogLevel`</span><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">resetDynamicLogLevel</span>()</span> {<br>    dynamicLogLevel <span class="hljs-operator">=</span> .all<br>}<br><br><span class="hljs-keyword">@available</span>(<span class="hljs-operator">*</span>, deprecated, message: <span class="hljs-string">"Please use dynamicLogLevel"</span>, renamed: <span class="hljs-string">"dynamicLogLevel"</span>)<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">var</span> defaultDebugLevel: <span class="hljs-type">DDLogLevel</span> {<br>    <span class="hljs-keyword">get</span> {<br>        <span class="hljs-keyword">return</span> dynamicLogLevel<br>    }<br>    <span class="hljs-keyword">set</span> {<br>        dynamicLogLevel <span class="hljs-operator">=</span> newValue<br>    }<br>}<br><br><span class="hljs-keyword">@available</span>(<span class="hljs-operator">*</span>, deprecated, message: <span class="hljs-string">"Please use resetDynamicLogLevel"</span>, renamed: <span class="hljs-string">"resetDynamicLogLevel"</span>)<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">resetDefaultDebugLevel</span>()</span> {<br>    resetDynamicLogLevel()<br>}<br><br><span class="hljs-comment">/// If `true`, all logs (except errors) are logged asynchronously by default.</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">var</span> asyncLoggingEnabled <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">_DDLogMessage</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-keyword">Any</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">level</span>: <span class="hljs-type">DDLogLevel</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">flag</span>: <span class="hljs-type">DDLogFlag</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">context</span>: <span class="hljs-type">Int</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">tag</span>: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">asynchronous</span>: <span class="hljs-type">Bool</span>,</span><br><span class="hljs-function">                          <span class="hljs-params">ddlog</span>: <span class="hljs-type">DDLog</span>)</span> {<br>    <span class="hljs-comment">// The `dynamicLogLevel` will always be checked here (instead of being passed in).</span><br>    <span class="hljs-comment">// We cannot "mix" it with the `DDDefaultLogLevel`, because otherwise the compiler won't strip strings that are not logged.</span><br>    <span class="hljs-keyword">if</span> level.rawValue <span class="hljs-operator">&amp;</span> flag.rawValue <span class="hljs-operator">!=</span> <span class="hljs-number">0</span> <span class="hljs-operator">&amp;&amp;</span> dynamicLogLevel.rawValue <span class="hljs-operator">&amp;</span> flag.rawValue <span class="hljs-operator">!=</span> <span class="hljs-number">0</span> {<br>        <span class="hljs-comment">// Tell the DDLogMessage constructor to copy the C strings that get passed to it.</span><br>        <span class="hljs-keyword">let</span> logMessage <span class="hljs-operator">=</span> <span class="hljs-type">DDLogMessage</span>(message: <span class="hljs-type">String</span>(describing: message()),<br>                                      level: level,<br>                                      flag: flag,<br>                                      context: context,<br>                                      file: <span class="hljs-type">String</span>(describing: file),<br>                                      function: <span class="hljs-type">String</span>(describing: function),<br>                                      line: line,<br>                                      tag: tag,<br>                                      options: [.copyFile, .copyFunction],<br>                                      timestamp: <span class="hljs-literal">nil</span>)<br>        ddlog.log(asynchronous: asynchronous, message: logMessage)<br>    }<br>}<br><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">DDLogDebug</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-keyword">Any</span>,</span><br><span class="hljs-function">                       <span class="hljs-params">level</span>: <span class="hljs-type">DDLogLevel</span> <span class="hljs-operator">=</span> .debug,</span><br><span class="hljs-function">                       <span class="hljs-params">context</span>: <span class="hljs-type">Int</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>,</span><br><span class="hljs-function">                       <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file,</span><br><span class="hljs-function">                       <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function,</span><br><span class="hljs-function">                       <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line,</span><br><span class="hljs-function">                       <span class="hljs-params">tag</span>: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span> <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>,</span><br><span class="hljs-function">                       <span class="hljs-params">asynchronous</span> <span class="hljs-params">async</span>: <span class="hljs-type">Bool</span> <span class="hljs-operator">=</span> asyncLoggingEnabled,</span><br><span class="hljs-function">                       <span class="hljs-params">ddlog</span>: <span class="hljs-type">DDLog</span> <span class="hljs-operator">=</span> .sharedInstance)</span> {<br>    _DDLogMessage(message(), level: level, flag: .debug, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)<br>}<br><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">DDLogInfo</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-keyword">Any</span>,</span><br><span class="hljs-function">                      <span class="hljs-params">level</span>: <span class="hljs-type">DDLogLevel</span> <span class="hljs-operator">=</span> .info,</span><br><span class="hljs-function">                      <span class="hljs-params">context</span>: <span class="hljs-type">Int</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>,</span><br><span class="hljs-function">                      <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file,</span><br><span class="hljs-function">                      <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function,</span><br><span class="hljs-function">                      <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line,</span><br><span class="hljs-function">                      <span class="hljs-params">tag</span>: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span> <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>,</span><br><span class="hljs-function">                      <span class="hljs-params">asynchronous</span> <span class="hljs-params">async</span>: <span class="hljs-type">Bool</span> <span class="hljs-operator">=</span> asyncLoggingEnabled,</span><br><span class="hljs-function">                      <span class="hljs-params">ddlog</span>: <span class="hljs-type">DDLog</span> <span class="hljs-operator">=</span> .sharedInstance)</span> {<br>    _DDLogMessage(message(), level: level, flag: .info, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)<br>}<br><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">DDLogWarn</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-keyword">Any</span>,</span><br><span class="hljs-function">                      <span class="hljs-params">level</span>: <span class="hljs-type">DDLogLevel</span> <span class="hljs-operator">=</span> <span class="hljs-type">DDLogLevel</span>.warning,</span><br><span class="hljs-function">                      <span class="hljs-params">context</span>: <span class="hljs-type">Int</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>,</span><br><span class="hljs-function">                      <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file,</span><br><span class="hljs-function">                      <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function,</span><br><span class="hljs-function">                      <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line,</span><br><span class="hljs-function">                      <span class="hljs-params">tag</span>: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span> <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>,</span><br><span class="hljs-function">                      <span class="hljs-params">asynchronous</span> <span class="hljs-params">async</span>: <span class="hljs-type">Bool</span> <span class="hljs-operator">=</span> asyncLoggingEnabled,</span><br><span class="hljs-function">                      <span class="hljs-params">ddlog</span>: <span class="hljs-type">DDLog</span> <span class="hljs-operator">=</span> .sharedInstance)</span> {<br>    _DDLogMessage(message(), level: level, flag: .warning, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)<br>}<br><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">DDLogVerbose</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-keyword">Any</span>,</span><br><span class="hljs-function">                         <span class="hljs-params">level</span>: <span class="hljs-type">DDLogLevel</span> <span class="hljs-operator">=</span> .verbose,</span><br><span class="hljs-function">                         <span class="hljs-params">context</span>: <span class="hljs-type">Int</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>,</span><br><span class="hljs-function">                         <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file,</span><br><span class="hljs-function">                         <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function,</span><br><span class="hljs-function">                         <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line,</span><br><span class="hljs-function">                         <span class="hljs-params">tag</span>: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span> <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>,</span><br><span class="hljs-function">                         <span class="hljs-params">asynchronous</span> <span class="hljs-params">async</span>: <span class="hljs-type">Bool</span> <span class="hljs-operator">=</span> asyncLoggingEnabled,</span><br><span class="hljs-function">                         <span class="hljs-params">ddlog</span>: <span class="hljs-type">DDLog</span> <span class="hljs-operator">=</span> .sharedInstance)</span> {<br>    _DDLogMessage(message(), level: level, flag: .verbose, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)<br>}<br><br><span class="hljs-keyword">@inlinable</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">DDLogError</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">message</span>: <span class="hljs-keyword">@autoclosure</span> () -&gt; <span class="hljs-keyword">Any</span>,</span><br><span class="hljs-function">                       <span class="hljs-params">level</span>: <span class="hljs-type">DDLogLevel</span> <span class="hljs-operator">=</span> .error,</span><br><span class="hljs-function">                       <span class="hljs-params">context</span>: <span class="hljs-type">Int</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>,</span><br><span class="hljs-function">                       <span class="hljs-params">file</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file,</span><br><span class="hljs-function">                       <span class="hljs-params">function</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #function,</span><br><span class="hljs-function">                       <span class="hljs-params">line</span>: <span class="hljs-type">UInt</span> <span class="hljs-operator">=</span> #line,</span><br><span class="hljs-function">                       <span class="hljs-params">tag</span>: <span class="hljs-keyword">Any</span><span class="hljs-operator">?</span> <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>,</span><br><span class="hljs-function">                       <span class="hljs-params">asynchronous</span> <span class="hljs-params">async</span>: <span class="hljs-type">Bool</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>,</span><br><span class="hljs-function">                       <span class="hljs-params">ddlog</span>: <span class="hljs-type">DDLog</span> <span class="hljs-operator">=</span> .sharedInstance)</span> {<br>    _DDLogMessage(message(), level: level, flag: .error, context: context, file: file, function: function, line: line, tag: tag, asynchronous: async, ddlog: ddlog)<br>}<br><br><span class="hljs-comment">/// Returns a String of the current filename, without full path or extension.</span><br><span class="hljs-comment">///</span><br><span class="hljs-comment">/// Analogous to the C preprocessor macro `THIS_FILE`.</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">currentFileName</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">fileName</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file)</span> -&gt; <span class="hljs-type">String</span> {<br>    <span class="hljs-keyword">var</span> str <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(describing: fileName)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> idx <span class="hljs-operator">=</span> str.range(of: <span class="hljs-string">"/"</span>, options: .backwards)<span class="hljs-operator">?</span>.upperBound {<br>        str <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(str[idx<span class="hljs-operator">...</span>])<br>    }<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> idx <span class="hljs-operator">=</span> str.range(of: <span class="hljs-string">"."</span>, options: .backwards)<span class="hljs-operator">?</span>.lowerBound {<br>        str <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(str[<span class="hljs-operator">..&lt;</span>idx])<br>    }<br>    <span class="hljs-keyword">return</span> str<br>}<br><br><span class="hljs-comment">// swiftlint:disable identifier_name</span><br><span class="hljs-comment">// swiftlint doesn't like func names that begin with a capital letter - deprecated</span><br><span class="hljs-keyword">@available</span>(<span class="hljs-operator">*</span>, deprecated, message: <span class="hljs-string">"Please use currentFileName"</span>, renamed: <span class="hljs-string">"currentFileName"</span>)<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">CurrentFileName</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">fileName</span>: <span class="hljs-type">StaticString</span> <span class="hljs-operator">=</span> #file)</span> -&gt; <span class="hljs-type">String</span> {<br>    <span class="hljs-keyword">return</span> currentFileName(fileName)<br>}<br><br></code></pre></td></tr></tbody></table></figure><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">// Software License Agreement (BSD License)</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// Copyright (c) 2010-2021, Deusty, LLC</span><br><span class="hljs-comment">// All rights reserved.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// Redistribution and use of this software in source and binary forms,</span><br><span class="hljs-comment">// with or without modification, are permitted provided that the following conditions are met:</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// * Redistributions of source code must retain the above copyright notice,</span><br><span class="hljs-comment">//   this list of conditions and the following disclaimer.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// * Neither the name of Deusty nor the names of its contributors may be used</span><br><span class="hljs-comment">//   to endorse or promote products derived from this software without specific</span><br><span class="hljs-comment">//   prior written permission of Deusty, LLC.</span><br><br><span class="hljs-keyword">#if</span> canImport(<span class="hljs-type">Combine</span>)<br><br><span class="hljs-keyword">import</span> Combine<br><br><span class="hljs-keyword">#if</span> <span class="hljs-type">SWIFT_PACKAGE</span><br><span class="hljs-keyword">import</span> CocoaLumberjack<br><span class="hljs-keyword">import</span> CocoaLumberjackSwiftSupport<br><span class="hljs-keyword">#endif</span><br><br><span class="hljs-keyword">@available</span>(OSX <span class="hljs-number">10.15</span>, <span class="hljs-keyword">iOS</span> <span class="hljs-number">13.0</span>, <span class="hljs-keyword">tvOS</span> <span class="hljs-number">13.0</span>, <span class="hljs-keyword">watchOS</span> <span class="hljs-number">6.0</span>, <span class="hljs-operator">*</span>)<br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">DDLog</span> </span>{<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * Creates a message publisher.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * The publisher will add and remove loggers as subscriptions are added and removed.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * The level that you provide here is a preemptive filter (for performance).</span><br><span class="hljs-comment">     * That is, the level specified here will be used to filter out logMessages so that</span><br><span class="hljs-comment">     * the logger is never even invoked for the messages.</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * More information:</span><br><span class="hljs-comment">     *    See -[DDLog addLogger:with:]</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * - Parameter logLevel: preemptive filter of the message returned by the publisher. All levels are sent by default</span><br><span class="hljs-comment">     * - Returns: A MessagePublisher that emits LogMessages filtered by the specified logLevel</span><br><span class="hljs-comment">     **/</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">messagePublisher</span>(<span class="hljs-params">with</span> <span class="hljs-params">logLevel</span>: <span class="hljs-type">DDLogLevel</span> <span class="hljs-operator">=</span> .all)</span> -&gt; <span class="hljs-type">MessagePublisher</span> {<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">MessagePublisher</span>(log: <span class="hljs-keyword">self</span>, with: logLevel)<br>    }<br><br>    <span class="hljs-comment">// MARK: - MessagePublisher</span><br>    <br>    <span class="hljs-keyword">@available</span>(OSX <span class="hljs-number">10.15</span>, <span class="hljs-keyword">iOS</span> <span class="hljs-number">13.0</span>, <span class="hljs-keyword">tvOS</span> <span class="hljs-number">13.0</span>, <span class="hljs-keyword">watchOS</span> <span class="hljs-number">6.0</span>, <span class="hljs-operator">*</span>)<br>    <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">MessagePublisher</span>: <span class="hljs-title">Combine</span>.<span class="hljs-title">Publisher</span> </span>{<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">typealias</span> <span class="hljs-type">Output</span> <span class="hljs-operator">=</span> <span class="hljs-type">DDLogMessage</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">typealias</span> <span class="hljs-type">Failure</span> <span class="hljs-operator">=</span> <span class="hljs-type">Never</span><br><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">let</span> log: <span class="hljs-type">DDLog</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">let</span> logLevel: <span class="hljs-type">DDLogLevel</span><br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">init</span>(<span class="hljs-params">log</span>: <span class="hljs-type">DDLog</span>, <span class="hljs-params">with</span> <span class="hljs-params">logLevel</span>: <span class="hljs-type">DDLogLevel</span>)</span> {<br>            <span class="hljs-keyword">self</span>.log <span class="hljs-operator">=</span> log<br>            <span class="hljs-keyword">self</span>.logLevel <span class="hljs-operator">=</span> logLevel<br>        }<br><br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">receive</span>&lt;<span class="hljs-type">S</span>&gt;(<span class="hljs-params">subscriber</span>: <span class="hljs-type">S</span>)</span> <span class="hljs-keyword">where</span> <span class="hljs-type">S</span>: <span class="hljs-type">Subscriber</span>, <span class="hljs-type">S</span>.<span class="hljs-type">Failure</span> <span class="hljs-operator">==</span> <span class="hljs-type">Failure</span>, <span class="hljs-type">S</span>.<span class="hljs-type">Input</span> <span class="hljs-operator">==</span> <span class="hljs-type">Output</span> {<br><br>            <span class="hljs-keyword">let</span> subscription <span class="hljs-operator">=</span> <span class="hljs-type">Subscription</span>(log: <span class="hljs-keyword">self</span>.log, with: logLevel, subscriber: subscriber)<br>            subscriber.receive(subscription: subscription)<br>        }<br>    }<br><br>    <span class="hljs-comment">// MARK: - Subscription</span><br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Subscription</span>&lt;<span class="hljs-title">S</span>: <span class="hljs-title">Subscriber</span>&gt;: <span class="hljs-title">NSObject</span>, <span class="hljs-title">DDLogger</span>, <span class="hljs-title">Combine</span>.<span class="hljs-title">Subscription</span></span><br><span class="hljs-class">        <span class="hljs-title">where</span> <span class="hljs-title">S</span>.<span class="hljs-title">Input</span> == <span class="hljs-title">DDLogMessage</span> </span>{<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> subscriber: <span class="hljs-type">S</span>?<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">weak</span> <span class="hljs-keyword">var</span> log: <span class="hljs-type">DDLog</span>?<br><br>        <span class="hljs-comment">//Not used but DDLogger requires it. The preferred way to achieve this is to use the `map()` Combine operator of the publisher.</span><br>        <span class="hljs-comment">//ie:</span><br>        <span class="hljs-comment">// DDLog.sharedInstance.messagePublisher()</span><br>        <span class="hljs-comment">//     .map { [format log message] }</span><br>        <span class="hljs-comment">//     .sink(receiveValue: { [process log message] })</span><br>        <span class="hljs-comment">//</span><br>        <span class="hljs-keyword">var</span> logFormatter: <span class="hljs-type">DDLogFormatter</span>? <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span><br><br>        <span class="hljs-keyword">let</span> combineIdentifier <span class="hljs-operator">=</span> <span class="hljs-type">CombineIdentifier</span>()<br><br>        <span class="hljs-function"><span class="hljs-keyword">init</span>(<span class="hljs-params">log</span>: <span class="hljs-type">DDLog</span>, <span class="hljs-params">with</span> <span class="hljs-params">logLevel</span>: <span class="hljs-type">DDLogLevel</span>, <span class="hljs-params">subscriber</span>: <span class="hljs-type">S</span>)</span> {<br><br>            <span class="hljs-keyword">self</span>.subscriber <span class="hljs-operator">=</span> subscriber<br>            <span class="hljs-keyword">self</span>.log <span class="hljs-operator">=</span> log<br><br>            <span class="hljs-keyword">super</span>.<span class="hljs-keyword">init</span>()<br><br>            log.add(<span class="hljs-keyword">self</span>, with: logLevel)<br>        }<br><br>        <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">request</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">demand</span>: <span class="hljs-type">Subscribers</span>.<span class="hljs-type">Demand</span>)</span> {<br>            <span class="hljs-comment">//The log messages are endless until canceled, so we won't do any demand management.</span><br>            <span class="hljs-comment">//Combine operators can be used to deal with it as needed.</span><br>        }<br><br>        <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">cancel</span>()</span> {<br>            <span class="hljs-keyword">self</span>.log<span class="hljs-operator">?</span>.remove(<span class="hljs-keyword">self</span>)<br>            <span class="hljs-keyword">self</span>.subscriber <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span><br>        }<br><br>        <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">log</span>(<span class="hljs-params">message</span> <span class="hljs-params">logMessage</span>: <span class="hljs-type">DDLogMessage</span>)</span> {<br>            <span class="hljs-keyword">_</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.subscriber<span class="hljs-operator">?</span>.receive(logMessage)<br>        }<br>    }<br>}<br><br><span class="hljs-keyword">@available</span>(OSX <span class="hljs-number">10.15</span>, <span class="hljs-keyword">iOS</span> <span class="hljs-number">13.0</span>, <span class="hljs-keyword">tvOS</span> <span class="hljs-number">13.0</span>, <span class="hljs-keyword">watchOS</span> <span class="hljs-number">6.0</span>, <span class="hljs-operator">*</span>)<br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">Publisher</span> <span class="hljs-title">where</span> <span class="hljs-title">Output</span> == <span class="hljs-title">DDLogMessage</span> </span>{<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">formatted</span>(<span class="hljs-params">with</span> <span class="hljs-params">formatter</span>: <span class="hljs-type">DDLogFormatter</span>)</span> -&gt; <span class="hljs-type">Publishers</span>.<span class="hljs-type">CompactMap</span>&lt;<span class="hljs-keyword">Self</span>, <span class="hljs-type">String</span>&gt; {<br>        <span class="hljs-keyword">return</span> compactMap { formatter.format(message: <span class="hljs-variable">$0</span>) }<br>    }<br>}<br><br><span class="hljs-keyword">#endif</span><br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>查看cocoapods中各个库的版本</title>
    <link href="/posts/48263.html"/>
    <url>/posts/48263.html</url>
    
    <content type="html"><![CDATA[<h1 id="查看cocoapods中各个库的版本"><a href="#查看cocoapods中各个库的版本" class="headerlink" title="查看cocoapods中各个库的版本"></a>查看cocoapods中各个库的版本</h1><p>========================</p><p>记录一下</p><figure class="highlight reasonml"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs reasonml">cat <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Podfile</span>.</span></span>lock<br></code></pre></td></tr></tbody></table></figure><figure class="highlight haml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><code class="hljs haml">Last login: Fri Apr  9 05:48:04 on ttys002<br>zhangsaidong@zhangsaidongs-MacBook-Pro ~ % cd /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/RunInto<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cd ..<br>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cat Podfile.lock<br>PODS:<br>  -<span class="ruby"> Alamofire (<span class="hljs-number">5.4</span>.<span class="hljs-number">1</span>)</span><br><span class="ruby">  - ARVideoKit (<span class="hljs-number">1.6</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - BarcodeScanner-custom (<span class="hljs-number">5.1</span>.<span class="hljs-number">4</span>)</span><br><span class="ruby">  - ColorSlider (<span class="hljs-number">4.4</span>)</span><br><span class="ruby">  - Crashlytics (<span class="hljs-number">3.14</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - Fabric (~&gt; <span class="hljs-number">1.10</span>.<span class="hljs-number">2</span>)</span><br><span class="ruby">  - Differentiator (<span class="hljs-number">5.0</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - Fabric (<span class="hljs-number">1.10</span>.<span class="hljs-number">2</span>)</span><br><span class="ruby">  - HandyJSON (<span class="hljs-number">5.0</span>.<span class="hljs-number">2</span>)</span><br><span class="ruby">  - JGProgressHUD (<span class="hljs-number">2.2</span>)</span><br><span class="ruby">  - Kingfisher (<span class="hljs-number">6.1</span>.<span class="hljs-number">1</span>)</span><br><span class="ruby">  - MJRefresh (<span class="hljs-number">3.5</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - Moya (<span class="hljs-number">14.0</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - Moya/Core (= <span class="hljs-number">14.0</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - Moya/Core (<span class="hljs-number">14.0</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - Alamofire (~&gt; <span class="hljs-number">5.0</span>)</span><br><span class="ruby">  - <span class="hljs-string">"NSObject+Rx (2.1.0)"</span><span class="hljs-symbol">:</span></span><br><span class="ruby">    - RxSwift</span><br><span class="ruby">  - ObjectMapper (<span class="hljs-number">4.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - OpenCV (<span class="hljs-number">4.1</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - PinpointKit (<span class="hljs-number">1.5</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - PinpointKit/Core (= <span class="hljs-number">1.5</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - PinpointKit/Core (<span class="hljs-number">1.5</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - R.swift (<span class="hljs-number">5.3</span>.<span class="hljs-number">1</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - R.swift.Library (~&gt; <span class="hljs-number">5.3</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - R.swift.Library (<span class="hljs-number">5.3</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - ReactorKit (<span class="hljs-number">3.0</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - RxSwift (~&gt; <span class="hljs-number">6.0</span>)</span><br><span class="ruby">    - WeakMapTable (~&gt; <span class="hljs-number">1.1</span>)</span><br><span class="ruby">  - RxCocoa (<span class="hljs-number">6.1</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - RxRelay (= <span class="hljs-number">6.1</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">    - RxSwift (= <span class="hljs-number">6.1</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - RxDataSources (<span class="hljs-number">5.0</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - Differentiator (~&gt; <span class="hljs-number">5.0</span>)</span><br><span class="ruby">    - RxCocoa (~&gt; <span class="hljs-number">6.0</span>)</span><br><span class="ruby">    - RxSwift (~&gt; <span class="hljs-number">6.0</span>)</span><br><span class="ruby">  - RxFeedback (<span class="hljs-number">4.0</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - RxCocoa (~&gt; <span class="hljs-number">6.0</span>)</span><br><span class="ruby">    - RxSwift (~&gt; <span class="hljs-number">6.0</span>)</span><br><span class="ruby">  - RxGesture (<span class="hljs-number">4.0</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - RxCocoa (~&gt; <span class="hljs-number">6.0</span>)</span><br><span class="ruby">    - RxSwift (~&gt; <span class="hljs-number">6.0</span>)</span><br><span class="ruby">  - RxRelay (<span class="hljs-number">6.1</span>.<span class="hljs-number">0</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - RxSwift (= <span class="hljs-number">6.1</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - RxSwift (<span class="hljs-number">6.1</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - Siren (<span class="hljs-number">5.8</span>.<span class="hljs-number">1</span>)</span><br><span class="ruby">  - SnapKit (<span class="hljs-number">5.0</span>.<span class="hljs-number">1</span>)</span><br><span class="ruby">  - Spring (<span class="hljs-number">1.0</span>.<span class="hljs-number">6</span>)</span><br><span class="ruby">  - SQLite.swift (<span class="hljs-number">0.12</span>.<span class="hljs-number">2</span>)<span class="hljs-symbol">:</span></span><br><span class="ruby">    - SQLite.swift/standard (= <span class="hljs-number">0.12</span>.<span class="hljs-number">2</span>)</span><br><span class="ruby">  - SQLite.swift/standard (<span class="hljs-number">0.12</span>.<span class="hljs-number">2</span>)</span><br><span class="ruby">  - SwifterSwift/CoreGraphics (<span class="hljs-number">5.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - SwifterSwift/Dispatch (<span class="hljs-number">5.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - SwifterSwift/Foundation (<span class="hljs-number">5.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - SwifterSwift/SceneKit (<span class="hljs-number">5.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - SwifterSwift/StoreKit (<span class="hljs-number">5.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - SwifterSwift/SwiftStdlib (<span class="hljs-number">5.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - SwifterSwift/UIKit (<span class="hljs-number">5.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - SwiftLint (<span class="hljs-number">0.42</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - SwiftyBeaver (<span class="hljs-number">1.9</span>.<span class="hljs-number">3</span>)</span><br><span class="ruby">  - SwiftyJSON (<span class="hljs-number">5.0</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - Then (<span class="hljs-number">2.7</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - Toast-Swift (<span class="hljs-number">5.0</span>.<span class="hljs-number">1</span>)</span><br><span class="ruby">  - WeakMapTable (<span class="hljs-number">1.2</span>.<span class="hljs-number">0</span>)</span><br><span class="ruby">  - Zip (<span class="hljs-number">2.1</span>.<span class="hljs-number">1</span>)</span><br><br><span class="ruby"><span class="hljs-symbol">DEPENDENCIES:</span></span><br><span class="ruby">  - Alamofire</span><br><span class="ruby">  - ARVideoKit (from <span class="hljs-string">`https://github.com/AFathi/ARVideoKit.git`</span>, branch <span class="hljs-string">`swift_5`</span>)</span><br><span class="ruby">  - BarcodeScanner-custom (from <span class="hljs-string">`https://github.com/adong666666/BarCodeScanner-custom.git`</span>, tag <span class="hljs-string">`5.1.4`</span>)</span><br><span class="ruby">  - ColorSlider</span><br><span class="ruby">  - Crashlytics</span><br><span class="ruby">  - Fabric</span><br><span class="ruby">  - HandyJSON</span><br><span class="ruby">  - JGProgressHUD</span><br><span class="ruby">  - Kingfisher</span><br><span class="ruby">  - MJRefresh</span><br><span class="ruby">  - Moya</span><br><span class="ruby">  - <span class="hljs-string">"NSObject+Rx"</span></span><br><span class="ruby">  - ObjectMapper</span><br><span class="ruby">  - OpenCV</span><br><span class="ruby">  - PinpointKit</span><br><span class="ruby">  - R.swift</span><br><span class="ruby">  - ReactorKit</span><br><span class="ruby">  - RxCocoa</span><br><span class="ruby">  - RxDataSources</span><br><span class="ruby">  - RxFeedback</span><br><span class="ruby">  - RxGesture</span><br><span class="ruby">  - RxSwift</span><br><span class="ruby">  - Siren</span><br><span class="ruby">  - SnapKit</span><br><span class="ruby">  - Spring (from <span class="hljs-string">`https://github.com/MengTo/Spring.git`</span>)</span><br><span class="ruby">  - SQLite.swift</span><br><span class="ruby">  - SwifterSwift/CoreGraphics</span><br><span class="ruby">  - SwifterSwift/Dispatch</span><br><span class="ruby">  - SwifterSwift/Foundation</span><br><span class="ruby">  - SwifterSwift/SceneKit</span><br><span class="ruby">  - SwifterSwift/StoreKit</span><br><span class="ruby">  - SwifterSwift/SwiftStdlib</span><br><span class="ruby">  - SwifterSwift/UIKit</span><br><span class="ruby">  - SwiftLint</span><br><span class="ruby">  - SwiftyBeaver</span><br><span class="ruby">  - SwiftyJSON</span><br><span class="ruby">  - Then</span><br><span class="ruby">  - Toast-Swift</span><br><span class="ruby">  - Zip</span><br><br><span class="ruby">SPEC <span class="hljs-symbol">REPOS:</span></span><br><span class="ruby">  <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/</span>CocoaPods/Specs.<span class="hljs-symbol">git:</span></span><br><span class="ruby">    - Alamofire</span><br><span class="ruby">    - ColorSlider</span><br><span class="ruby">    - Crashlytics</span><br><span class="ruby">    - Differentiator</span><br><span class="ruby">    - Fabric</span><br><span class="ruby">    - HandyJSON</span><br><span class="ruby">    - JGProgressHUD</span><br><span class="ruby">    - Kingfisher</span><br><span class="ruby">    - MJRefresh</span><br><span class="ruby">    - Moya</span><br><span class="ruby">    - <span class="hljs-string">"NSObject+Rx"</span></span><br><span class="ruby">    - ObjectMapper</span><br><span class="ruby">    - OpenCV</span><br><span class="ruby">    - PinpointKit</span><br><span class="ruby">    - R.swift</span><br><span class="ruby">    - R.swift.Library</span><br><span class="ruby">    - ReactorKit</span><br><span class="ruby">    - RxCocoa</span><br><span class="ruby">    - RxDataSources</span><br><span class="ruby">    - RxFeedback</span><br><span class="ruby">    - RxGesture</span><br><span class="ruby">    - RxRelay</span><br><span class="ruby">    - RxSwift</span><br><span class="ruby">    - Siren</span><br><span class="ruby">    - SnapKit</span><br><span class="ruby">    - SQLite.swift</span><br><span class="ruby">    - SwifterSwift</span><br><span class="ruby">    - SwiftLint</span><br><span class="ruby">    - SwiftyBeaver</span><br><span class="ruby">    - SwiftyJSON</span><br><span class="ruby">    - Then</span><br><span class="ruby">    - Toast-Swift</span><br><span class="ruby">    - WeakMapTable</span><br><span class="ruby">    - Zip</span><br><br><span class="ruby">EXTERNAL <span class="hljs-symbol">SOURCES:</span></span><br><span class="ruby">  <span class="hljs-symbol">ARVideoKit:</span></span><br><span class="ruby">    <span class="hljs-symbol">:branch</span>: swift_5</span><br><span class="ruby">    <span class="hljs-symbol">:git</span>: <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/</span>AFathi/ARVideoKit.git</span><br><span class="ruby">  BarcodeScanner-<span class="hljs-symbol">custom:</span></span><br><span class="ruby">    <span class="hljs-symbol">:git</span>: <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/adong</span>666666/BarCodeScanner-custom.git</span><br><span class="ruby">    <span class="hljs-symbol">:tag</span>: <span class="hljs-number">5.1</span>.<span class="hljs-number">4</span></span><br><span class="ruby">  <span class="hljs-symbol">Spring:</span></span><br><span class="ruby">    <span class="hljs-symbol">:git</span>: <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/</span>MengTo/Spring.git</span><br><br><span class="ruby">CHECKOUT <span class="hljs-symbol">OPTIONS:</span></span><br><span class="ruby">  <span class="hljs-symbol">ARVideoKit:</span></span><br><span class="ruby">    <span class="hljs-symbol">:commit</span>: b7e1facdedd8fe16d04ef5f47c4697e89bad9f27</span><br><span class="ruby">    <span class="hljs-symbol">:git</span>: <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/</span>AFathi/ARVideoKit.git</span><br><span class="ruby">  BarcodeScanner-<span class="hljs-symbol">custom:</span></span><br><span class="ruby">    <span class="hljs-symbol">:git</span>: <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/adong</span>666666/BarCodeScanner-custom.git</span><br><span class="ruby">    <span class="hljs-symbol">:tag</span>: <span class="hljs-number">5.1</span>.<span class="hljs-number">4</span></span><br><span class="ruby">  <span class="hljs-symbol">Spring:</span></span><br><span class="ruby">    <span class="hljs-symbol">:commit</span>: 50d92a5b9e08848387ae95bf44c6ad20834f7083</span><br><span class="ruby">    <span class="hljs-symbol">:git</span>: <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/</span>MengTo/Spring.git</span><br><br><span class="ruby">SPEC <span class="hljs-symbol">CHECKSUMS:</span></span><br><span class="ruby">  <span class="hljs-symbol">Alamofire:</span> 2291f7d21ca607c491dd17642e5d40fdcda0e65c</span><br><span class="ruby">  <span class="hljs-symbol">ARVideoKit:</span> 4bd4ac37b63e32de354d5470949416f527dd88f5</span><br><span class="ruby">  BarcodeScanner-<span class="hljs-symbol">custom:</span> 661d4e5a498a848580857e2eb5cbd1718bb356b7</span><br><span class="ruby">  <span class="hljs-symbol">ColorSlider:</span> 9a888e65b871fa1e6a26fadebf4931c949935681</span><br><span class="ruby">  <span class="hljs-symbol">Crashlytics:</span> 9220f5bc89e7a618df411b4f639389dbfb0e03d2</span><br><span class="ruby">  <span class="hljs-symbol">Differentiator:</span> e8497ceab83c1b10ca233716d547b9af21b9344d</span><br><span class="ruby">  <span class="hljs-symbol">Fabric:</span> ea977e3cd9c20425516d3dafd3bf8c941c51223f</span><br><span class="ruby">  <span class="hljs-symbol">HandyJSON:</span> 9e4e236f5d2dbefad5155a77417bbea438201c03</span><br><span class="ruby">  <span class="hljs-symbol">JGProgressHUD:</span> d83d7a981b85d11205e19ff8ad5bb9c40571c847</span><br><span class="ruby">  <span class="hljs-symbol">Kingfisher:</span> 676d63307fbef6ed5d5ed400bff36983480d7500</span><br><span class="ruby">  <span class="hljs-symbol">MJRefresh:</span> 6afc955813966afb08305477dd7a0d9ad5e79a16</span><br><span class="ruby">  <span class="hljs-symbol">Moya:</span> 5b45dacb75adb009f97fde91c204c1e565d31916</span><br><span class="ruby">  <span class="hljs-string">"NSObject+Rx"</span>: 09277ba78aa12a8e454c82429eb4e31bfb413131</span><br><span class="ruby">  <span class="hljs-symbol">ObjectMapper:</span> 1eb41f610210777375fa806bf161dc39fb832b81</span><br><span class="ruby">  <span class="hljs-symbol">OpenCV:</span> 52cd4d72ff29e2be83421477aec5447320b7fb19</span><br><span class="ruby">  <span class="hljs-symbol">PinpointKit:</span> 8599f60b7cff2b65e52a10293c220b6b81f14839</span><br><span class="ruby">  R.<span class="hljs-symbol">swift:</span> 56ec7e3aef34b9eee47a659e42462db2c1cc5ac3</span><br><span class="ruby">  R.swift.<span class="hljs-symbol">Library:</span> 0fc583cb55a99e28901299cc451614cad1161962</span><br><span class="ruby">  <span class="hljs-symbol">ReactorKit:</span> 5348c9881dcb546605b451e32759dccc9937d36e</span><br><span class="ruby">  <span class="hljs-symbol">RxCocoa:</span> 5c51f02d562cbd94629f6c26cf0c80fe4ab8d343</span><br><span class="ruby">  <span class="hljs-symbol">RxDataSources:</span> aa47cc1ed6c500fa0dfecac5c979b723542d79cf</span><br><span class="ruby">  <span class="hljs-symbol">RxFeedback:</span> c762a59b678ed8e30b5c84b6e4e03ad0341d2ecb</span><br><span class="ruby">  <span class="hljs-symbol">RxGesture:</span> b095a86df33d199a33b46a644e7c58bdef8ab035</span><br><span class="ruby">  <span class="hljs-symbol">RxRelay:</span> 483e1a19fad961b41f0b0c0bee506f46c1ae14fe</span><br><span class="ruby">  <span class="hljs-symbol">RxSwift:</span> a834e5c538e89eca0cae86f403f4fbf0336786ce</span><br><span class="ruby">  <span class="hljs-symbol">Siren:</span> de768099aff1f1c9acda4247064788a4940b4bf3</span><br><span class="ruby">  <span class="hljs-symbol">SnapKit:</span> 97b92857e3df3a0c71833cce143274bf6ef8e5eb</span><br><span class="ruby">  <span class="hljs-symbol">Spring:</span> 3d113f14575ef79aec9c5f906dfa4f5001c03254</span><br><span class="ruby">  SQLite.<span class="hljs-symbol">swift:</span> d2b4642190917051ce6bd1d49aab565fe794eea3</span><br><span class="ruby">  <span class="hljs-symbol">SwifterSwift:</span> 334181863c416882d97b7a60c05054d9e4d799e2</span><br><span class="ruby">  <span class="hljs-symbol">SwiftLint:</span> 4fa9579c63416865179bc416f0a92d55f009600d</span><br><span class="ruby">  <span class="hljs-symbol">SwiftyBeaver:</span> 2e8acd6fc90c6d0a27055867a290794926d57c02</span><br><span class="ruby">  <span class="hljs-symbol">SwiftyJSON:</span> 36413e04c44ee145039d332b4f4e2d3e8d6c4db7</span><br><span class="ruby">  <span class="hljs-symbol">Then:</span> acfe0be7e98221c6204e12f8161459606d5d822d</span><br><span class="ruby">  Toast-<span class="hljs-symbol">Swift:</span> 9b6a70f28b3bf0b96c40d46c0c4b9d6639846711</span><br><span class="ruby">  <span class="hljs-symbol">WeakMapTable:</span> 05c694ce8439a7a9ebabb56187287a63c57673d6</span><br><span class="ruby">  <span class="hljs-symbol">Zip:</span> 414f59909701fda9a84ab774ebe0f5449b1082cc</span><br><br><span class="ruby">PODFILE <span class="hljs-symbol">CHECKSUM:</span> 3c89a7a0577096b9dbf521d41263b504084bd37f</span><br><br><span class="ruby"><span class="hljs-symbol">COCOAPODS:</span> <span class="hljs-number">1.10</span>.<span class="hljs-number">1</span></span><br><span class="ruby">zhangsaidong<span class="hljs-variable">@zhangsaidongs</span>-MacBook-Pro RunInto % </span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>cocoapods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Zip使用</title>
    <link href="/posts/17588.html"/>
    <url>/posts/17588.html</url>
    
    <content type="html"><![CDATA[<h1 id="Zip使用"><a href="#Zip使用" class="headerlink" title="Zip使用"></a>Zip使用</h1><p>========================</p><p>感觉官方写得挺明白的</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">let</span> filePath <span class="hljs-operator">=</span> <span class="hljs-type">Bundle</span>.main.url(forResource: <span class="hljs-string">"file"</span>, withExtension: <span class="hljs-string">"zip"</span>)<span class="hljs-operator">!</span><br>    <span class="hljs-keyword">let</span> unzipDirectory <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">Zip</span>.quickUnzipFile(filePath) <span class="hljs-comment">// Unzip</span><br>    <span class="hljs-keyword">let</span> zipFilePath <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">Zip</span>.quickZipFiles([filePath], fileName: <span class="hljs-string">"archive"</span>) <span class="hljs-comment">// Zip</span><br>}<br><span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"Something went wrong"</span>)<br>}<br><br></code></pre></td></tr></tbody></table></figure><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">let</span> filePath <span class="hljs-operator">=</span> <span class="hljs-type">Bundle</span>.main.url(forResource: <span class="hljs-string">"file"</span>, withExtension: <span class="hljs-string">"zip"</span>)<span class="hljs-operator">!</span><br>    <span class="hljs-keyword">let</span> documentsDirectory <span class="hljs-operator">=</span> <span class="hljs-type">FileManager</span>.default.urls(for:.documentDirectory, in: .userDomainMask)[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">try</span> <span class="hljs-type">Zip</span>.unzipFile(filePath, destination: documentsDirectory, overwrite: <span class="hljs-literal">true</span>, password: <span class="hljs-string">"password"</span>, progress: { (progress) -&gt; () <span class="hljs-keyword">in</span><br>        <span class="hljs-built_in">print</span>(progress)<br>    }) <span class="hljs-comment">// Unzip</span><br><br>    <span class="hljs-keyword">let</span> zipFilePath <span class="hljs-operator">=</span> documentsFolder.appendingPathComponent(<span class="hljs-string">"archive.zip"</span>)<br>    <span class="hljs-keyword">try</span> <span class="hljs-type">Zip</span>.zipFiles([filePath], zipFilePath: zipFilePath, password: <span class="hljs-string">"password"</span>, progress: { (progress) -&gt; () <span class="hljs-keyword">in</span><br>        <span class="hljs-built_in">print</span>(progress)<br>    }) <span class="hljs-comment">//Zip</span><br><br>}<br><span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"Something went wrong"</span>)<br>}<br></code></pre></td></tr></tbody></table></figure><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">Zip</span>.addCustomFileExtension(<span class="hljs-string">"file-extension-here"</span>)<br></code></pre></td></tr></tbody></table></figure><p>我是这样用的</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">unzipModels</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">path</span>: [<span class="hljs-type">String</span>], <span class="hljs-params">modelUrl</span>: <span class="hljs-type">String</span>, <span class="hljs-params">directory</span>: <span class="hljs-type">String</span>)</span> {<br>    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> path {<br>        <span class="hljs-keyword">let</span> fileManager <span class="hljs-operator">=</span> <span class="hljs-type">FileManager</span>.default<br>        <span class="hljs-keyword">let</span> urls: [<span class="hljs-type">URL</span>] <span class="hljs-operator">=</span> fileManager.urls(for: .documentDirectory, in: .userDomainMask)<br>        <span class="hljs-keyword">let</span> documentURL <span class="hljs-operator">=</span> urls.first<span class="hljs-operator">!</span><br>        <span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> documentURL.appendingPathComponent(directory <span class="hljs-operator">+</span> item)<br>        <span class="hljs-keyword">let</span> urlForTemp <span class="hljs-operator">=</span> documentURL.appendingPathComponent(<span class="hljs-string">"Temp"</span>, isDirectory: <span class="hljs-literal">true</span>)<br>        <span class="hljs-keyword">let</span> destinationURL <span class="hljs-operator">=</span> documentURL.appendingPathComponent(directory <span class="hljs-operator">+</span> <span class="hljs-string">"File"</span>, isDirectory: <span class="hljs-literal">true</span>)<br>            <span class="hljs-keyword">while</span> <span class="hljs-literal">true</span> {<br>                <span class="hljs-keyword">if</span> fileManager.fileExists(atPath: url.path) {<br>                    <span class="hljs-keyword">break</span><br>                } <span class="hljs-keyword">else</span> {<br>                    <span class="hljs-type">Thread</span>.sleep(forTimeInterval: <span class="hljs-number">1</span>)<br>                    <span class="hljs-keyword">continue</span><br>                }<br>            }<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">try</span> <span class="hljs-type">Zip</span>.unzipFile(url, destination: urlForTemp, overwrite: <span class="hljs-literal">true</span>, password: <span class="hljs-literal">nil</span>, progress: { (progress) <span class="hljs-keyword">in</span><br>                <span class="hljs-keyword">if</span> progress <span class="hljs-operator">==</span> <span class="hljs-number">1</span> {<br>                    <span class="hljs-keyword">do</span> {<br>                        <span class="hljs-keyword">if</span> fileManager.fileExists(atPath: destinationURL.path ) {<br>                            <span class="hljs-keyword">try</span> fileManager.removeItem(atPath: destinationURL.path)<br>                        }<br>                        <span class="hljs-keyword">try</span> fileManager.moveItem(atPath: urlForTemp.path, toPath: destinationURL.path)<br>                        <span class="hljs-keyword">try</span> fileManager.removeItem(atPath: url.path)<br>                    } <span class="hljs-keyword">catch</span> {<br>                        log(error)<br>                    }<br>                }<br>            })<br>        } <span class="hljs-keyword">catch</span> {<br>            log(error)<br>        }<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">downloadModelsAndUnzip</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">path</span>: [<span class="hljs-type">String</span>], <span class="hljs-params">modelUrl</span>: <span class="hljs-type">String</span>, <span class="hljs-params">directory</span>: <span class="hljs-type">String</span>)</span> {<br>    <span class="hljs-type">DispatchQueue</span>.global().async {<br>        downloadModelsWithoutDispatchQueue(path, modelUrl: modelUrl, directory: directory)<br>        unzipModels(path, modelUrl: modelUrl, directory: directory)<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>zip</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iOS mlmodelc内部文件格式规范</title>
    <link href="/posts/32840.html"/>
    <url>/posts/32840.html</url>
    
    <content type="html"><![CDATA[<h1 id="iOS-mlmodelc内部文件格式规范"><a href="#iOS-mlmodelc内部文件格式规范" class="headerlink" title="iOS mlmodelc内部文件格式规范"></a>iOS mlmodelc内部文件格式规范</h1><p>========================<br>尽量本地编译Core ML mlmodel，则得到的mlmodelc可以直接使用</p><p>通过网络加载的Core ML mlmodel所编译而出的mlmodelc虽说内容一致，但格式不方便直接使用，而且……最重要的是，网络加载的mlmodel至少还要再编译一次，相当于在App内占用了两个模型的体量。而且有可能需要重复编译多次，即占用多个模型的体量，如果还不注重清理的话，App的体量会越来越大，而且内部数据还大量重复，因为编译出来mlmodec不能直接使用(你可以在代码里调整模型的内部格式，但是这也太麻烦了，对不同模型还得不同处理)</p><p>所以建议使用mlmodel本地编译出来后的mlmodelc，你可以在Products中的.app文件夹中右键显示包内容找到编译后的mlmodelc文件</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/3.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>file</tag>
      
      <tag>机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iOS延时</title>
    <link href="/posts/12351.html"/>
    <url>/posts/12351.html</url>
    
    <content type="html"><![CDATA[<h1 id="iOS延时"><a href="#iOS延时" class="headerlink" title="iOS延时"></a>iOS延时</h1><p>========================</p><p>今天我使用了这样一种延时，目的是等待文件下载完，返回与文件相关的数据，我试了各种多线程，后面发现这种延时有阻塞的味道，能有效地防止函数提前返回数据</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span> {<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> compiledModelURL <span class="hljs-operator">=</span> <span class="hljs-keyword">try?</span> <span class="hljs-type">MLModel</span>.compileModel(at: url) {<br>    } <span class="hljs-keyword">else</span> {<br>        <span class="hljs-type">Thread</span>.sleep(forTimeInterval: <span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">continue</span><br>    }<br>    <span class="hljs-keyword">break</span><br>}<br></code></pre></td></tr></tbody></table></figure><p>这种延时不能起到阻塞作用，也不能防止函数提前返回，但是它可以等待一定时间后执行某种操作。</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">DispatchQueue</span>.main.asyncAfter(deadline: .now() <span class="hljs-operator">+</span> <span class="hljs-number">3</span>) {<br>    <span class="hljs-keyword">let</span> view <span class="hljs-operator">=</span> <span class="hljs-type">UIViewController</span>.getCurrentViewController()<span class="hljs-operator">?</span>.view<br>    view<span class="hljs-operator">?</span>.hideToastActivity()<br>    view<span class="hljs-operator">?</span>.hideAllToasts()<br>}<br></code></pre></td></tr></tbody></table></figure><p>下面是网上看到的一些延时</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">// 1.perform(必须在主线程中执行)</span><br><span class="hljs-keyword">self</span>.perform(#selector(delayExecution), with: <span class="hljs-literal">nil</span>, afterDelay: <span class="hljs-number">3</span>)<br><span class="hljs-comment">// 取消</span><br><span class="hljs-type">NSObject</span>.cancelPreviousPerformRequests(withTarget: <span class="hljs-keyword">self</span>)<br><br><span class="hljs-comment">// 2.timer(必须在主线程中执行)</span><br><span class="hljs-type">Timer</span>.scheduledTimer(timeInterval: <span class="hljs-number">3</span>, target: <span class="hljs-keyword">self</span>, selector: #selector(delayExecution), userInfo: <span class="hljs-literal">nil</span>, repeats: <span class="hljs-literal">false</span>)<br><br><span class="hljs-comment">// 3.Thread (在主线程会卡主界面)</span><br><span class="hljs-type">Thread</span>.sleep(forTimeInterval: <span class="hljs-number">3</span>)<br><span class="hljs-keyword">self</span>.delayExecution()<br><br><span class="hljs-comment">// 4.GCD 主线程/子线程</span><br><span class="hljs-type">DispatchQueue</span>.main.asyncAfter(deadline: .now() <span class="hljs-operator">+</span> <span class="hljs-number">3</span>) {<br>    <span class="hljs-keyword">self</span>.delayExecution()<br>}<br><br><span class="hljs-type">DispatchQueue</span>.global().asyncAfter(deadline: .now() <span class="hljs-operator">+</span> <span class="hljs-number">3</span>) {<br>    <span class="hljs-keyword">self</span>.delayExecution()<br>}<br><br></code></pre></td></tr></tbody></table></figure><h2 id="延时执行"><a href="#延时执行" class="headerlink" title="延时执行"></a>延时执行</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">typealias</span> <span class="hljs-type">Task</span> <span class="hljs-operator">=</span> (<span class="hljs-keyword">_</span> cancel: <span class="hljs-type">Bool</span>) -&gt; <span class="hljs-type">Void</span><br><span class="hljs-comment">/// 代码延迟运行</span><br><span class="hljs-comment">///</span><br><span class="hljs-comment">/// - Parameters:</span><br><span class="hljs-comment">///   - delayTime: 延时时间。比如：.seconds(5)、.milliseconds(500)</span><br><span class="hljs-comment">///   - qosClass: 要使用的全局QOS类（默认为 nil，表示主线程）</span><br><span class="hljs-comment">///   - task: 延迟运行的代码</span><br><span class="hljs-comment">/// - Returns: Task?</span><br><span class="hljs-keyword">@discardableResult</span><br><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">bk_delay</span>(<span class="hljs-params">by</span> <span class="hljs-params">delayTime</span>: <span class="hljs-type">TimeInterval</span>, <span class="hljs-params">qosClass</span>: <span class="hljs-type">DispatchQoS</span>.<span class="hljs-type">QoSClass</span>? <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>, <span class="hljs-keyword">_</span> <span class="hljs-params">task</span>: <span class="hljs-keyword">@escaping</span> () -&gt; <span class="hljs-type">Void</span>)</span> -&gt; <span class="hljs-type">Task</span>? {<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">dispatch_later</span>(<span class="hljs-params">block</span>: <span class="hljs-keyword">@escaping</span> () -&gt; <span class="hljs-type">Void</span>)</span> {<br>        <span class="hljs-keyword">let</span> dispatchQueue <span class="hljs-operator">=</span> qosClass <span class="hljs-operator">!=</span> <span class="hljs-literal">nil</span> <span class="hljs-operator">?</span> <span class="hljs-type">DispatchQueue</span>.global(qos: qosClass<span class="hljs-operator">!</span>) : .main<br>        dispatchQueue.asyncAfter(deadline: .now() <span class="hljs-operator">+</span> delayTime, execute: block)<br>    }<br>    <br>    <span class="hljs-keyword">var</span> closure: (() -&gt; <span class="hljs-type">Void</span>)<span class="hljs-operator">?</span> <span class="hljs-operator">=</span> task<br>    <span class="hljs-keyword">var</span> result: <span class="hljs-type">Task</span>?<br>    <br>    <span class="hljs-keyword">let</span> delayedClosure: <span class="hljs-type">Task</span> <span class="hljs-operator">=</span> { cancel <span class="hljs-keyword">in</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> internalClosure <span class="hljs-operator">=</span> closure {<br>            <span class="hljs-keyword">if</span> <span class="hljs-operator">!</span>cancel {<br>                <span class="hljs-type">DispatchQueue</span>.main.async(execute: internalClosure)<br>            }<br>        }<br>        closure <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span><br>        result <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span><br>    }<br>    <br>    result <span class="hljs-operator">=</span> delayedClosure<br>    <br>    dispatch_later {<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> delayedClosure <span class="hljs-operator">=</span> result {<br>            delayedClosure(<span class="hljs-literal">false</span>)<br>        }<br>    }<br>    <br>    <span class="hljs-keyword">return</span> result<br>    <br>}<br><br><span class="hljs-comment">/// 取消代码延时运行</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">delayCancel</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">task</span>: <span class="hljs-type">Task</span>?)</span> {<br>    task<span class="hljs-operator">?</span>(<span class="hljs-literal">true</span>)<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="倒计时"><a href="#倒计时" class="headerlink" title="倒计时"></a>倒计时</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">/// GCD定时器倒计时</span><br><span class="hljs-comment">///</span><br><span class="hljs-comment">/// - Parameters:</span><br><span class="hljs-comment">///   - timeInterval: 间隔时间</span><br><span class="hljs-comment">///   - repeatCount: 重复次数</span><br><span class="hljs-comment">///   - handler: 循环事件,闭包参数: 1.timer 2.剩余执行次数</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">dispatchTimer</span>(<span class="hljs-params">timeInterval</span>: <span class="hljs-type">Double</span>, <span class="hljs-params">repeatCount</span>: <span class="hljs-type">Int</span>, <span class="hljs-params">handler</span>: <span class="hljs-keyword">@escaping</span> (<span class="hljs-type">DispatchSourceTimer</span>?, <span class="hljs-type">Int</span>) -&gt; <span class="hljs-type">Void</span>)</span> {<br>    <br>    <span class="hljs-keyword">if</span> repeatCount <span class="hljs-operator">&lt;=</span> <span class="hljs-number">0</span> {<br>        <span class="hljs-keyword">return</span><br>    }<br>    <span class="hljs-keyword">let</span> timer <span class="hljs-operator">=</span> <span class="hljs-type">DispatchSource</span>.makeTimerSource(flags: [], queue: <span class="hljs-type">DispatchQueue</span>.main)<br>    <span class="hljs-keyword">var</span> count <span class="hljs-operator">=</span> repeatCount<br>    timer.schedule(deadline: .now(), repeating: timeInterval)<br>    timer.setEventHandler {<br>        count <span class="hljs-operator">-=</span> <span class="hljs-number">1</span><br>        <span class="hljs-type">DispatchQueue</span>.main.async {<br>            handler(timer, count)<br>        }<br>        <span class="hljs-keyword">if</span> count <span class="hljs-operator">==</span> <span class="hljs-number">0</span> {<br>            timer.cancel()<br>        }<br>    }<br>    timer.resume()<br>    <br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">/// GCD实现定时器</span><br><span class="hljs-comment">///</span><br><span class="hljs-comment">/// - Parameters:</span><br><span class="hljs-comment">///   - timeInterval: 间隔时间</span><br><span class="hljs-comment">///   - handler: 事件</span><br><span class="hljs-comment">///   - needRepeat: 是否重复</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">dispatchTimer</span>(<span class="hljs-params">timeInterval</span>: <span class="hljs-type">Double</span>, <span class="hljs-params">handler</span>: <span class="hljs-keyword">@escaping</span> (<span class="hljs-type">DispatchSourceTimer</span>?) -&gt; <span class="hljs-type">Void</span>, <span class="hljs-params">needRepeat</span>: <span class="hljs-type">Bool</span>)</span> {<br>    <br>    <span class="hljs-keyword">let</span> timer <span class="hljs-operator">=</span> <span class="hljs-type">DispatchSource</span>.makeTimerSource(flags: [], queue: <span class="hljs-type">DispatchQueue</span>.main)<br>    timer.schedule(deadline: .now(), repeating: timeInterval)<br>    timer.setEventHandler {<br>        <span class="hljs-type">DispatchQueue</span>.main.async {<br>            <span class="hljs-keyword">if</span> needRepeat {<br>                handler(timer)<br>            } <span class="hljs-keyword">else</span> {<br>                timer.cancel()<br>                handler(<span class="hljs-literal">nil</span>)<br>            }<br>        }<br>    }<br>    timer.resume()<br>    <br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
      <tag>time</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iOS调试摘录</title>
    <link href="/posts/28837.html"/>
    <url>/posts/28837.html</url>
    
    <content type="html"><![CDATA[<h1 id="iOS调试摘录"><a href="#iOS调试摘录" class="headerlink" title="iOS调试摘录"></a>iOS调试摘录</h1><p>========================<br> po vo do 等调试命令可以了解下</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS%E8%B0%83%E8%AF%95%E6%91%98%E5%BD%95/iOS%E8%B0%83%E8%AF%95%E6%91%98%E5%BD%95.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>软件测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iOS_Swift文件夹和文件操作</title>
    <link href="/posts/700.html"/>
    <url>/posts/700.html</url>
    
    <content type="html"><![CDATA[<h1 id="iOS-Swift文件夹和文件操作"><a href="#iOS-Swift文件夹和文件操作" class="headerlink" title="iOS_Swift文件夹和文件操作"></a>iOS_Swift文件夹和文件操作</h1><p>========================</p><p>首先获取app文件夹：(以下例子都在doucment文件夹下操作)</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> manager <span class="hljs-operator">=</span> <span class="hljs-type">FileManager</span>.default<br><span class="hljs-keyword">let</span> urls: [<span class="hljs-type">URL</span>] <span class="hljs-operator">=</span> manager.urls(for: .documentDirectory, in: .userDomainMask)<br><span class="hljs-comment">// .libraryDirectory、.cachesDirectory ...</span><br><span class="hljs-keyword">self</span>.documentURL <span class="hljs-operator">=</span> urls.first<span class="hljs-operator">!</span><br></code></pre></td></tr></tbody></table></figure><h2 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan"</span>, isDirectory: <span class="hljs-literal">true</span>)<br><span class="hljs-keyword">var</span> isDirectory: <span class="hljs-type">ObjCBool</span> <span class="hljs-operator">=</span> <span class="hljs-type">ObjCBool</span>(<span class="hljs-literal">false</span>)<br><span class="hljs-keyword">let</span> isExist <span class="hljs-operator">=</span> manager.fileExists(atPath: url.path, isDirectory: <span class="hljs-operator">&amp;</span>isDirectory)<br><span class="hljs-keyword">if</span> <span class="hljs-operator">!</span>isExist {<br>  <span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">try</span> manager.createDirectory(at: url, withIntermediateDirectories: <span class="hljs-literal">true</span>, attributes: <span class="hljs-literal">nil</span>)<br>  } <span class="hljs-keyword">catch</span> {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"createDirectory error:<span class="hljs-subst">\(error)</span>"</span>)<br>  }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="创建文件，并写入内容"><a href="#创建文件，并写入内容" class="headerlink" title="创建文件，并写入内容"></a>创建文件，并写入内容</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan/test1.txt"</span>, isDirectory: <span class="hljs-literal">true</span>) <span class="hljs-comment">// txt文件会自动创建，只要给个名称就行</span><br><span class="hljs-keyword">let</span> string <span class="hljs-operator">=</span> <span class="hljs-string">"moxiaoyan"</span><br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-keyword">try</span> string.write(to: url, atomically: <span class="hljs-literal">true</span>, encoding: .utf8)<br>  <span class="hljs-comment">// Data、Array、Dictionary、Image 都可以write</span><br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"write string error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="文件夹-文件-信息"><a href="#文件夹-文件-信息" class="headerlink" title="文件夹/文件 信息"></a>文件夹/文件 信息</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan"</span>, isDirectory: <span class="hljs-literal">true</span>) <span class="hljs-comment">// or "moxiaoyan/test1.txt"</span><br><span class="hljs-comment">// 可读、可写、可执行、可删除</span><br><span class="hljs-keyword">let</span> readable <span class="hljs-operator">=</span> manager.isReadableFile(atPath: url.path)<br><span class="hljs-keyword">let</span> writeable <span class="hljs-operator">=</span> manager.isWritableFile(atPath: url.path)<br><span class="hljs-keyword">let</span> executable <span class="hljs-operator">=</span> manager.isExecutableFile(atPath: url.path)<br><span class="hljs-keyword">let</span> deleteable <span class="hljs-operator">=</span> manager.isDeletableFile(atPath: url.path)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"readable:<span class="hljs-subst">\(readable)</span> writeable:<span class="hljs-subst">\(writeable)</span> executable:<span class="hljs-subst">\(executable)</span> deleteable:<span class="hljs-subst">\(deleteable)</span>"</span>)<br> <br><span class="hljs-comment">// NSFileCreationDate:创建时间、NSFileSize:文件大小、NSFileType:文件类型...</span><br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-keyword">let</span> attributes: <span class="hljs-type">Dictionary</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> manager.attributesOfItem(atPath: url.path)<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"attributes<span class="hljs-subst">\(attributes)</span>"</span>)<br>  <span class="hljs-keyword">let</span> fileSize <span class="hljs-operator">=</span> attributes[<span class="hljs-type">FileAttributeKey</span>.size] <span class="hljs-keyword">as!</span> <span class="hljs-type">Int</span><br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"fileSize:<span class="hljs-subst">\(fileSize)</span>"</span>)<br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"attributes error: <span class="hljs-subst">\(error)</span>"</span>)<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="删除-文件夹-文件"><a href="#删除-文件夹-文件" class="headerlink" title="删除 文件夹/文件"></a>删除 文件夹/文件</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan"</span>, isDirectory: <span class="hljs-literal">true</span>)<br><span class="hljs-keyword">var</span> isDirectory: <span class="hljs-type">ObjCBool</span> <span class="hljs-operator">=</span> <span class="hljs-type">ObjCBool</span>(<span class="hljs-literal">false</span>)<br><span class="hljs-keyword">let</span> isExist <span class="hljs-operator">=</span> manager.fileExists(atPath: url.path, isDirectory: <span class="hljs-operator">&amp;</span>isDirectory)<br><span class="hljs-keyword">if</span> isExist {<br>  <span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">try</span> manager.removeItem(at: url) <span class="hljs-comment">// 删除文件</span><br>    <span class="hljs-comment">// try manager.removeItem(atPath: url.path) // 删除文件路径</span><br>  } <span class="hljs-keyword">catch</span> {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"removeItem error:<span class="hljs-subst">\(error)</span>"</span>)<br>  }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="清空文件夹"><a href="#清空文件夹" class="headerlink" title="清空文件夹"></a>清空文件夹</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">// 删除文件夹里的所有文件，而不删除文件夹</span><br><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan"</span>, isDirectory: <span class="hljs-literal">true</span>)<br><span class="hljs-comment">// 方法1：删除，再创建</span><br><span class="hljs-comment">// self.deleteFile(name)</span><br><span class="hljs-comment">// self.createFile(name)</span><br> <br><span class="hljs-comment">// 方法2：遍历文件删除</span><br><span class="hljs-keyword">let</span> files <span class="hljs-operator">=</span> manager.subpaths(atPath: url.path)<br><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> files <span class="hljs-operator">??</span> [] {<br>  <span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">try</span> manager.removeItem(atPath: url.path <span class="hljs-operator">+</span> <span class="hljs-string">"/<span class="hljs-subst">\(file)</span>"</span>) <span class="hljs-comment">// 需要拼接路径！！</span><br>  } <span class="hljs-keyword">catch</span> {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"remove item:<span class="hljs-subst">\(file)</span><span class="hljs-subst">\n</span> error:<span class="hljs-subst">\(error)</span>"</span>)<br>  }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="遍历文件夹"><a href="#遍历文件夹" class="headerlink" title="遍历文件夹"></a>遍历文件夹</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan"</span>, isDirectory: <span class="hljs-literal">true</span>)<br><span class="hljs-comment">// 1.1 浅遍历：只有 文件夹/文件 名</span><br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-keyword">let</span> contentsOfDirectory <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> manager.contentsOfDirectory(atPath: url.path)<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"contentsOfDirectory:<span class="hljs-subst">\(contentsOfDirectory)</span>"</span>)<br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"1.1 浅遍历 error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br><span class="hljs-comment">// 1.2 浅遍历：包含完整路径</span><br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-keyword">let</span> contentsOfDirectory <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> manager.contentsOfDirectory(at: url,<br>                                                            includingPropertiesForKeys: <span class="hljs-literal">nil</span>,<br>                                                            options: .skipsHiddenFiles)<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"skipsHiddenFiles:<span class="hljs-subst">\(contentsOfDirectory)</span>"</span>)<br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"1.2 浅遍历 error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br> <br><span class="hljs-comment">// 2.1 深度遍历：只有当前文件夹下的路径</span><br><span class="hljs-keyword">let</span> enumberatorAtPath <span class="hljs-operator">=</span> manager.enumerator(atPath: url.path)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"2.1 深度遍历：<span class="hljs-subst">\(enumberatorAtPath<span class="hljs-operator">?</span>.allObjects)</span>"</span>)<br><span class="hljs-comment">// 2.2 深度遍历：包含完整路径</span><br><span class="hljs-keyword">let</span> enumberatorAtURL <span class="hljs-operator">=</span> manager.enumerator(at: url,<br>                                          includingPropertiesForKeys: <span class="hljs-literal">nil</span>,<br>                                          options: .skipsHiddenFiles,<br>                                          errorHandler: <span class="hljs-literal">nil</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"2.2 深度遍历：<span class="hljs-subst">\(enumberatorAtURL<span class="hljs-operator">?</span>.allObjects)</span>"</span>)<br></code></pre></td></tr></tbody></table></figure><h2 id="文件写入数据"><a href="#文件写入数据" class="headerlink" title="文件写入数据"></a>文件写入数据</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan/test1.txt"</span>, isDirectory: <span class="hljs-literal">true</span>)<br><span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> string.data(using: .utf8, allowLossyConversion: <span class="hljs-literal">true</span>) <span class="hljs-keyword">else</span> {<br>  <span class="hljs-keyword">return</span><br>}<br><span class="hljs-comment">// 1.写在结尾</span><br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-keyword">let</span> writeHandler <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">FileHandle</span>(forWritingTo: url)<br>  writeHandler.seekToEndOfFile()<br>  writeHandler.write(data)<br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"writeHandler error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br><span class="hljs-comment">// 2.从第n个字符开始覆盖</span><br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-keyword">let</span> writeHandler <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">FileHandle</span>(forWritingTo: url)<br>  <span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">try</span> writeHandler.seek(toOffset: <span class="hljs-number">1</span>)<br>  } <span class="hljs-keyword">catch</span> {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"writeHandler.seek error:<span class="hljs-subst">\(error)</span>"</span>)<br>  }<br>  writeHandler.write(data)<br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"writeHandler error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br><span class="hljs-comment">// 3.只保留前n个字符</span><br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-keyword">let</span> writeHandler <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">FileHandle</span>(forWritingTo: url)<br>  <span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">try</span> writeHandler.truncate(atOffset: <span class="hljs-number">1</span>)<br>  } <span class="hljs-keyword">catch</span> {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"writeHandler.truncate error:<span class="hljs-subst">\(error)</span>"</span>)<br>  }<br>  writeHandler.write(data)<br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"writeHandler error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br><span class="hljs-comment">// 4.只保留前n个字符:(n超过原字符长度，则并接在结尾)</span><br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-keyword">let</span> writeHandler <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">FileHandle</span>(forWritingTo: url)<br>  writeHandler.truncateFile(atOffset: <span class="hljs-number">12</span>)<br>  writeHandler.write(data)<br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"writeHandler error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="读取文件内容"><a href="#读取文件内容" class="headerlink" title="读取文件内容"></a>读取文件内容</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan/test1.txt"</span>, isDirectory: <span class="hljs-literal">true</span>)<br><span class="hljs-comment">// 方法1:</span><br><span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> manager.contents(atPath: url.path) <span class="hljs-keyword">else</span> {<br>  <span class="hljs-keyword">return</span><br>}<br><span class="hljs-keyword">let</span> readString <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(data: data, encoding: .utf8)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"方法1：<span class="hljs-subst">\(readString <span class="hljs-operator">??</span> <span class="hljs-string">""</span>)</span>"</span>)<br><span class="hljs-comment">// 方法2:</span><br><span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> readHandler <span class="hljs-operator">=</span> <span class="hljs-type">FileHandle</span>(forReadingAtPath: url.path) <span class="hljs-keyword">else</span> {<br>  <span class="hljs-keyword">return</span><br>}<br><span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> data2: <span class="hljs-type">Data</span> <span class="hljs-operator">=</span> readHandler.readDataToEndOfFile() <span class="hljs-keyword">else</span> {<br>  <span class="hljs-keyword">return</span><br>}<br><span class="hljs-keyword">let</span> readString2 <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(data: data2, encoding: .utf8)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"方法2：<span class="hljs-subst">\(readString2 <span class="hljs-operator">??</span> <span class="hljs-string">""</span>)</span>"</span>)<br></code></pre></td></tr></tbody></table></figure><h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> file1 <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan/test1.txt"</span>)<br><span class="hljs-keyword">let</span> file2 <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(<span class="hljs-string">"moxiaoyan/test2.txt"</span>)<br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-comment">// try manager.copyItem(at: file1, to: file2) // 直接复制文件</span><br>  <span class="hljs-keyword">try</span> manager.copyItem(atPath: file1.path, toPath: file2.path) <span class="hljs-comment">// 复制文件内容</span><br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"copyItem error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(name, isDirectory: <span class="hljs-literal">true</span>)<br><span class="hljs-keyword">let</span> file1 <span class="hljs-operator">=</span> url.appendingPathComponent(name)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"文件1:<span class="hljs-subst">\(file1)</span>"</span>)<br><span class="hljs-keyword">let</span> file2 <span class="hljs-operator">=</span> url.appendingPathComponent(to <span class="hljs-operator">+</span> <span class="hljs-string">"/test1.txt"</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"文件2:<span class="hljs-subst">\(file2)</span>"</span>)<br><span class="hljs-keyword">do</span> {<br>  <span class="hljs-comment">// try manager.moveItem(atPath: file1.path, toPath: file2.path) // 直接拷贝文件</span><br>  <span class="hljs-keyword">try</span> manager.moveItem(at: file1, to: file2) <span class="hljs-comment">// 拷贝文件内容</span><br>} <span class="hljs-keyword">catch</span> {<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">"moveItem error:<span class="hljs-subst">\(error)</span>"</span>)<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="比较文件"><a href="#比较文件" class="headerlink" title="比较文件"></a>比较文件</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> file1 <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(name1)<br><span class="hljs-keyword">let</span> file2 <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.documentURL.appendingPathComponent(name2)<br><span class="hljs-comment">// 参数必须的是路径（相同字符串false）</span><br><span class="hljs-keyword">let</span> equal <span class="hljs-operator">=</span> manager.contentsEqual(atPath: file1.path, andPath: file2.path) <br><span class="hljs-built_in">print</span>(<span class="hljs-string">"file1:<span class="hljs-subst">\(file1)</span>"</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"file2:<span class="hljs-subst">\(file2)</span>"</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">"equal:<span class="hljs-subst">\(equal)</span>"</span>)<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
      <tag>file</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swift字符串截取摘录</title>
    <link href="/posts/16775.html"/>
    <url>/posts/16775.html</url>
    
    <content type="html"><![CDATA[<h1 id="Swift字符串截取摘录"><a href="#Swift字符串截取摘录" class="headerlink" title="Swift字符串截取摘录"></a>Swift字符串截取摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Swift%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%AA%E5%8F%96%E6%91%98%E5%BD%95/Swift%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%AA%E5%8F%96%E6%91%98%E5%BD%95.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swift 解决URL或参数中含有中文（Swift URL编码）</title>
    <link href="/posts/63894.html"/>
    <url>/posts/63894.html</url>
    
    <content type="html"><![CDATA[<h1 id="Swift-解决URL或参数中含有中文（Swift-URL编码）"><a href="#Swift-解决URL或参数中含有中文（Swift-URL编码）" class="headerlink" title="Swift 解决URL或参数中含有中文（Swift URL编码）"></a>Swift 解决URL或参数中含有中文（Swift URL编码）</h1><p>========================</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> encodeURLStr <span class="hljs-operator">=</span> urlString.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed)<br><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span>  <span class="hljs-type">URL</span>.<span class="hljs-keyword">init</span>(string: encodeURLStr)<br></code></pre></td></tr></tbody></table></figure><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">get</span>( <span class="hljs-keyword">_</span> <span class="hljs-params">url</span>: <span class="hljs-type">String</span>, <span class="hljs-params">parameters</span>: [<span class="hljs-params">String</span>: <span class="hljs-keyword">Any</span>] , <span class="hljs-params">completionHandler</span>: <span class="hljs-keyword">@escaping</span> (<span class="hljs-type">NSError</span>?, <span class="hljs-type">JSON</span>) -&gt; <span class="hljs-type">Void</span>)</span>  {<br><br>      <span class="hljs-keyword">var</span> urlStr <span class="hljs-operator">=</span> url<br>      <span class="hljs-keyword">var</span> flag <span class="hljs-operator">=</span> <span class="hljs-literal">true</span><br>      <span class="hljs-keyword">let</span> generalDelimitersToEncode <span class="hljs-operator">=</span> <span class="hljs-string">":#[]@"</span> <span class="hljs-comment">// does not include "?" or "/" due to RFC 3986 - Section 3.4</span><br>      <span class="hljs-keyword">let</span> subDelimitersToEncode <span class="hljs-operator">=</span> <span class="hljs-string">"!$&amp;'()*+,;="</span><br>      <span class="hljs-keyword">var</span> allowedCharacterSet <span class="hljs-operator">=</span> <span class="hljs-type">CharacterSet</span>.urlQueryAllowed<br>      allowedCharacterSet.remove(charactersIn: <span class="hljs-string">"<span class="hljs-subst">\(generalDelimitersToEncode)</span><span class="hljs-subst">\(subDelimitersToEncode)</span>"</span>)<br>      <span class="hljs-keyword">for</span> ( key , value) <span class="hljs-keyword">in</span> parameters {<br><br>         <span class="hljs-keyword">var</span> anyValue: <span class="hljs-keyword">Any</span> <span class="hljs-operator">=</span> value<br>         <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> value <span class="hljs-operator">=</span> value <span class="hljs-keyword">as?</span> <span class="hljs-type">String</span>{<br><br>            anyValue <span class="hljs-operator">=</span> value.addingPercentEncoding(withAllowedCharacters: allowedCharacterSet) <span class="hljs-operator">??</span> <span class="hljs-string">""</span><br>         }<br><br>         <span class="hljs-keyword">if</span> flag{<br>            flag <span class="hljs-operator">=</span> <span class="hljs-literal">false</span><br>            urlStr <span class="hljs-operator">+=</span> <span class="hljs-string">"?"</span> <span class="hljs-operator">+</span> key <span class="hljs-operator">+</span> <span class="hljs-string">"=<span class="hljs-subst">\(anyValue)</span>"</span><br>         }<span class="hljs-keyword">else</span>{<br>            urlStr <span class="hljs-operator">+=</span> <span class="hljs-string">"&amp;"</span> <span class="hljs-operator">+</span> key <span class="hljs-operator">+</span> <span class="hljs-string">"=<span class="hljs-subst">\(anyValue)</span>"</span><br>         }<br>      }<br>      <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> <span class="hljs-type">URL</span>.<span class="hljs-keyword">init</span>(string: urlStr){<br>         <span class="hljs-keyword">var</span> request <span class="hljs-operator">=</span> <span class="hljs-type">URLRequest</span>(url: url)<br>         request.cachePolicy <span class="hljs-operator">=</span> .reloadIgnoringLocalCacheData<br><br>         <span class="hljs-type">URLSession</span>.shared.dataTask(with: request, completionHandler: { (data, response, err) <span class="hljs-keyword">in</span><br><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> err <span class="hljs-operator">=</span> err{<br><br>               completionHandler(err <span class="hljs-keyword">as</span> <span class="hljs-type">NSError</span>, <span class="hljs-type">JSON</span>.null )<br>            }<span class="hljs-keyword">else</span>{<br><span class="hljs-comment">//               if let json = try? JSONSerialization.jsonObject(with: data!, options: [.allowFragments, .mutableContainers , .mutableLeaves]) as? [String: Any]  {</span><br>               <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> data {<br>                  <span class="hljs-keyword">let</span> json <span class="hljs-operator">=</span> <span class="hljs-type">JSON</span>.<span class="hljs-keyword">init</span>(data: data)<br>                  <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> code <span class="hljs-operator">=</span> json[<span class="hljs-string">"code"</span>].int,<br>                     <span class="hljs-keyword">let</span> msg <span class="hljs-operator">=</span> json[<span class="hljs-string">"msg"</span>].string <span class="hljs-keyword">else</span>{<br>                        completionHandler(<span class="hljs-type">NSError</span>(domain: <span class="hljs-string">""</span>, code: <span class="hljs-number">1</span>, userInfo: <span class="hljs-literal">nil</span>), <span class="hljs-type">JSON</span>.null)<br>                        <span class="hljs-keyword">return</span><br>                  }<br><br>                  <span class="hljs-keyword">if</span> code  <span class="hljs-operator">!=</span> <span class="hljs-number">10000</span> {<br><br>                     completionHandler(<span class="hljs-type">NSError</span>(domain: msg, code: code, userInfo: <span class="hljs-literal">nil</span>), <span class="hljs-type">JSON</span>.null )<br>                  }<span class="hljs-keyword">else</span>{<br><br>                     completionHandler(<span class="hljs-literal">nil</span>, json[<span class="hljs-string">"data"</span>])<br>                  }<br>               }<br>            }<br><br><br>         })<br>            .resume()<br>      }<br>   }<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
      <tag>network</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从网络下载文件到App</title>
    <link href="/posts/10334.html"/>
    <url>/posts/10334.html</url>
    
    <content type="html"><![CDATA[<h1 id="从网络下载文件到App"><a href="#从网络下载文件到App" class="headerlink" title="从网络下载文件到App"></a>从网络下载文件到App</h1><p>========================</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">downloadModels</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">path</span>: [<span class="hljs-type">String</span>], <span class="hljs-params">modelUrl</span>: <span class="hljs-type">String</span>)</span> {<br>    <span class="hljs-type">DispatchQueue</span>.global().async {<br>        <span class="hljs-keyword">for</span> str <span class="hljs-keyword">in</span> path {<br>            <span class="hljs-keyword">let</span> urlString <span class="hljs-operator">=</span> modelUrl <span class="hljs-operator">+</span> str<br>            <span class="hljs-keyword">let</span> encodeURLStr <span class="hljs-operator">=</span> urlString.addingPercentEncoding(withAllowedCharacters: .urlQueryAllowed)<br>            log(encodeURLStr)<br>            <span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span>  <span class="hljs-type">URL</span>.<span class="hljs-keyword">init</span>(string: encodeURLStr)<br>            log(url)<br>            <span class="hljs-keyword">let</span> request <span class="hljs-operator">=</span> <span class="hljs-type">URLRequest</span>(url: url<span class="hljs-operator">!</span>)<br>            <span class="hljs-keyword">let</span> downloadTask <span class="hljs-operator">=</span> <span class="hljs-type">URLSession</span>.shared.downloadTask(with: request,<br>                    completionHandler: { (location: <span class="hljs-type">URL</span>?, <span class="hljs-keyword">_</span>: <span class="hljs-type">URLResponse</span>?, <span class="hljs-keyword">_</span>: <span class="hljs-type">Error</span>?)<br>                    -&gt; <span class="hljs-type">Void</span> <span class="hljs-keyword">in</span><br><span class="hljs-comment">//                    let theUrl = NSHomeDirectory() + "/Documents/ThreeDModels" + str</span><br><span class="hljs-comment">//                    let endRang = theUrl.range(of: "/" + theUrl.lastPathComponent)</span><br><span class="hljs-comment">//                    let thePath = String(theUrl[..&lt;endRang!.lowerBound])</span><br>                    <span class="hljs-keyword">let</span> name <span class="hljs-operator">=</span> str.lastPathComponent.replacingOccurrences(of: (<span class="hljs-string">"."</span> <span class="hljs-operator">+</span> str.pathExtension), with: <span class="hljs-string">""</span>)<br>                    <span class="hljs-keyword">let</span> fileManager <span class="hljs-operator">=</span> <span class="hljs-type">FileManager</span>.default<br>                        <span class="hljs-keyword">let</span> urls: [<span class="hljs-type">URL</span>] <span class="hljs-operator">=</span> fileManager.urls(for: .documentDirectory, in: .userDomainMask)<br>                        <span class="hljs-keyword">let</span> documentURL <span class="hljs-operator">=</span> urls.first<span class="hljs-operator">!</span><br>                        <span class="hljs-keyword">let</span> endRang <span class="hljs-operator">=</span> str.range(of: <span class="hljs-string">"/"</span> <span class="hljs-operator">+</span> str.lastPathComponent)<br>                        <span class="hljs-keyword">let</span> documentName <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(str[<span class="hljs-operator">..&lt;</span>endRang<span class="hljs-operator">!</span>.lowerBound])<br>                        <span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> documentURL.appendingPathComponent(<span class="hljs-string">"threeDModels"</span> <span class="hljs-operator">+</span> documentName, isDirectory: <span class="hljs-literal">true</span>)<br>                        <span class="hljs-keyword">var</span> isDirectory: <span class="hljs-type">ObjCBool</span> <span class="hljs-operator">=</span> <span class="hljs-type">ObjCBool</span>(<span class="hljs-literal">false</span>)<br>                        <span class="hljs-keyword">let</span> isExist <span class="hljs-operator">=</span> fileManager.fileExists(atPath: url.path, isDirectory: <span class="hljs-operator">&amp;</span>isDirectory)<br>                        <span class="hljs-keyword">if</span> <span class="hljs-operator">!</span>isExist {<br>                          <span class="hljs-keyword">do</span> {<br>                            <span class="hljs-keyword">try</span> fileManager.createDirectory(at: url, withIntermediateDirectories: <span class="hljs-literal">true</span>, attributes: <span class="hljs-literal">nil</span>)<br>                          } <span class="hljs-keyword">catch</span> {<br>                            log(error)<br>                          }<br>                        }<br>                        <span class="hljs-keyword">let</span> filePath <span class="hljs-operator">=</span> url.path <span class="hljs-operator">+</span> <span class="hljs-string">"/"</span> <span class="hljs-operator">+</span> name <span class="hljs-operator">+</span> <span class="hljs-string">"."</span> <span class="hljs-operator">+</span> str.pathExtension<br>                        <span class="hljs-keyword">do</span> {<br>                            <span class="hljs-keyword">if</span> fileManager.fileExists(atPath: filePath ) {<br>                                <span class="hljs-keyword">try</span> fileManager.removeItem(atPath: filePath)<br>                            }<br>                            <span class="hljs-keyword">try</span> fileManager.moveItem(atPath: location<span class="hljs-operator">!</span>.path, toPath: filePath)<br>                        } <span class="hljs-keyword">catch</span> {<br>                            log(error)<br>                        }<br>                    })<br>            downloadTask.resume()<br>        }<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>network</tag>
      
      <tag>三维模型</tag>
      
      <tag>file</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JSON解析摘录</title>
    <link href="/posts/36625.html"/>
    <url>/posts/36625.html</url>
    
    <content type="html"><![CDATA[<h1 id="JSON解析摘录"><a href="#JSON解析摘录" class="headerlink" title="JSON解析摘录"></a>JSON解析摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210403JSON%E8%A7%A3%E6%9E%90%E6%91%98%E5%BD%95/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>JSON</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kingfisher简单使用</title>
    <link href="/posts/34152.html"/>
    <url>/posts/34152.html</url>
    
    <content type="html"><![CDATA[<h1 id="Kingfisher简单使用"><a href="#Kingfisher简单使用" class="headerlink" title="Kingfisher简单使用"></a>Kingfisher简单使用</h1><p>========================</p><h2 id="UIKit"><a href="#UIKit" class="headerlink" title="UIKit"></a>UIKit</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> url <span class="hljs-operator">=</span> dataShare.queryFromManyTable(with: modelName, from: [dataShare.cuturalRelicsIntroduction,<br>                                                                          dataShare.models3DIntroduction,<br>                                                                          dataShare.paintingModelsIntroduction])<span class="hljs-operator">?</span>.image<br>           objectImageView.kf.indicatorType <span class="hljs-operator">=</span> .activity<br>           objectImageView.kf.setImage(with: <span class="hljs-type">URL</span>(string: url))<br>           <span class="hljs-comment">// 设置超时时间</span><br>           <span class="hljs-keyword">let</span> downloader <span class="hljs-operator">=</span> <span class="hljs-type">KingfisherManager</span>.shared.downloader<br>           <span class="hljs-comment">// 超时时间（秒）</span><br>           downloader.downloadTimeout <span class="hljs-operator">=</span> <span class="hljs-number">50</span><br>           <br>           <span class="hljs-comment">// 获取缓存代销</span><br>           <span class="hljs-keyword">let</span> cache <span class="hljs-operator">=</span> <span class="hljs-type">KingfisherManager</span>.shared.cache<br>           <span class="hljs-comment">// 设置最大缓存为多少 100M  默认是无上限</span><br>           cache.memoryStorage.config.totalCostLimit <span class="hljs-operator">=</span> <span class="hljs-number">100</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span><br>           <span class="hljs-comment">// 设置保存时间 1天 默认5分钟</span><br>           cache.memoryStorage.config.expiration <span class="hljs-operator">=</span> <span class="hljs-type">StorageExpiration</span>.seconds(<span class="hljs-number">300</span>)<br>           cache.diskStorage.config.sizeLimit <span class="hljs-operator">=</span> <span class="hljs-number">100</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span> <span class="hljs-operator">*</span> <span class="hljs-number">1024</span><br>           cache.diskStorage.config.expiration <span class="hljs-operator">=</span> <span class="hljs-type">StorageExpiration</span>.days(<span class="hljs-number">7</span>)<br></code></pre></td></tr></tbody></table></figure><h2 id="SwiftUI"><a href="#SwiftUI" class="headerlink" title="SwiftUI"></a>SwiftUI</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">KFImage</span>(<span class="hljs-type">URL</span>(string: <span class="hljs-type">Images</span>.help.url))<br>    .diskCacheExpiration(.days(<span class="hljs-number">365</span>))<br>    .resizable()<br>    .aspectRatio(contentMode: .fit)<br>    .foregroundColor(.white)<br>    .frame(width: <span class="hljs-number">20</span>.fitCGWidth, height: <span class="hljs-number">20</span>.fitCGWidth, alignment: .center)<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swift高阶函数</title>
    <link href="/posts/22942.html"/>
    <url>/posts/22942.html</url>
    
    <content type="html"><![CDATA[<h1 id="Swift高阶函数"><a href="#Swift高阶函数" class="headerlink" title="Swift高阶函数"></a>Swift高阶函数</h1><p>========================</p><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><h4 id="map-1"><a href="#map-1" class="headerlink" title="map"></a>map</h4><p><code>map</code>对于原始集合里的每一个元素, 以一个变换后的元素替换之形成一个新的集合</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> results <span class="hljs-operator">=</span> [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>]<br><span class="hljs-keyword">let</span> allResults <span class="hljs-operator">=</span> results.map{ <span class="hljs-variable">$0</span>.map{ <span class="hljs-variable">$0</span> <span class="hljs-operator">*</span> <span class="hljs-number">10</span> } }<br><br><span class="hljs-built_in">print</span>(allResults)<br></code></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">[<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>, <span class="hljs-number">60</span>, <span class="hljs-number">70</span>, <span class="hljs-number">80</span>, <span class="hljs-number">90</span>]<br></code></pre></td></tr></tbody></table></figure><h4 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h4><p><code>flatMap</code>对于元素是集合的集合, 可以得到单级的集合</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> results <span class="hljs-operator">=</span> [[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>], [<span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>]]<br><span class="hljs-keyword">let</span> allResults <span class="hljs-operator">=</span> results.flatMap{ <span class="hljs-variable">$0</span>.map{ <span class="hljs-variable">$0</span> <span class="hljs-operator">*</span> <span class="hljs-number">10</span> } }<br><span class="hljs-keyword">let</span> passMarks <span class="hljs-operator">=</span> results.flatMap{ <span class="hljs-variable">$0</span>.filter{ <span class="hljs-variable">$0</span> <span class="hljs-operator">&gt;</span> <span class="hljs-number">5</span> } }<br><br><span class="hljs-built_in">print</span>(allResults)<br><span class="hljs-built_in">print</span>(passMarks)<br></code></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">[<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>, <span class="hljs-number">60</span>, <span class="hljs-number">70</span>, <span class="hljs-number">80</span>, <span class="hljs-number">90</span>]<br>[<span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>] <br></code></pre></td></tr></tbody></table></figure><h4 id="compactMap"><a href="#compactMap" class="headerlink" title="compactMap"></a>compactMap</h4><p><code>compactMap</code>过滤空值</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> keys: [<span class="hljs-type">String</span>?] <span class="hljs-operator">=</span> [<span class="hljs-string">"Zhangsan"</span>, <span class="hljs-literal">nil</span>, <span class="hljs-string">"Lisi"</span>, <span class="hljs-literal">nil</span>, <span class="hljs-string">"Wawngwu"</span>]<br><span class="hljs-keyword">let</span> validNames <span class="hljs-operator">=</span> keys.compactMap{ <span class="hljs-variable">$0</span> }<br><span class="hljs-built_in">print</span>(validNames)<br><br><span class="hljs-keyword">let</span> counts <span class="hljs-operator">=</span> keys.compactMap { <span class="hljs-variable">$0</span><span class="hljs-operator">?</span>.count }<br><span class="hljs-built_in">print</span>(counts)<br></code></pre></td></tr></tbody></table></figure><p>输出结果：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">[<span class="hljs-string">"Zhangsan"</span>, <span class="hljs-string">"Lisi"</span>, <span class="hljs-string">"Wawngwu"</span>]<br>[<span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>]<br></code></pre></td></tr></tbody></table></figure><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p><code>filter</code>对于原始集合里的每一个元素, 通过判定来将其丢弃或者放进新集合</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> numbers: [<span class="hljs-type">Int</span>] <span class="hljs-operator">=</span> [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>, <span class="hljs-number">60</span>, <span class="hljs-number">70</span>, <span class="hljs-number">80</span>, <span class="hljs-number">90</span>]<br><span class="hljs-built_in">print</span>(numbers.filter{ <span class="hljs-variable">$0</span> <span class="hljs-operator">&gt;</span> <span class="hljs-number">50</span>})<br></code></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">[<span class="hljs-number">60</span>, <span class="hljs-number">70</span>, <span class="hljs-number">80</span>, <span class="hljs-number">90</span>]<br></code></pre></td></tr></tbody></table></figure><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p><code>reduce</code>对于原始集合里的每一个元素, 作用与当前累积的结果上</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> numbers: [<span class="hljs-type">Int</span>] <span class="hljs-operator">=</span> [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>]<br><span class="hljs-built_in">print</span>(numbers.reduce(<span class="hljs-number">0</span>) { <span class="hljs-variable">$0</span> <span class="hljs-operator">+</span> <span class="hljs-variable">$1</span> })<br></code></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">25<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swift Self摘录</title>
    <link href="/posts/32945.html"/>
    <url>/posts/32945.html</url>
    
    <content type="html"><![CDATA[<h1 id="Swift-Self摘录"><a href="#Swift-Self摘录" class="headerlink" title="Swift Self摘录"></a>Swift Self摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210401SwiftSelf%E6%91%98%E5%BD%95/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swift Package摘录</title>
    <link href="/posts/50099.html"/>
    <url>/posts/50099.html</url>
    
    <content type="html"><![CDATA[<h1 id="Swift-Package摘录"><a href="#Swift-Package摘录" class="headerlink" title="Swift Package摘录"></a>Swift Package摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210401SwiftPackage%E6%91%98%E5%BD%95/SwiftPackage%E6%91%98%E5%BD%95.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swift函数举例</title>
    <link href="/posts/47366.html"/>
    <url>/posts/47366.html</url>
    
    <content type="html"><![CDATA[<h1 id="Swift函数举例"><a href="#Swift函数举例" class="headerlink" title="Swift函数举例"></a>Swift函数举例</h1><p>========================<br>这里<code>tate, Request, RequestID, Event</code>都是泛型，函数的返回值为闭包<code>(ObservableSchedulerContext&lt;State&gt;) -&gt; Observable&lt;Event&gt; </code>，闭包<code>(State) -&gt; [RequestID: Request]</code>的返回值是一个字典</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> State: State type of the system.</span><br><span class="hljs-comment"> Request: Subset of state used to control the feedback loop.</span><br><span class="hljs-comment"> For every uniquely identifiable request `effects` closure is invoked with the initial value of the request and future requests corresponding to the same identifier.</span><br><span class="hljs-comment"> Subsequent equal values of request are not emitted from the effects state parameter.</span><br><span class="hljs-comment"> - parameter requests: Requests to perform some effects.</span><br><span class="hljs-comment"> - parameter effects: The request effects.</span><br><span class="hljs-comment"> - parameter initial: Initial request.</span><br><span class="hljs-comment"> - parameter state: Latest request state.</span><br><span class="hljs-comment"> - returns: The feedback loop performing the effects.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">react</span>&lt;<span class="hljs-type">State</span>, <span class="hljs-type">Request</span>: <span class="hljs-type">Equatable</span>, <span class="hljs-type">RequestID</span>, <span class="hljs-type">Event</span>&gt;(</span><br><span class="hljs-function">    <span class="hljs-params">requests</span>: <span class="hljs-keyword">@escaping</span> (<span class="hljs-type">State</span>) -&gt; [<span class="hljs-params">RequestID</span>: <span class="hljs-type">Request</span>],</span><br><span class="hljs-function">    <span class="hljs-params">effects</span>: <span class="hljs-keyword">@escaping</span> (<span class="hljs-keyword">_</span> initial: <span class="hljs-type">Request</span>, <span class="hljs-keyword">_</span> state: <span class="hljs-type">Observable</span>&lt;<span class="hljs-type">Request</span>&gt;) -&gt; <span class="hljs-type">Observable</span>&lt;<span class="hljs-type">Event</span>&gt;</span><br><span class="hljs-function">)</span> -&gt; (<span class="hljs-type">ObservableSchedulerContext</span>&lt;<span class="hljs-type">State</span>&gt;) -&gt; <span class="hljs-type">Observable</span>&lt;<span class="hljs-type">Event</span>&gt; {<br>    <span class="hljs-keyword">return</span> { stateContext <span class="hljs-keyword">in</span><br>        <span class="hljs-type">Observable</span>.create { observer <span class="hljs-keyword">in</span><br>            <span class="hljs-keyword">let</span> state <span class="hljs-operator">=</span> <span class="hljs-type">RequestLifetimeTracking</span>&lt;<span class="hljs-type">Request</span>, <span class="hljs-type">RequestID</span>, <span class="hljs-type">Event</span>&gt;(<br>                effects: effects,<br>                scheduler: stateContext.scheduler,<br>                observer: observer<br>            )<br><br>            <span class="hljs-keyword">let</span> subscription <span class="hljs-operator">=</span> stateContext.source<br>                .map(requests)<br>                .subscribe { event <span class="hljs-keyword">in</span><br>                    <span class="hljs-keyword">switch</span> event {<br>                    <span class="hljs-keyword">case</span> .next(<span class="hljs-keyword">let</span> requests):<br>                        state.forwardRequests(requests)<br>                    <span class="hljs-keyword">case</span> .error(<span class="hljs-keyword">let</span> error):<br>                        observer.on(.error(error))<br>                    <span class="hljs-keyword">case</span> .completed:<br>                        observer.on(.completed)<br>                    }<br>                }<br><br>            <span class="hljs-keyword">return</span> <span class="hljs-type">Disposables</span>.create {<br>                state.dispose()<br>                subscription.dispose()<br>            }<br>        }<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><p>泛型WeakOwner继承AnyObject，这里where的条件限定函数的参数，与返回的闭包无关</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> Bi-directional binding of a system State to external state machine and events from it.</span><br><span class="hljs-comment"> Strongify owner.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">bind</span>&lt;<span class="hljs-type">State</span>, <span class="hljs-type">Event</span>, <span class="hljs-type">WeakOwner</span>&gt;(<span class="hljs-keyword">_</span> <span class="hljs-params">owner</span>: <span class="hljs-type">WeakOwner</span>, <span class="hljs-keyword">_</span> <span class="hljs-params">bindings</span>: <span class="hljs-keyword">@escaping</span> (<span class="hljs-type">WeakOwner</span>, <span class="hljs-type">ObservableSchedulerContext</span>&lt;<span class="hljs-type">State</span>&gt;) -&gt; (<span class="hljs-type">Bindings</span>&lt;<span class="hljs-type">Event</span>&gt;))</span><br>    -&gt; (<span class="hljs-type">ObservableSchedulerContext</span>&lt;<span class="hljs-type">State</span>&gt;) -&gt; <span class="hljs-type">Observable</span>&lt;<span class="hljs-type">Event</span>&gt; <span class="hljs-keyword">where</span> <span class="hljs-type">WeakOwner</span>: <span class="hljs-type">AnyObject</span> {<br>    <span class="hljs-keyword">return</span> bind(bindingsStrongify(owner, bindings))<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Codable实现JSON转对象、对象转JSON</title>
    <link href="/posts/17329.html"/>
    <url>/posts/17329.html</url>
    
    <content type="html"><![CDATA[<h1 id="使用Codable实现JSON转对象、对象转JSON"><a href="#使用Codable实现JSON转对象、对象转JSON" class="headerlink" title="使用Codable实现JSON转对象、对象转JSON"></a>使用Codable实现JSON转对象、对象转JSON</h1><p>========================</p><p>先上代码，这里我是在Swift playground中运行，方便演示</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> UIKit<br><span class="hljs-keyword">import</span> Foundation<br><br><span class="hljs-comment">// MARK: - Decode</span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">User</span>: <span class="hljs-title">Codable</span> </span>{ <span class="hljs-comment">// 基本类型组合默认遵守Codable协议</span><br>    <span class="hljs-keyword">var</span> name: <span class="hljs-type">String</span><br>    <span class="hljs-keyword">var</span> age: <span class="hljs-type">Int</span><br>}<br><br><span class="hljs-keyword">let</span> jsonStr <span class="hljs-operator">=</span> <span class="hljs-string">"""</span><br><span class="hljs-string">{</span><br><span class="hljs-string">    "name": "Ryan",</span><br><span class="hljs-string">    "age": 18</span><br><span class="hljs-string">}</span><br><span class="hljs-string">"""</span><br><br><span class="hljs-keyword">let</span> jsonData <span class="hljs-operator">=</span> jsonStr.data(using: .utf8)<span class="hljs-operator">!</span><br><br><span class="hljs-keyword">let</span> decoder <span class="hljs-operator">=</span> <span class="hljs-type">JSONDecoder</span>()<br><br><span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">let</span> userObj <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> decoder.decode(<span class="hljs-type">User</span>.<span class="hljs-keyword">self</span>, from: jsonData)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"userObj = <span class="hljs-subst">\(userObj)</span>"</span>)<br>} <span class="hljs-keyword">catch</span> {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"decode error"</span>)<br>}<br><br><span class="hljs-comment">// MARK: - Encode</span><br><br><span class="hljs-keyword">let</span> user <span class="hljs-operator">=</span> <span class="hljs-type">User</span>(name: <span class="hljs-string">"Lux"</span>, age: <span class="hljs-number">20</span>)<br><br><span class="hljs-keyword">let</span> encoder <span class="hljs-operator">=</span> <span class="hljs-type">JSONEncoder</span>()<br><br><span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> encoder.encode(user)<br>    <span class="hljs-keyword">let</span> jsonStr <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(data: data, encoding: .utf8)<span class="hljs-operator">!</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"jsonStr = <span class="hljs-subst">\(jsonStr)</span>"</span>)<br>} <span class="hljs-keyword">catch</span> {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"encode error"</span>)<br>}<br><br><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Introduction</span>: <span class="hljs-title">Identifiable</span>, <span class="hljs-title">Codable</span> </span>{<br>   <span class="hljs-keyword">var</span> id <span class="hljs-operator">=</span> <span class="hljs-type">UUID</span>()<br>   <span class="hljs-keyword">var</span> idForDataBase: <span class="hljs-type">Int64</span><br>   <span class="hljs-keyword">var</span> image: <span class="hljs-type">String</span><br>   <span class="hljs-keyword">var</span> title: <span class="hljs-type">String</span><br>   <span class="hljs-keyword">var</span> text: <span class="hljs-type">String</span><br>   <span class="hljs-comment">//这里的date原是想要展示日期，现在就用于当备注</span><br>   <span class="hljs-keyword">var</span> date: <span class="hljs-type">String</span><br>}<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">I18n</span> </span>{<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">func</span> <span class="hljs-title">localizedString</span>(<span class="hljs-title">_</span> <span class="hljs-title">key</span>: <span class="hljs-title">String</span>?) -&gt; <span class="hljs-title">String</span> </span>{<br>        <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> key <span class="hljs-operator">=</span> key <span class="hljs-keyword">else</span> { <span class="hljs-keyword">return</span> <span class="hljs-string">""</span> }<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">NSLocalizedString</span>(key, tableName: <span class="hljs-literal">nil</span>, bundle: <span class="hljs-type">Bundle</span>(for: <span class="hljs-type">I18n</span>.<span class="hljs-keyword">self</span>), value: <span class="hljs-string">""</span>, comment: <span class="hljs-string">""</span>)<br>    }<br>}<br><span class="hljs-keyword">let</span> culturalRelicsData <span class="hljs-operator">=</span> [<br>    <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063005</span>), image: <span class="hljs-string">"郎窑红釉穿带直口瓶"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"bottle"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>     <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063006</span>), image: <span class="hljs-string">"张成造款雕漆云纹盒"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"box"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>     <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063007</span>), image: <span class="hljs-string">"彩漆描金楼阁式自开门群仙祝寿御制钟"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"clock"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>     <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063008</span>), image: <span class="hljs-string">"乾隆款金瓯永固杯"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"cup"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>     <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063009</span>), image: <span class="hljs-string">"掐丝珐琅缠枝莲纹象耳炉"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"ear_furnace"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>    <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063010</span>), image: <span class="hljs-string">"青玉云龙纹炉"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"grain_furnace"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>    <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063011</span>), image: <span class="hljs-string">"清明上河图"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"painting"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>    <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063012</span>), image: <span class="hljs-string">"平复帖"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"placard"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>    <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063013</span>), image: <span class="hljs-string">"酗亚方尊"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"zun"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>)),<br>    <span class="hljs-type">Introduction</span>(idForDataBase: <span class="hljs-type">Int64</span>.<span class="hljs-keyword">init</span>(<span class="hljs-number">20210303063014</span>), image: <span class="hljs-string">"沈子蕃缂丝《梅鹊图》轴"</span>, title: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"magpie"</span>), text: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。"</span>), date: <span class="hljs-type">I18n</span>.localizedString(<span class="hljs-string">"故宫镇馆之宝"</span>))<br>]<br><span class="hljs-keyword">let</span> encoder2 <span class="hljs-operator">=</span> <span class="hljs-type">JSONEncoder</span>()<br><span class="hljs-keyword">do</span> {<br>    <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> encoder2.encode(culturalRelicsData)<br>    <span class="hljs-keyword">let</span> jsonStr <span class="hljs-operator">=</span> <span class="hljs-type">String</span>(data: data, encoding: .utf8)<span class="hljs-operator">!</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"jsonStr = <span class="hljs-subst">\(jsonStr)</span>"</span>)<br>} <span class="hljs-keyword">catch</span> {<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">"encode error"</span>)<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="JSON转对象"><a href="#JSON转对象" class="headerlink" title="JSON转对象"></a>JSON转对象</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E4%BD%BF%E7%94%A8Codable%E5%AE%9E%E7%8E%B0JSON%E8%BD%AC%E5%AF%B9%E8%B1%A1%E3%80%81%E5%AF%B9%E8%B1%A1%E8%BD%ACJSON/1.png"></p><h2 id="对象转JSON"><a href="#对象转JSON" class="headerlink" title="对象转JSON"></a>对象转JSON</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E4%BD%BF%E7%94%A8Codable%E5%AE%9E%E7%8E%B0JSON%E8%BD%AC%E5%AF%B9%E8%B1%A1%E3%80%81%E5%AF%B9%E8%B1%A1%E8%BD%ACJSON/2.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>软件测试</tag>
      
      <tag>JSON</tag>
      
      <tag>simulation</tag>
      
      <tag>data</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>借助github或其他网站的服务器模拟数据</title>
    <link href="/posts/16277.html"/>
    <url>/posts/16277.html</url>
    
    <content type="html"><![CDATA[<h1 id="借助github或其他网站的服务器模拟数据"><a href="#借助github或其他网站的服务器模拟数据" class="headerlink" title="借助github或其他网站的服务器模拟数据"></a>借助github或其他网站的服务器模拟数据</h1><p>========================</p><p>其实非常简单，假设要模拟JSON数据只要把json文件传到网站的服务器</p><h2 id="github举例"><a href="#github举例" class="headerlink" title="github举例"></a>github举例</h2><p>只需新建仓库或使用已有仓库或使用博客仓库等，把相应的json文件推送到远程仓库。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/1.png"><br>而后就可以直接对着该json进行网络请求<a href="https://raw.githubusercontent.com/adong666666/adong666666.github.io/master/runinto/CulturalRelicsData.json">https://raw.githubusercontent.com/adong666666/adong666666.github.io/master/runinto/CulturalRelicsData.json</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/2.png"></p><h2 id="博客举例"><a href="#博客举例" class="headerlink" title="博客举例"></a>博客举例</h2><p>把json文件放到博客源文件的目录或子目录下，这里我放在子目录runinto下<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/3.png"><br>图片或其他资源也都放在博客源文件的目录或子目录下，这里我放在子目录image下<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/4.png"><br>部署博客</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">zhangsaidong@zhangsaidongs-MacBook-Pro blog % hexo g &amp;&amp; hexo d<br>INFO  Validating config<br>WARN  Deprecated config detected: <span class="hljs-string">"external_link"</span> with a Boolean value is deprecated. See https://hexo.io/docs/configuration <span class="hljs-keyword">for</span> more details.<br>INFO  Start processing<br>INFO  Files loaded <span class="hljs-keyword">in</span> 594 ms<br>INFO  Deleted: json/CulturalRelicsIntroduction.json<br>INFO  Generated: runinto/Models3DData.json<br>INFO  Generated: runinto/CulturalRelicsData.json<br>INFO  Generated: runinto/PaintingRomanceData.json<br>INFO  Generated: runinto/StylePredictData.json<br>INFO  Generated: runinto/IntroductionData.json<br>INFO  Generated: runinto/PaintingModelsData.json<br>INFO  Generated: books/index.html<br>INFO  Generated: works/index.html<br>INFO  Generated: 2021/03/31/20210331Moya使用/index.html<br>INFO  Generated: 2021/03/31/20210331HandyJSON使用/index.html<br>INFO  Generated: 2021/03/31/20210331iOS开发之真机调试下查看本地沙盒数据摘录/index.html<br>INFO  Generated: 2021/03/20/20210320git发布tag/index.html<br>INFO  Generated: 2021/03/21/20210320Perfect部署到云服务器摘录/index.html<br>INFO  Generated: 2021/03/18/Mac命令行关闭端口/index.html<br>INFO  Generated: 2021/03/16/20210316Swift多线程/index.html<br>INFO  Generated: 2019/08/03/iOS-Localizable-strings/index.html<br>INFO  Generated: about/index/resume.html<br>INFO  Generated: archive/index.html<br>INFO  Generated: archives/2019/index.html<br>INFO  Generated: 2020/09/30/学术论文——基于ARKit技术的文物交互式相机App的设计与实现/index.html<br>INFO  Generated: 2019/07/06/hello-world/index.html<br>INFO  Generated: archives/2019/07/index.html<br>INFO  Generated: archives/page/2/index.html<br>INFO  Generated: archives/2020/index.html<br>INFO  Generated: archives/2019/08/index.html<br>INFO  Generated: archives/2021/03/index.html<br>INFO  Generated: archives/2020/09/index.html<br>INFO  Generated: archives/2021/index.html<br>INFO  Generated: archives/2021/page/2/index.html<br>INFO  Generated: archives/2021/03/page/2/index.html<br>INFO  Generated: tags/iOS/index.html<br>INFO  Generated: tags/多线程/index.html<br>INFO  Generated: tags/Swift/index.html<br>INFO  Generated: tags/博文/index.html<br>INFO  Generated: tags/framework/index.html<br>INFO  Generated: tags/server/index.html<br>INFO  Generated: index.html<br>INFO  Generated: tags/network/index.html<br>INFO  Generated: page/2/index.html<br>INFO  Generated: tags/软件测试/index.html<br>INFO  Generated: tags/论文/index.html<br>INFO  Generated: tags/git/index.html<br>INFO  Generated: tags/DataBase/index.html<br>INFO  Generated: about/index.html<br>INFO  Generated: 2021/03/22/20210322iOS之制作xcframework摘录/index.html<br>INFO  Generated: archives/index.html<br>INFO  Generated: tags/index.html<br>INFO  Generated: 2021/03/01/README/index.html<br>INFO  Generated: 2021/03/01/README.en/index.html<br>INFO  Generated: 2021/03/03/20210331SQLite.swift使用/index.html<br>INFO  Generated: 2021/03/27/20210327gitbook配置/index.html<br>INFO  Generated: 2021/03/20/Perfect部署到服务器工作记录/index.html<br>INFO  52 files generated <span class="hljs-keyword">in</span> 157 ms<br>INFO  Validating config<br>WARN  Deprecated config detected: <span class="hljs-string">"external_link"</span> with a Boolean value is deprecated. See https://hexo.io/docs/configuration <span class="hljs-keyword">for</span> more details.<br>INFO  Deploying: git<br>INFO  Clearing .deploy_git folder...<br>INFO  Copying files from public folder...<br>INFO  Copying files from extend <span class="hljs-built_in">dirs</span>...<br>[master c336836] Site updated: 2021-03-31 11:58:37<br> 53 files changed, 466 insertions(+), 1 deletion(-)<br> delete mode 100644 json/CulturalRelicsIntroduction.json<br> create mode 100644 runinto/CulturalRelicsData.json<br> create mode 100644 runinto/IntroductionData.json<br> create mode 100644 runinto/Models3DData.json<br> create mode 100644 runinto/PaintingModelsData.json<br> create mode 100644 runinto/PaintingRomanceData.json<br> create mode 100644 runinto/StylePredictData.json<br>Enumerating objects: 228, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (228/228), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 16 threads<br>Compressing objects: 100% (84/84), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (123/123), 28.58 KiB | 2.86 MiB/s, <span class="hljs-keyword">done</span>.<br>Total 123 (delta 55), reused 0 (delta 0)<br>remote: Resolving deltas: 100% (55/55), completed with 38 <span class="hljs-built_in">local</span> objects.<br>To https://github.com/adong666666/adong666666.github.io.git<br>   03af415..c336836  HEAD -&gt; master<br>Branch <span class="hljs-string">'master'</span> <span class="hljs-built_in">set</span> up to track remote branch <span class="hljs-string">'master'</span> from <span class="hljs-string">'https://github.com/adong666666/adong666666.github.io.git'</span>.<br>INFO  Deploy <span class="hljs-keyword">done</span>: git<br></code></pre></td></tr></tbody></table></figure><p>将博客部署之后，就可以用对应url进行网络请求，如这里使用的是<a href="https://zsd.name/runinto/IntroductionData.json">https://zsd.name/runinto/IntroductionData.json</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/5.png"><br>图片资源也可以拿到，如<a href="https://zsd.name/images/xinyi.jpg">https://zsd.name/images/xinyi.jpg</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/6.png"><br>这便相当于有个现成的模拟服务器，各种软件开发，这样模拟数据是不是很轻松！</p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>server</tag>
      
      <tag>network</tag>
      
      <tag>软件测试</tag>
      
      <tag>JSON</tag>
      
      <tag>simulation</tag>
      
      <tag>data</tag>
      
      <tag>github</tag>
      
      <tag>Web</tag>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HandyJSON使用</title>
    <link href="/posts/47851.html"/>
    <url>/posts/47851.html</url>
    
    <content type="html"><![CDATA[<h1 id="HandyJSON使用"><a href="#HandyJSON使用" class="headerlink" title="HandyJSON使用"></a>HandyJSON使用</h1><p>========================<br>我觉得看这代码就知道怎么用了，这个大都配合SwiftyJSON使用。</p><h2 id="模型示例"><a href="#模型示例" class="headerlink" title="模型示例"></a>模型示例</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> SwiftUI<br><span class="hljs-keyword">import</span> Foundation<br><span class="hljs-keyword">import</span> ObjectMapper<br><span class="hljs-keyword">import</span> Then<br><span class="hljs-keyword">import</span> RxSwift<br><span class="hljs-keyword">import</span> RxCocoa<br><span class="hljs-keyword">import</span> HandyJSON<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Introduction</span>: <span class="hljs-title">Identifiable</span>, <span class="hljs-title">Decodable</span>, <span class="hljs-title">Mappable</span>, <span class="hljs-title">HandyJSON</span> </span>{<br>    <span class="hljs-function"><span class="hljs-keyword">init</span>()</span> {<br>    }<br>    <span class="hljs-function"><span class="hljs-keyword">init?</span>(<span class="hljs-params">map</span>: <span class="hljs-type">Map</span>)</span> {<br>    }<br>    <span class="hljs-keyword">var</span> id <span class="hljs-operator">=</span> <span class="hljs-type">UUID</span>()<br>    <span class="hljs-keyword">var</span> idForDataBase: <span class="hljs-type">Int64</span> <span class="hljs-operator">=</span> <span class="hljs-type">Int64</span>()<br>    <span class="hljs-keyword">var</span> image: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-type">String</span>()<br>    <span class="hljs-keyword">var</span> title: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-type">String</span>()<br>    <span class="hljs-keyword">var</span> text: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-type">String</span>()<br>    <span class="hljs-comment">//这里的date原是想要展示日期，现在就用于当备注</span><br>    <span class="hljs-keyword">var</span> date: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-type">String</span>()<br>    <span class="hljs-function"><span class="hljs-keyword">init</span>(<span class="hljs-params">idForDataBase</span>: <span class="hljs-type">Int64</span>, <span class="hljs-params">image</span>: <span class="hljs-type">String</span>, <span class="hljs-params">title</span>: <span class="hljs-type">String</span>, <span class="hljs-params">text</span>: <span class="hljs-type">String</span>, <span class="hljs-params">date</span>: <span class="hljs-type">String</span>)</span> {<br>        <span class="hljs-keyword">self</span>.idForDataBase <span class="hljs-operator">=</span> idForDataBase<br>        <span class="hljs-keyword">self</span>.image <span class="hljs-operator">=</span> image<br>        <span class="hljs-keyword">self</span>.title <span class="hljs-operator">=</span> title<br>        <span class="hljs-keyword">self</span>.text <span class="hljs-operator">=</span> text<br>        <span class="hljs-keyword">self</span>.date <span class="hljs-operator">=</span> date<br>    }<br>    <span class="hljs-keyword">mutating</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">mapping</span>(<span class="hljs-params">map</span>: <span class="hljs-type">Map</span>)</span> {<br>        id <span class="hljs-operator">&lt;-</span> map[<span class="hljs-string">"id"</span>]<br>        idForDataBase <span class="hljs-operator">&lt;-</span> map[<span class="hljs-string">"idForDataBase"</span>]<br>        image <span class="hljs-operator">&lt;-</span> map[<span class="hljs-string">"image"</span>]<br>        title <span class="hljs-operator">&lt;-</span> map[<span class="hljs-string">"title"</span>]<br>        text <span class="hljs-operator">&lt;-</span> map[<span class="hljs-string">"text"</span>]<br>        date <span class="hljs-operator">&lt;-</span> map[<span class="hljs-string">"date"</span>]<br>    }<br>}<br><br></code></pre></td></tr></tbody></table></figure><p>//解析的话，只遵循HandyJSON协议即可，如下，这样就可以使用了：</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> Foundation<br><span class="hljs-keyword">import</span> HandyJSON<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Introduction</span>: <span class="hljs-title">HandyJSON</span> </span>{<br>    <span class="hljs-keyword">var</span> idForDataBase <span class="hljs-operator">=</span> <span class="hljs-type">Int64</span>()<br>    <span class="hljs-keyword">var</span> image: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-type">String</span>()<br>    <span class="hljs-keyword">var</span> title: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-type">String</span>()<br>    <span class="hljs-keyword">var</span> text: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-type">String</span>()<br>    <span class="hljs-keyword">var</span> date: <span class="hljs-type">String</span> <span class="hljs-operator">=</span> <span class="hljs-type">String</span>()<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用，这里主要是<code>JSONDeserializer&lt;Introduction&gt;.deserializeModelArrayFrom(json: culturalRelicsData.description)</code>使用了HandyJSON，不要太轻松。</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  NetworkTool.swift</span><br><span class="hljs-comment">//  RunInto</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东（手机：15674119605） on 2021/3/30.</span><br><span class="hljs-comment">//  Copyright © 2021 adong666666. All rights reserved.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//swiftlint:disable void_return</span><br><span class="hljs-keyword">import</span> Foundation<br><span class="hljs-keyword">import</span> Alamofire<br><span class="hljs-keyword">import</span> SwiftyJSON<br><span class="hljs-keyword">import</span> HandyJSON<br><br><span class="hljs-class"><span class="hljs-keyword">protocol</span> <span class="hljs-title">NetworkToolProtocol</span> </span>{<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">loadCulturalRelicsData</span>(<span class="hljs-params">input</span>: <span class="hljs-type">IntroductionAPI</span>, <span class="hljs-params">completionHandler</span>: <span class="hljs-keyword">@escaping</span> ([<span class="hljs-type">Introduction</span>?]) -&gt; ())</span><br>}<br><br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">NetworkToolProtocol</span> </span>{<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">loadCulturalRelicsData</span>(<span class="hljs-params">input</span>: <span class="hljs-type">IntroductionAPI</span>, <span class="hljs-params">completionHandler</span>: <span class="hljs-keyword">@escaping</span> ([<span class="hljs-type">Introduction</span>?]) -&gt; ())</span> {<br>        <span class="hljs-comment">//        AF.request(culturalRelicsDataUrl, method: .get, parameters: [:]).responseJSON(completionHandler: { (response) in</span><br>        <span class="hljs-comment">//            let value = response.value</span><br>        <span class="hljs-comment">//            let json = JSON(value as Any)</span><br>        <span class="hljs-comment">//            log(json)</span><br>        <span class="hljs-comment">//        })</span><br>        introductionPovider.request(input) { (result) <span class="hljs-keyword">in</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">case</span> <span class="hljs-keyword">let</span> .success(response) <span class="hljs-operator">=</span> result {<br>                <span class="hljs-comment">//解析数据</span><br>                <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> <span class="hljs-keyword">try?</span> response.mapJSON()<br>                <span class="hljs-keyword">let</span> json <span class="hljs-operator">=</span> <span class="hljs-type">JSON</span>(data<span class="hljs-operator">!</span>)<br>                <span class="hljs-keyword">let</span> culturalRelicsData <span class="hljs-operator">=</span> json[<span class="hljs-string">"data"</span>][<span class="hljs-string">"culturalRelicsData"</span>]<br>                <span class="hljs-comment">//log(json)</span><br>                <span class="hljs-comment">//log(culturalRelicsData)</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> mappedObject <span class="hljs-operator">=</span> <span class="hljs-type">JSONDeserializer</span>&lt;<span class="hljs-type">Introduction</span>&gt;.deserializeModelArrayFrom(json: culturalRelicsData.description) {<br>                    <span class="hljs-comment">//log(mappedObject)</span><br>                    <span class="hljs-comment">//log(mappedObject.count)</span><br>                    completionHandler(mappedObject)<br>                }<br>            }<br>        }<br>    }<br>}<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">NetworkTool</span>: <span class="hljs-title">NetworkToolProtocol</span> </span>{}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>network</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Moya使用</title>
    <link href="/posts/13900.html"/>
    <url>/posts/13900.html</url>
    
    <content type="html"><![CDATA[<h1 id="Moya使用"><a href="#Moya使用" class="headerlink" title="Moya使用"></a>Moya使用</h1><p>========================<br>我觉得看这代码就知道怎么用了，其实就是一个整理。</p><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  IntroductionAPI.swift</span><br><span class="hljs-comment">//  RunInto</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东（手机：15674119605） on 2021/3/30.</span><br><span class="hljs-comment">//  Copyright © 2021 adong666666. All rights reserved.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// swiftlint:disable identifier_name</span><br><span class="hljs-keyword">import</span> Foundation<br><span class="hljs-keyword">import</span> Moya<br><span class="hljs-keyword">import</span> HandyJSON<br><br><span class="hljs-keyword">let</span> ip <span class="hljs-operator">=</span> <span class="hljs-string">"http://47.119.162.99"</span><br><br><span class="hljs-keyword">let</span> culturalRelicsDataUrl <span class="hljs-operator">=</span> ip <span class="hljs-operator">+</span> <span class="hljs-string">"/runinto/culturalRelicsData"</span><br><span class="hljs-keyword">let</span> models3DDataUrl <span class="hljs-operator">=</span> ip <span class="hljs-operator">+</span>  <span class="hljs-string">"/runinto/models3DData"</span><br><span class="hljs-keyword">let</span> introductionDataUrl <span class="hljs-operator">=</span> ip <span class="hljs-operator">+</span> <span class="hljs-string">"/runinto/introductionData"</span><br><span class="hljs-keyword">let</span> paintingModeslDataUrl <span class="hljs-operator">=</span> ip <span class="hljs-operator">+</span> <span class="hljs-string">"/runinto/paintingModelsData"</span><br><span class="hljs-keyword">let</span> paintinggRomanceDataUrl <span class="hljs-operator">=</span> ip <span class="hljs-operator">+</span> <span class="hljs-string">"/runinto/paintingRomanceData"</span><br><span class="hljs-keyword">let</span> stylePredictDataUrl <span class="hljs-operator">=</span> ip <span class="hljs-operator">+</span> <span class="hljs-string">"/runinto/stylePredictData"</span><br><span class="hljs-comment">/// 介绍接口</span><br><span class="hljs-keyword">let</span> introductionPovider <span class="hljs-operator">=</span> <span class="hljs-type">MoyaProvider</span>&lt;<span class="hljs-type">IntroductionAPI</span>&gt;()<br><br><span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">IntroductionAPI</span> </span>{<br>    <span class="hljs-keyword">case</span> culturalRelicsData<br>    <span class="hljs-keyword">case</span> models3DData<br>    <span class="hljs-keyword">case</span> introductionData<br>    <span class="hljs-keyword">case</span> paintingModeslData<br>    <span class="hljs-keyword">case</span> paintinggRomanceData<br>    <span class="hljs-keyword">case</span> stylePredictData<br>}<br><br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">IntroductionAPI</span>: <span class="hljs-title">TargetType</span> </span>{<br>    <span class="hljs-comment">//服务器地址</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">var</span> baseURL: <span class="hljs-type">URL</span> {<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">URL</span>(string: ip)<span class="hljs-operator">!</span><br>    }<br>    <br>    <span class="hljs-keyword">var</span> path: <span class="hljs-type">String</span> {<br>        <span class="hljs-keyword">switch</span> <span class="hljs-keyword">self</span> {<br>        <span class="hljs-keyword">case</span> .culturalRelicsData:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"/runinto/culturalRelicsData"</span><br>        <span class="hljs-keyword">case</span> .models3DData:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"/runinto/models3DData"</span><br>        <span class="hljs-keyword">case</span> .introductionData:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"/runinto/introductionData"</span><br>        <span class="hljs-keyword">case</span> .paintingModeslData:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"/runinto/paintingModelsData"</span><br>        <span class="hljs-keyword">case</span> .paintinggRomanceData:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"/runinto/paintingRomanceData"</span><br>        <span class="hljs-keyword">case</span> .stylePredictData:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"/runinto/stylePredictData"</span><br>        }<br>    }<br>    <br>    <span class="hljs-keyword">var</span> method: <span class="hljs-type">Moya</span>.<span class="hljs-type">Method</span> { <span class="hljs-keyword">return</span> .get }<br>    <span class="hljs-keyword">var</span> task: <span class="hljs-type">Task</span> {<br>        <span class="hljs-keyword">let</span> parameters: [<span class="hljs-type">String</span>: <span class="hljs-keyword">Any</span>] <span class="hljs-operator">=</span> [:]<br>        <span class="hljs-keyword">return</span> .requestParameters(parameters: parameters, encoding: <span class="hljs-type">URLEncoding</span>.default)<br>    }<br>    <br>    <span class="hljs-keyword">var</span> sampleData: <span class="hljs-type">Data</span> { <span class="hljs-keyword">return</span> <span class="hljs-string">""</span>.data(using: .utf8)<span class="hljs-operator">!</span>}<br>    <span class="hljs-keyword">var</span> headers: [<span class="hljs-type">String</span>: <span class="hljs-type">String</span>]<span class="hljs-operator">?</span> { <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span> }<br>}<br><br><br></code></pre></td></tr></tbody></table></figure><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用，<code>mapJSON()</code>也是Moya里的函数。<code>JSON()</code>则是SwiftyJSON里的常用函数</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  NetworkTool.swift</span><br><span class="hljs-comment">//  RunInto</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东（手机：15674119605） on 2021/3/30.</span><br><span class="hljs-comment">//  Copyright © 2021 adong666666. All rights reserved.</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//swiftlint:disable void_return</span><br><span class="hljs-keyword">import</span> Foundation<br><span class="hljs-keyword">import</span> Alamofire<br><span class="hljs-keyword">import</span> SwiftyJSON<br><span class="hljs-keyword">import</span> HandyJSON<br><br><span class="hljs-class"><span class="hljs-keyword">protocol</span> <span class="hljs-title">NetworkToolProtocol</span> </span>{<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">loadCulturalRelicsData</span>(<span class="hljs-params">input</span>: <span class="hljs-type">IntroductionAPI</span>, <span class="hljs-params">completionHandler</span>: <span class="hljs-keyword">@escaping</span> ([<span class="hljs-type">Introduction</span>?]) -&gt; ())</span><br>}<br><br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">NetworkToolProtocol</span> </span>{<br>    <span class="hljs-keyword">static</span> <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">loadCulturalRelicsData</span>(<span class="hljs-params">input</span>: <span class="hljs-type">IntroductionAPI</span>, <span class="hljs-params">completionHandler</span>: <span class="hljs-keyword">@escaping</span> ([<span class="hljs-type">Introduction</span>?]) -&gt; ())</span> {<br>        <span class="hljs-comment">//        AF.request(culturalRelicsDataUrl, method: .get, parameters: [:]).responseJSON(completionHandler: { (response) in</span><br>        <span class="hljs-comment">//            let value = response.value</span><br>        <span class="hljs-comment">//            let json = JSON(value as Any)</span><br>        <span class="hljs-comment">//            log(json)</span><br>        <span class="hljs-comment">//        })</span><br>        introductionPovider.request(input) { (result) <span class="hljs-keyword">in</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">case</span> <span class="hljs-keyword">let</span> .success(response) <span class="hljs-operator">=</span> result {<br>                <span class="hljs-comment">//解析数据</span><br>                <span class="hljs-keyword">let</span> data <span class="hljs-operator">=</span> <span class="hljs-keyword">try?</span> response.mapJSON()<br>                <span class="hljs-keyword">let</span> json <span class="hljs-operator">=</span> <span class="hljs-type">JSON</span>(data<span class="hljs-operator">!</span>)<br>                <span class="hljs-keyword">let</span> culturalRelicsData <span class="hljs-operator">=</span> json[<span class="hljs-string">"data"</span>][<span class="hljs-string">"culturalRelicsData"</span>]<br>                <span class="hljs-comment">//log(json)</span><br>                <span class="hljs-comment">//log(culturalRelicsData)</span><br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> mappedObject <span class="hljs-operator">=</span> <span class="hljs-type">JSONDeserializer</span>&lt;<span class="hljs-type">Introduction</span>&gt;.deserializeModelArrayFrom(json: culturalRelicsData.description) {<br>                    <span class="hljs-comment">//log(mappedObject)</span><br>                    <span class="hljs-comment">//log(mappedObject.count)</span><br>                    completionHandler(mappedObject)<br>                }<br>            }<br>        }<br>    }<br>}<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">NetworkTool</span>: <span class="hljs-title">NetworkToolProtocol</span> </span>{}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>network</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iOS开发之真机和模拟器查看本地沙盒数据摘录</title>
    <link href="/posts/1671.html"/>
    <url>/posts/1671.html</url>
    
    <content type="html"><![CDATA[<h1 id="iOS开发之真机和模拟器查看本地沙盒数据摘录"><a href="#iOS开发之真机和模拟器查看本地沙盒数据摘录" class="headerlink" title="iOS开发之真机和模拟器查看本地沙盒数据摘录"></a>iOS开发之真机和模拟器查看本地沙盒数据摘录</h1><p>========================</p><p>我主要是想看看真机下的数据库文件。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E5%92%8C%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE%E6%91%98%E5%BD%95/iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E4%B8%8B%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E5%92%8C%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE%E6%91%98%E5%BD%95/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>软件测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gitbook配置</title>
    <link href="/posts/13006.html"/>
    <url>/posts/13006.html</url>
    
    <content type="html"><![CDATA[<h1 id="gitbook配置"><a href="#gitbook配置" class="headerlink" title="gitbook配置"></a>gitbook配置</h1><p>========================</p><p>首先请看我配置的gitbook，这里是搬了一个RxSwift的中文教程过来。</p><h2 id="gitbook网址：https-3440217568-gitbook-io-rxswift"><a href="#gitbook网址：https-3440217568-gitbook-io-rxswift" class="headerlink" title="gitbook网址：https://3440217568.gitbook.io/rxswift/"></a>gitbook网址：<a href="https://3440217568.gitbook.io/rxswift/">https://3440217568.gitbook.io/rxswift/</a></h2><h2 id="使用的教程"><a href="#使用的教程" class="headerlink" title="使用的教程"></a>使用的教程</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/1.png"></p><h2 id="解决“-cb-apply不是函数”错误"><a href="#解决“-cb-apply不是函数”错误" class="headerlink" title="解决“ cb.apply不是函数”错误"></a>解决“ cb.apply不是函数”错误</h2><p>在安装gitbook时，由于mac上的node版本较新，出现了bug，根据下面的文章，我注释了三行代码，解决了这个问题。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/2.png"></p><h2 id="为gitbook配置github仓库"><a href="#为gitbook配置github仓库" class="headerlink" title="为gitbook配置github仓库"></a>为gitbook配置github仓库</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/4.png"></p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>我的域名之前绑定了博客，再绑定这个gitbook估计又得折腾一阵了，所以我暂时先用这个网址<a href="https://3440217568.gitbook.io/rxswift/">https://3440217568.gitbook.io/rxswift/</a>，其实我觉得不一定非得自定义域名。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/5.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/6.png"></p><h2 id="成果图"><a href="#成果图" class="headerlink" title="成果图"></a>成果图</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/7.png"></p><h2 id="工作记录"><a href="#工作记录" class="headerlink" title="工作记录"></a>工作记录</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">Last login: Fri Mar 26 11:38:08 on ttys002<br>zhangsaidong@zhangsaidongs-MacBook-Pro ~ % gitbook -V<br>CLI version: 2.3.2<br>Installing GitBook 3.2.3<br>  SOLINK_MODULE(target) Release/.node<br>  CXX(target) Release/obj.target/fse/fsevents.o<br>  SOLINK_MODULE(target) Release/fse.node<br>  SOLINK_MODULE(target) Release/.node<br>  CXX(target) Release/obj.target/fse/fsevents.o<br>  SOLINK_MODULE(target) Release/fse.node<br>/usr/<span class="hljs-built_in">local</span>/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:287<br>      <span class="hljs-keyword">if</span> (cb) cb.apply(this, arguments)<br>                 ^<br><br>TypeError: cb.apply is not a <span class="hljs-keyword">function</span><br>    at /usr/<span class="hljs-built_in">local</span>/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:287:18<br>    at FSReqCallback.oncomplete (fs.js:184:5)<br>zhangsaidong@zhangsaidongs-MacBook-Pro ~ % open /usr/<span class="hljs-built_in">local</span>/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js<br>zhangsaidong@zhangsaidongs-MacBook-Pro ~ % gitbook -V<br>CLI version: 2.3.2<br>Installing GitBook 3.2.3<br>  SOLINK_MODULE(target) Release/.node<br>  CXX(target) Release/obj.target/fse/fsevents.o<br>  SOLINK_MODULE(target) Release/fse.node<br>  SOLINK_MODULE(target) Release/.node<br>  CXX(target) Release/obj.target/fse/fsevents.o<br>  SOLINK_MODULE(target) Release/fse.node<br>gitbook@3.2.3 ../../var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/tmp-84437JZNGqeaPKI2p/node_modules/gitbook<br>├── escape-html@1.0.3<br>├── escape-string-regexp@1.0.5<br>├── destroy@1.0.4<br>├── ignore@3.1.2<br>├── bash-color@0.0.4<br>├── gitbook-plugin-livereload@0.0.1<br>├── graceful-fs@4.1.4<br>├── nunjucks-do@1.0.0<br>├── cp@0.2.0<br>├── github-slugid@1.0.1<br>├── direction@0.1.5<br>├── q@1.4.1<br>├── spawn-cmd@0.0.2<br>├── gitbook-plugin-fontsettings@2.0.0<br>├── open@0.0.5<br>├── is@3.3.0<br>├── object-path@0.9.2<br>├── extend@3.0.2<br>├── json-schema-defaults@0.1.1<br>├── gitbook-plugin-search@2.2.1<br>├── jsonschema@1.1.0<br>├── crc@3.4.0<br>├── semver@5.1.0<br>├── urijs@1.18.0<br>├── immutable@3.8.2<br>├── front-matter@2.3.0<br>├── omit-keys@0.1.0 (isobject@0.2.0, array-difference@0.0.1)<br>├── error@7.0.2 (xtend@4.0.2, string-template@0.2.1)<br>├── npmi@2.0.1 (semver@4.3.6)<br>├── tmp@0.0.28 (os-tmpdir@1.0.2)<br>├── send@0.13.2 (fresh@0.3.0, etag@1.7.0, range-parser@1.0.3, statuses@1.2.1, ms@0.7.1, depd@1.1.2, mime@1.3.4, debug@2.2.0, http-errors@1.3.1, on-finished@2.3.0)<br>├── mkdirp@0.5.1 (minimist@0.0.8)<br>├── dom-serializer@0.1.0 (domelementtype@1.1.3, entities@1.1.2)<br>├── resolve@1.1.7<br>├── rmdir@1.2.0 (node.flow@1.2.3)<br>├── fresh-require@1.0.3 (is-require@0.0.1, shallow-copy@0.0.1, sleuth@0.1.1, astw@1.3.0, through2@0.6.5, escodegen@1.14.3, acorn@0.9.0)<br>├── cpr@1.1.1 (rimraf@2.4.5)<br>├── js-yaml@3.14.1 (esprima@4.0.1, argparse@1.0.10)<br>├── gitbook-plugin-theme-default@1.0.7<br>├── tiny-lr@0.2.1 (parseurl@1.3.3, livereload-js@2.4.0, qs@5.1.0, debug@2.2.0, body-parser@1.14.2, faye-websocket@0.10.0)<br>├── gitbook-plugin-lunr@1.2.0 (html-entities@1.2.0, lunr@0.5.12)<br>├── chokidar@1.5.0 (async-each@1.0.3, path-is-absolute@1.0.1, inherits@2.0.4, glob-parent@2.0.0, is-glob@2.0.1, is-binary-path@1.0.1, anymatch@1.3.2, fsevents@1.2.13, readdirp@2.2.1)<br>├── gitbook-plugin-highlight@2.0.2 (highlight.js@9.2.0)<br>├── moment@2.13.0<br>├── read-installed@4.0.3 (debuglog@1.0.1, util-extend@1.0.3, slide@1.1.6, readdir-scoped-modules@1.1.0, read-package-json@2.1.2)<br>├── gitbook-plugin-sharing@1.0.2 (lodash@3.10.1)<br>├── nunjucks@2.5.2 (asap@2.0.6, yargs@3.32.0, chokidar@1.7.0)<br>├── i18n-t@1.0.1 (lodash@4.17.21)<br>├── cheerio@0.20.0 (entities@1.1.2, css-select@1.2.0, htmlparser2@3.8.3, jsdom@7.2.2, lodash@4.17.21)<br>├── gitbook-asciidoc@1.2.2 (gitbook-html@1.3.3, asciidoctor.js@1.5.5-1, lodash@4.17.21)<br>├── gitbook-markdown@1.3.2 (kramed-text-renderer@0.2.1, gitbook-html@1.3.3, kramed@0.5.6, lodash@4.17.21)<br>├── request@2.72.0 (tunnel-agent@0.4.3, aws-sign2@0.6.0, forever-agent@0.6.1, oauth-sign@0.8.2, caseless@0.11.0, is-typedarray@1.0.0, stringstream@0.0.6, aws4@1.11.0, isstream@0.1.2, json-stringify-safe@5.0.1, tough-cookie@2.2.2, node-uuid@1.4.8, qs@6.1.2, combined-stream@1.0.8, mime-types@2.1.29, bl@1.1.2, hawk@3.1.3, har-validator@2.0.6, http-signature@1.1.1, form-data@1.0.1)<br>├── juice@2.0.0 (deep-extend@0.4.2, slick@1.12.2, batch@0.5.3, cssom@0.3.1, commander@2.9.0, cross-spawn-async@2.2.5, web-resource-inliner@2.0.0)<br>└── npm@3.9.2<br>GitBook version: 3.2.3<br>zhangsaidong@zhangsaidongs-MacBook-Pro ~ % <span class="hljs-built_in">cd</span> /Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook init<br>warn: no summary file <span class="hljs-keyword">in</span> this book <br>info: create README.md <br>info: create SUMMARY.md <br><br>TypeError [ERR_INVALID_ARG_TYPE]: The <span class="hljs-string">"data"</span> argument must be of <span class="hljs-built_in">type</span> string or an instance of Buffer, TypedArray, or DataView. Received an instance of Promise<br>zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serve<br>Live reload server started on port: 35729<br>Press CTRL+C to quit ...<br><br>info: 7 plugins are installed <br>info: loading plugin <span class="hljs-string">"livereload"</span>... OK <br>info: loading plugin <span class="hljs-string">"highlight"</span>... OK <br>info: loading plugin <span class="hljs-string">"search"</span>... OK <br>info: loading plugin <span class="hljs-string">"lunr"</span>... OK <br>info: loading plugin <span class="hljs-string">"sharing"</span>... OK <br>info: loading plugin <span class="hljs-string">"fontsettings"</span>... OK <br>info: loading plugin <span class="hljs-string">"theme-default"</span>... OK <br>info: found 1 pages <br>info: found 0 asset files <br>info: &gt;&gt; generation finished with success <span class="hljs-keyword">in</span> 0.3s ! <br><br>Starting server ...<br>Serving book on http://localhost:4000<br>Restart after change <span class="hljs-keyword">in</span> file book.json<br><br>Stopping server<br>info: 7 plugins are installed <br>info: 21 explicitly listed <br><br>Error: Couldn<span class="hljs-string">'t locate plugins "jsbin, anchors, video, ga, toggle-chapters, editlink, include-codeblock, splitter, github-buttons, chart, todo, quiz, include-highlight, tonic", Run '</span>gitbook install<span class="hljs-string">' to install plugins from registry.</span><br><span class="hljs-string">zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serve</span><br><span class="hljs-string">Live reload server started on port: 35729</span><br><span class="hljs-string">Press CTRL+C to quit ...</span><br><span class="hljs-string"></span><br><span class="hljs-string">info: 7 plugins are installed </span><br><span class="hljs-string">info: 21 explicitly listed </span><br><span class="hljs-string"></span><br><span class="hljs-string">Error: Couldn'</span>t locate plugins <span class="hljs-string">"jsbin, anchors, video, ga, toggle-chapters, editlink, include-codeblock, splitter, github-buttons, chart, todo, quiz, include-highlight, tonic"</span>, Run <span class="hljs-string">'gitbook install'</span> to install plugins from registry.<br>zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook install ./<br>info: installing 14 plugins using npm@3.9.2 <br>info:  <br>info: installing plugin <span class="hljs-string">"jsbin"</span> <br>info: install plugin <span class="hljs-string">"jsbin"</span> (*) from NPM with version 0.0.12 <br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>└── gitbook-plugin-jsbin@0.0.12 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"jsbin"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"anchors"</span> <br>runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├─┬ gitbook-plugin-anchors@0.7.1 <br>│ ├─┬ cheerio@0.22.0 <br>│ │ ├─┬ css-select@1.2.0 <br>│ │ │ ├── boolbase@1.0.0 <br>│ │ │ ├── css-what@2.1.3 <br>│ │ │ ├── domutils@1.5.1 <br>│ │ │ └── nth-check@1.0.2 <br>│ │ ├─┬ dom-serializer@0.1.1 <br>│ │ │ └── domelementtype@1.3.1 <br>│ │ ├── entities@1.1.2 <br>│ │ ├─┬ htmlparser2@3.10.1 <br>│ │ │ ├── domhandler@2.4.2 <br>│ │ │ ├── inherits@2.0.4 <br>│ │ │ └─┬ readable-stream@3.6.0 <br>│ │ │   ├─┬ string_decoder@1.3.0 <br>│ │ │   │ └── safe-buffer@5.2.1 <br>│ │ │   └── util-deprecate@1.0.2 <br>│ │ ├── lodash.assignin@4.2.0 <br>│ │ ├── lodash.bind@4.2.1 <br>│ │ ├── lodash.defaults@4.2.0 <br>│ │ ├── lodash.filter@4.6.0 <br>│ │ ├── lodash.flatten@4.4.0 <br>│ │ ├── lodash.foreach@4.5.0 <br>│ │ ├── lodash.map@4.6.0 <br>│ │ ├── lodash.merge@4.6.2 <br>│ │ ├── lodash.pick@4.4.0 <br>│ │ ├── lodash.reduce@4.6.0 <br>│ │ ├── lodash.reject@4.6.0 <br>│ │ └── lodash.some@4.6.0 <br>│ └── github-slugid@1.0.1 <br>└── gitbook-plugin-jsbin@0.0.12 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"anchors"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"video"</span> <br>runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-jsbin@0.0.12 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"video"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"ga"</span> <br>runTopLevelLifecycles → 2 ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-jsbin@0.0.12 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"ga"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"toggle-chapters"</span> <br>runTopLevelLifecycles → 2 ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"toggle-chapters"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"editlink"</span> <br>runTopLevelLifecycles → 2 ▐ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"editlink"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"include-codeblock"</span> <br>runTopLevelLifecycles → 2 ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├─┬ gitbook-plugin-include-codeblock@3.2.2 <br>│ ├─┬ handlebars@4.7.7 <br>│ │ ├── minimist@1.2.5 <br>│ │ ├── neo-async@2.6.2 <br>│ │ ├── source-map@0.6.1 <br>│ │ ├── uglify-js@3.13.2 <br>│ │ └── wordwrap@1.0.0 <br>│ ├── language-map@1.4.0 <br>│ ├─┬ meow@4.0.1 <br>│ │ ├─┬ camelcase-keys@4.2.0 <br>│ │ │ ├── camelcase@4.1.0 <br>│ │ │ ├── map-obj@2.0.0 <br>│ │ │ └── quick-lru@1.1.0 <br>│ │ ├─┬ decamelize-keys@1.1.0 <br>│ │ │ ├── decamelize@1.2.0 <br>│ │ │ └── map-obj@1.0.1 <br>│ │ ├─┬ loud-rejection@1.6.0 <br>│ │ │ ├─┬ currently-unhandled@0.4.1 <br>│ │ │ │ └── array-find-index@1.0.2 <br>│ │ │ └── signal-exit@3.0.3 <br>│ │ ├─┬ minimist-options@3.0.2 <br>│ │ │ ├── arrify@1.0.1 <br>│ │ │ └── is-plain-obj@1.1.0 <br>│ │ ├─┬ normalize-package-data@2.5.0 <br>│ │ │ ├── hosted-git-info@2.8.8 <br>│ │ │ ├─┬ resolve@1.20.0 <br>│ │ │ │ ├─┬ is-core-module@2.2.0 <br>│ │ │ │ │ └─┬ has@1.0.3 <br>│ │ │ │ │   └── function-bind@1.1.1 <br>│ │ │ │ └── path-parse@1.0.6 <br>│ │ │ ├── semver@5.7.1 <br>│ │ │ └─┬ validate-npm-package-license@3.0.4 <br>│ │ │   ├─┬ spdx-correct@3.1.1 <br>│ │ │   │ └── spdx-license-ids@3.0.7 <br>│ │ │   └─┬ spdx-expression-parse@3.0.1 <br>│ │ │     └── spdx-exceptions@2.3.0 <br>│ │ ├─┬ read-pkg-up@3.0.0 <br>│ │ │ ├─┬ find-up@2.1.0 <br>│ │ │ │ └─┬ locate-path@2.0.0 <br>│ │ │ │   ├─┬ p-locate@2.0.0 <br>│ │ │ │   │ └─┬ p-limit@1.3.0 <br>│ │ │ │   │   └── p-try@1.0.0 <br>│ │ │ │   └── path-exists@3.0.0 <br>│ │ │ └─┬ read-pkg@3.0.0 <br>│ │ │   ├─┬ load-json-file@4.0.0 <br>│ │ │   │ ├── graceful-fs@4.2.6 <br>│ │ │   │ ├─┬ parse-json@4.0.0 <br>│ │ │   │ │ ├─┬ error-ex@1.3.2 <br>│ │ │   │ │ │ └── is-arrayish@0.2.1 <br>│ │ │   │ │ └── json-parse-better-errors@1.0.2 <br>│ │ │   │ ├── pify@3.0.0 <br>│ │ │   │ └── strip-bom@3.0.0 <br>│ │ │   └── path-type@3.0.0 <br>│ │ ├─┬ redent@2.0.0 <br>│ │ │ ├── indent-string@3.2.0 <br>│ │ │ └── strip-indent@2.0.0 <br>│ │ └── trim-newlines@2.0.0 <br>│ └─┬ winston-color@1.0.0 <br>│   └─┬ winston@2.4.5 <br>│     ├── async@1.0.0 <br>│     ├── colors@1.0.3 <br>│     ├── cycle@1.0.3 <br>│     ├── eyes@0.1.8 <br>│     ├── isstream@0.1.2 <br>│     └── stack-trace@0.0.10 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"include-codeblock"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"splitter"</span> <br>runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-include-codeblock@3.2.2 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-splitter@0.0.8 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"splitter"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"github-buttons"</span> <br>runTopLevelLifecycles → 2 ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-github-buttons@3.0.0 <br>├── gitbook-plugin-include-codeblock@3.2.2 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-splitter@0.0.8 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"github-buttons"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"chart"</span> <br>runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├─┬ gitbook-plugin-chart@0.2.2 <br>│ └─┬ js-yaml@3.14.1 <br>│   ├─┬ argparse@1.0.10 <br>│   │ └── sprintf-js@1.0.3 <br>│   └── esprima@4.0.1 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-github-buttons@3.0.0 <br>├── gitbook-plugin-include-codeblock@3.2.2 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-splitter@0.0.8 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"chart"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"todo"</span> <br>runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-chart@0.2.2 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-github-buttons@3.0.0 <br>├── gitbook-plugin-include-codeblock@3.2.2 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-splitter@0.0.8 <br>├─┬ gitbook-plugin-todo@0.1.3 <br>│ ├─┬ cheerio@0.19.0 <br>│ │ ├─┬ css-select@1.0.0 <br>│ │ │ ├── css-what@1.0.0 <br>│ │ │ └── domutils@1.4.3 <br>│ │ ├─┬ htmlparser2@3.8.3 <br>│ │ │ ├── domhandler@2.3.0 <br>│ │ │ ├── domutils@1.5.1 <br>│ │ │ ├── entities@1.0.0 <br>│ │ │ └─┬ readable-stream@1.1.14 <br>│ │ │   ├── core-util-is@1.0.2 <br>│ │ │   ├── isarray@0.0.1 <br>│ │ │   └── string_decoder@0.10.31 <br>│ │ └── lodash@3.10.1 <br>│ └── underscore@1.12.1 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"todo"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"quiz"</span> <br>runTopLevelLifecycles → 2 ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-chart@0.2.2 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-github-buttons@3.0.0 <br>├── gitbook-plugin-include-codeblock@3.2.2 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├─┬ gitbook-plugin-quiz@0.3.0 <br>│ └── jquery@2.2.4 <br>├── gitbook-plugin-splitter@0.0.8 <br>├─┬ gitbook-plugin-todo@0.1.3 <br>│ └─┬ cheerio@0.19.0<br>│   └─┬ htmlparser2@3.8.3<br>│     └── domutils@1.5.1 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"quiz"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"include-highlight"</span> <br>runTopLevelLifecycles → 2 ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-chart@0.2.2 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-github-buttons@3.0.0 <br>├── gitbook-plugin-include-codeblock@3.2.2 <br>├─┬ gitbook-plugin-include-highlight@0.2.1 <br>│ ├─┬ path@0.12.7 <br>│ │ ├── process@0.11.10 <br>│ │ └─┬ util@0.10.4 <br>│ │   └── inherits@2.0.3 <br>│ └── q@1.5.1 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-quiz@0.3.0 <br>├── gitbook-plugin-splitter@0.0.8 <br>├─┬ gitbook-plugin-todo@0.1.3 <br>│ └─┬ cheerio@0.19.0<br>│   └─┬ htmlparser2@3.8.3<br>│     └── domutils@1.5.1 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"include-highlight"</span> installed with success <br>info:  <br>info: installing plugin <span class="hljs-string">"tonic"</span> <br>runTopLevelLifecycles → 2 ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟<br>/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook<br>├── gitbook-plugin-anchors@0.7.1 <br>├── gitbook-plugin-chart@0.2.2 <br>├── gitbook-plugin-editlink@1.0.2 <br>├── gitbook-plugin-ga@1.0.1 <br>├── gitbook-plugin-github-buttons@3.0.0 <br>├── gitbook-plugin-include-codeblock@3.2.2 <br>├── gitbook-plugin-include-highlight@0.2.1 <br>├── gitbook-plugin-jsbin@0.0.12 <br>├── gitbook-plugin-quiz@0.3.0 <br>├── gitbook-plugin-splitter@0.0.8 <br>├─┬ gitbook-plugin-todo@0.1.3 <br>│ └─┬ cheerio@0.19.0<br>│   └─┬ htmlparser2@3.8.3<br>│     └── domutils@1.5.1 <br>├── gitbook-plugin-toggle-chapters@0.0.3 <br>├── gitbook-plugin-tonic@1.1.0 <br>└── gitbook-plugin-video@0.0.3 <br><br>info: &gt;&gt; plugin <span class="hljs-string">"tonic"</span> installed with success <br>zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % git serve<br>git: <span class="hljs-string">'serve'</span> is not a git <span class="hljs-built_in">command</span>. See <span class="hljs-string">'git --help'</span>.<br><br>The most similar <span class="hljs-built_in">command</span> is<br>    merge<br>zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serve<br>Live reload server started on port: 35729<br>Press CTRL+C to quit ...<br><br>info: 21 plugins are installed <br>info: loading plugin <span class="hljs-string">"jsbin"</span>... OK <br>info: loading plugin <span class="hljs-string">"anchors"</span>... OK <br>info: loading plugin <span class="hljs-string">"video"</span>... OK <br>info: loading plugin <span class="hljs-string">"ga"</span>... OK <br>info: loading plugin <span class="hljs-string">"toggle-chapters"</span>... OK <br>info: loading plugin <span class="hljs-string">"editlink"</span>... OK <br>info: loading plugin <span class="hljs-string">"include-codeblock"</span>... <br>warn: ace features disabled (`gitbook-plugin-ace` required)<br>OK <br>info: loading plugin <span class="hljs-string">"splitter"</span>... OK <br>info: loading plugin <span class="hljs-string">"github-buttons"</span>... OK <br>info: loading plugin <span class="hljs-string">"chart"</span>... OK <br>info: loading plugin <span class="hljs-string">"todo"</span>... OK <br>info: loading plugin <span class="hljs-string">"quiz"</span>... OK <br>info: loading plugin <span class="hljs-string">"include-highlight"</span>... OK <br>info: loading plugin <span class="hljs-string">"tonic"</span>... OK <br>info: loading plugin <span class="hljs-string">"livereload"</span>... OK <br>info: loading plugin <span class="hljs-string">"highlight"</span>... OK <br>info: loading plugin <span class="hljs-string">"search"</span>... OK <br>info: loading plugin <span class="hljs-string">"lunr"</span>... OK <br>info: loading plugin <span class="hljs-string">"sharing"</span>... OK <br>info: loading plugin <span class="hljs-string">"fontsettings"</span>... OK <br>info: loading plugin <span class="hljs-string">"theme-default"</span>... OK <br>info: found 108 pages <br>info: found 181 asset files <br>warn: <span class="hljs-string">"options"</span> property is deprecated, use config.get(key) instead <br>info: &gt;&gt; generation finished with success <span class="hljs-keyword">in</span> 12.0s ! <br><br>Starting server ...<br>Serving book on http://localhost:4000<br>(node:84994) [DEP0066] DeprecationWarning: OutgoingMessage.prototype._headers is deprecated<br>(Use `node --trace-deprecation ...` to show <span class="hljs-built_in">where</span> the warning was created)<br>^C<br>zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % <span class="hljs-built_in">cd</span> /Users/zhangsaidong/Desktop/project/Self/BlogSource <br>zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % git <span class="hljs-built_in">clone</span> https://git.gitbook.com/chengweiv5/test.git<br>Cloning into <span class="hljs-string">'test'</span>...<br>Username <span class="hljs-keyword">for</span> <span class="hljs-string">'https://git.gitbook.com'</span>: ^C<br>zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % git <span class="hljs-built_in">clone</span> https://git.gitbook.com/3440217568/rxswift.git<br>Cloning into <span class="hljs-string">'rxswift'</span>...<br>Username <span class="hljs-keyword">for</span> <span class="hljs-string">'https://git.gitbook.com'</span>: 34402217568       <br>Password <span class="hljs-keyword">for</span> <span class="hljs-string">'https://34402217568@git.gitbook.com'</span>: <br>remote: Book not found<br>fatal: repository <span class="hljs-string">'https://git.gitbook.com/3440217568/rxswift.git/'</span> not found<br>zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % git <span class="hljs-built_in">clone</span> https://git.gitbook.com/3440217568/RxSwift.git<br>Cloning into <span class="hljs-string">'RxSwift'</span>...<br>Username <span class="hljs-keyword">for</span> <span class="hljs-string">'https://git.gitbook.com'</span>: 3440217568@qq.com<br>Password <span class="hljs-keyword">for</span> <span class="hljs-string">'https://3440217568@qq.com@git.gitbook.com'</span>: <br>remote: Book not found<br>fatal: repository <span class="hljs-string">'https://git.gitbook.com/3440217568/RxSwift.git/'</span> not found<br>zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % git <span class="hljs-built_in">clone</span> https://github.com/adong666666/RxSwiftDoc.git<br>Cloning into <span class="hljs-string">'RxSwiftDoc'</span>...<br>warning: You appear to have cloned an empty repository.<br>zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % <span class="hljs-built_in">cd</span> /Users/zhangsaidong/Desktop/project/Self/RxSwiftDoc <br>zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % git add .<br>git %                                                                                                                                                              zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % git commit -m <span class="hljs-string">"fix"</span><br>[master (root-commit) 2719ead] fix<br> 291 files changed, 11003 insertions(+)<br> create mode 100644 .gitignore<br> create mode 100644 CHANGELOG.md<br> create mode 100644 LICENSE<br> create mode 100644 README.md<br> create mode 100644 SUMMARY.md<br> create mode 100644 assets/Architecture/Architecture.png<br> create mode 100644 assets/Architecture/MVVM/GitHubSignupViewController.png<br> create mode 100644 assets/Architecture/MVVM/GithubSignupFull.gif<br> create mode 100644 assets/Architecture/MVVM/GithubSignupViewModel.png<br> create mode 100644 assets/Architecture/MVVM/MVC.png<br> create mode 100644 assets/Architecture/MVVM/MVVM.png<br> create mode 100644 assets/Architecture/MVVM/Service.png<br> create mode 100644 assets/Architecture/MVVM/ViewModel.png<br> create mode 100644 assets/Architecture/ReactorKit/BasicConcept.png<br> create mode 100644 assets/Architecture/ReactorKit/GithubPaginatedSearchFull.gif<br> create mode 100644 assets/Architecture/ReactorKit/Reactor.png<br> create mode 100644 assets/Architecture/ReactorKit/ReactorKit.png<br> create mode 100644 assets/Architecture/RxFeedback/All.png<br> create mode 100644 assets/Architecture/RxFeedback/Counter.gif<br> create mode 100644 assets/Architecture/RxFeedback/Event.png<br> create mode 100644 assets/Architecture/RxFeedback/FeedbackLoop.png<br> create mode 100644 assets/Architecture/RxFeedback/GithubPaginatedSearchFull.gif<br> create mode 100644 assets/Architecture/RxFeedback/QueriedState.png<br> create mode 100644 assets/Architecture/RxFeedback/RxFeedback.png<br> create mode 100644 assets/Architecture/RxFeedback/State.png<br> create mode 100644 assets/Disposable/Disposable.png<br> create mode 100644 assets/Disposable/DisposeBag.png<br> create mode 100644 assets/Disposable/TakeUntil.png<br> create mode 100644 assets/FunctionalReactiveProgramming/Binding.png<br> create mode 100644 assets/FunctionalReactiveProgramming/FunctionalProgramming.png<br> create mode 100644 assets/FunctionalReactiveProgramming/FunctionalProgrammingBanner.png<br> create mode 100644 assets/FunctionalReactiveProgramming/FunctionalReactiveProgramming.png<br> create mode 100644 assets/FunctionalReactiveProgramming/TapArray.png<br> create mode 100644 assets/FunctionalReactiveProgramming/TapObservable.png<br> create mode 100644 assets/GithubSearch.gif<br> create mode 100644 assets/MoreDemo/Calculator/All.png<br> create mode 100644 assets/MoreDemo/Calculator/CalculatorCommand.png<br> create mode 100644 assets/MoreDemo/Calculator/CalculatorFull.gif<br> create mode 100644 assets/MoreDemo/Calculator/CalculatorState.png<br> create mode 100644 assets/MoreDemo/Calculator/State.png<br> create mode 100644 assets/MoreDemo/Calculator/StateObserver.png<br> create mode 100644 assets/MoreDemo/ImagePicker/All.png<br> create mode 100644 assets/MoreDemo/ImagePicker/ImagePickerFull.gif<br> create mode 100644 assets/MoreDemo/ImagePicker/Operator.png<br> create mode 100644 assets/MoreDemo/TableViewSectionedViewController/All.png<br> create mode 100644 assets/MoreDemo/TableViewSectionedViewController/TableViewSectionedViewControllerFull.png<br> create mode 100644 assets/MoreDemo/TableViewSectionedViewController/bindings.png<br> create mode 100644 assets/Observable/Callback.png<br> create mode 100644 assets/Observable/JSON.png<br> create mode 100644 assets/Observable/Obervable.png<br> create mode 100644 assets/Observable/OnePiece.png<br> create mode 100644 assets/Observable/Temperature.png<br> create mode 100644 assets/ObservableAndObserver/AsyncSubject.png<br> create mode 100644 assets/ObservableAndObserver/AsyncSubject1.png<br> create mode 100644 assets/ObservableAndObserver/BehaviorSubject.png<br> create mode 100644 assets/ObservableAndObserver/BehaviorSubject1.png<br> create mode 100644 assets/ObservableAndObserver/ObservableAndObserver.png<br> create mode 100644 assets/ObservableAndObserver/PublishSubject.png<br> create mode 100644 assets/ObservableAndObserver/PublishSubject1.png<br> create mode 100644 assets/ObservableAndObserver/ReplaySubject.png<br> create mode 100644 assets/Observer/Callback.png<br> create mode 100644 assets/Observer/JSON.png<br> create mode 100644 assets/Observer/Observer.png<br> create mode 100644 assets/Observer/OnePiece.png<br> create mode 100644 assets/Observer/Temperature.png<br> create mode 100644 assets/Operator/Operator.png<br> create mode 100644 assets/Operator/filter.png<br> create mode 100644 assets/Operator/map.png<br> create mode 100644 assets/Operator/zip.png<br> create mode 100644 assets/README/FunctionalReactiveProgramming.png<br> create mode 100644 assets/README/Introduction.png<br> create mode 100644 assets/README/OperatorCreate.png<br> create mode 100644 assets/README/RxSwiftEcosystem.png<br> create mode 100644 assets/Recipes/Recipes.jpg<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4Bind.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4Do.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4Element.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4FilterNil.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4TimeInterval.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4ToArray.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift4Variable.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5Bind.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5DispatchTimeInterval.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5Do.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5Element.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5FilterNil.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5ToArray.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwift5Variable.png<br> create mode 100644 assets/Recipes/WhatsNewInRxSwift5/RxSwiftDpendencyGraph.png<br> create mode 100644 assets/RxSwiftCore.png<br> create mode 100644 assets/Rx_Logo_M.png<br> create mode 100644 assets/Schedulers/Scheduler.png<br> create mode 100644 assets/SimpleValid/All.png<br> create mode 100644 assets/SimpleValid/LoginAction.png<br> create mode 100644 assets/SimpleValid/LoginButtonValid.png<br> create mode 100644 assets/SimpleValid/PasswordValid.png<br> create mode 100644 assets/SimpleValid/SimpleValidationFull.gif<br> create mode 100644 assets/SimpleValid/UsernameValid.png<br> create mode 100644 assets/WhichOperator/Operators/amb.png<br> create mode 100644 assets/WhichOperator/Operators/buffer.png<br> create mode 100644 assets/WhichOperator/Operators/catchError.png<br> create mode 100644 assets/WhichOperator/Operators/combineLatest.png<br> create mode 100644 assets/WhichOperator/Operators/concat.png<br> create mode 100644 assets/WhichOperator/Operators/concatMap.png<br> create mode 100644 assets/WhichOperator/Operators/create.png<br> create mode 100644 assets/WhichOperator/Operators/debounce.png<br> create mode 100644 assets/WhichOperator/Operators/deferred.png<br> create mode 100644 assets/WhichOperator/Operators/delay.png<br> create mode 100644 assets/WhichOperator/Operators/delaySubscription.png<br> create mode 100644 assets/WhichOperator/Operators/dematerialize.png<br> create mode 100644 assets/WhichOperator/Operators/distinctUntilChanged.png<br> create mode 100644 assets/WhichOperator/Operators/do.png<br> create mode 100644 assets/WhichOperator/Operators/elementAt.png<br> create mode 100644 assets/WhichOperator/Operators/empty.png<br> create mode 100644 assets/WhichOperator/Operators/error.png<br> create mode 100644 assets/WhichOperator/Operators/filter.png<br> create mode 100644 assets/WhichOperator/Operators/flatMap.png<br> create mode 100644 assets/WhichOperator/Operators/flatMapLatest.png<br> create mode 100644 assets/WhichOperator/Operators/from.png<br> create mode 100644 assets/WhichOperator/Operators/groupBy.png<br> create mode 100644 assets/WhichOperator/Operators/ignoreElements.png<br> create mode 100644 assets/WhichOperator/Operators/interval.png<br> create mode 100644 assets/WhichOperator/Operators/just.png<br> create mode 100644 assets/WhichOperator/Operators/map.png<br> create mode 100644 assets/WhichOperator/Operators/materialize.png<br> create mode 100644 assets/WhichOperator/Operators/merge.png<br> create mode 100644 assets/WhichOperator/Operators/never.png<br> create mode 100644 assets/WhichOperator/Operators/observeOn.png<br> create mode 100644 assets/WhichOperator/Operators/observeOn1.png<br> create mode 100644 assets/WhichOperator/Operators/publish.png<br> create mode 100644 assets/WhichOperator/Operators/reduce.png<br> create mode 100644 assets/WhichOperator/Operators/refCount.png<br> create mode 100644 assets/WhichOperator/Operators/repeatElement.png<br> create mode 100644 assets/WhichOperator/Operators/replay.png<br> create mode 100644 assets/WhichOperator/Operators/retry.png<br> create mode 100644 assets/WhichOperator/Operators/sample.png<br> create mode 100644 assets/WhichOperator/Operators/scan.png<br> create mode 100644 assets/WhichOperator/Operators/schedulers.png<br> create mode 100644 assets/WhichOperator/Operators/single.png<br> create mode 100644 assets/WhichOperator/Operators/skip.png<br> create mode 100644 assets/WhichOperator/Operators/skipUntil.png<br> create mode 100644 assets/WhichOperator/Operators/skipWhile.png<br> create mode 100644 assets/WhichOperator/Operators/startWith.png<br> create mode 100644 assets/WhichOperator/Operators/subscribeOn.png<br> create mode 100644 assets/WhichOperator/Operators/take.png<br> create mode 100644 assets/WhichOperator/Operators/takeLast.png<br> create mode 100644 assets/WhichOperator/Operators/takeUntil.png<br> create mode 100644 assets/WhichOperator/Operators/takeWhile.png<br> create mode 100644 assets/WhichOperator/Operators/timeout.png<br> create mode 100644 assets/WhichOperator/Operators/timer.png<br> create mode 100644 assets/WhichOperator/Operators/timer1.png<br> create mode 100644 assets/WhichOperator/Operators/using.png<br> create mode 100644 assets/WhichOperator/Operators/window.png<br> create mode 100644 assets/WhichOperator/Operators/withLatestFrom.png<br> create mode 100644 assets/WhichOperator/Operators/zip.png<br> create mode 100644 assets/WhichOperator/WhichOperator.png<br> create mode 100644 assets/WhyRxSwiftAgain/ReactiveX.png<br> create mode 100644 assets/WhyRxSwiftAgain/RxDataSources.gif<br> create mode 100644 assets/WhyRxSwiftAgain/RxSwiftCommunity.png<br> create mode 100644 book.json<br> create mode 100644 content/about.md<br> create mode 100644 content/architecture.md<br> create mode 100644 content/architecture/mvvm.md<br> create mode 100644 content/architecture/mvvm/github_signup.md<br> create mode 100644 content/architecture/reactorkit.md<br> create mode 100644 content/architecture/reactorkit/github_search.md<br> create mode 100644 content/architecture/rxfeedback.md<br> create mode 100644 content/architecture/rxfeedback/github_search.md<br> create mode 100644 content/decision_tree.md<br> create mode 100644 content/decision_tree/amb.md<br> create mode 100644 content/decision_tree/buffer.md<br> create mode 100644 content/decision_tree/catchError.md<br> create mode 100644 content/decision_tree/combineLatest.md<br> create mode 100644 content/decision_tree/concat.md<br> create mode 100644 content/decision_tree/concatMap.md<br> create mode 100644 content/decision_tree/connect.md<br> create mode 100644 content/decision_tree/create.md<br> create mode 100644 content/decision_tree/debounce.md<br> create mode 100644 content/decision_tree/debug.md<br> create mode 100644 content/decision_tree/deferred.md<br> create mode 100644 content/decision_tree/delay.md<br> create mode 100644 content/decision_tree/delaySubscription.md<br> create mode 100644 content/decision_tree/dematerialize.md<br> create mode 100644 content/decision_tree/distinctUntilChanged.md<br> create mode 100644 content/decision_tree/do.md<br> create mode 100644 content/decision_tree/elementAt.md<br> create mode 100644 content/decision_tree/empty.md<br> create mode 100644 content/decision_tree/error.md<br> create mode 100644 content/decision_tree/filter.md<br> create mode 100644 content/decision_tree/flatMap.md<br> create mode 100644 content/decision_tree/flatMapLatest.md<br> create mode 100644 content/decision_tree/from.md<br> create mode 100644 content/decision_tree/groupBy.md<br> create mode 100644 content/decision_tree/ignoreElements.md<br> create mode 100644 content/decision_tree/interval.md<br> create mode 100644 content/decision_tree/just.md<br> create mode 100644 content/decision_tree/map.md<br> create mode 100644 content/decision_tree/materialize.md<br> create mode 100644 content/decision_tree/merge.md<br> create mode 100644 content/decision_tree/never.md<br> create mode 100644 content/decision_tree/observeOn.md<br> create mode 100644 content/decision_tree/publish.md<br> create mode 100644 content/decision_tree/reduce.md<br> create mode 100644 content/decision_tree/refCount.md<br> create mode 100644 content/decision_tree/repeatElement.md<br> create mode 100644 content/decision_tree/replay.md<br> create mode 100644 content/decision_tree/retry.md<br> create mode 100644 content/decision_tree/sample.md<br> create mode 100644 content/decision_tree/scan.md<br> create mode 100644 content/decision_tree/shareReplay.md<br> create mode 100644 content/decision_tree/single.md<br> create mode 100644 content/decision_tree/skip.md<br> create mode 100644 content/decision_tree/skipUntil.md<br> create mode 100644 content/decision_tree/skipWhile.md<br> create mode 100644 content/decision_tree/startWith.md<br> create mode 100644 content/decision_tree/subscribeOn.md<br> create mode 100644 content/decision_tree/take.md<br> create mode 100644 content/decision_tree/takeLast.md<br> create mode 100644 content/decision_tree/takeUntil.md<br> create mode 100644 content/decision_tree/takeWhile.md<br> create mode 100644 content/decision_tree/timeout.md<br> create mode 100644 content/decision_tree/timer.md<br> create mode 100644 content/decision_tree/using.md<br> create mode 100644 content/decision_tree/window.md<br> create mode 100644 content/decision_tree/withLatestFrom.md<br> create mode 100644 content/decision_tree/zip.md<br> create mode 100644 content/first_app.md<br> create mode 100644 content/more_demo.md<br> create mode 100644 content/more_demo/calculator.md<br> create mode 100644 content/more_demo/image_picker.md<br> create mode 100644 content/more_demo/tableView_sectioned_viewController.md<br> create mode 100644 content/recipes.md<br> create mode 100644 content/recipes/pure_function.md<br> create mode 100644 content/recipes/rxrelay.md<br> create mode 100644 content/recipes/share_side_effects.md<br> create mode 100644 content/recipes/side_effects.md<br> create mode 100644 content/recipes/whats_new_in_rxswift_5.md<br> create mode 100644 content/resource.md<br> create mode 100644 content/rxswift_core.md<br> create mode 100644 content/rxswift_core/disposable.md<br> create mode 100644 content/rxswift_core/error_handling.md<br> create mode 100644 content/rxswift_core/observable.md<br> create mode 100644 content/rxswift_core/observable/completable.md<br> create mode 100644 content/rxswift_core/observable/control_event.md<br> create mode 100644 content/rxswift_core/observable/driver.md<br> create mode 100644 content/rxswift_core/observable/maybe.md<br> create mode 100644 content/rxswift_core/observable/signal.md<br> create mode 100644 content/rxswift_core/observable/single.md<br> create mode 100644 content/rxswift_core/observable_and_observer.md<br> create mode 100644 content/rxswift_core/observable_and_observer/async_subject.md<br> create mode 100644 content/rxswift_core/observable_and_observer/behavior_subject.md<br> create mode 100644 content/rxswift_core/observable_and_observer/control_property.md<br> create mode 100644 content/rxswift_core/observable_and_observer/publish_subject.md<br> create mode 100644 content/rxswift_core/observable_and_observer/replay_subject.md<br> create mode 100644 content/rxswift_core/observable_and_observer/variable.md<br> create mode 100644 content/rxswift_core/observer.md<br> create mode 100644 content/rxswift_core/observer/any_observer.md<br> create mode 100644 content/rxswift_core/observer/binder.md<br> create mode 100644 content/rxswift_core/operator.md<br> create mode 100644 content/rxswift_core/schedulers.md<br> create mode 100644 content/rxswift_ecosystem.md<br> create mode 100644 content/think_reactive.md<br> create mode 100644 content/think_reactive/data_binding.md<br> create mode 100644 content/think_reactive/functional_reactive_progaramming.md<br> create mode 100644 content/think_reactive/funtional_programming.md<br> create mode 100644 content/why_rxswift.md<br> create mode 100644 gitbook/fonts/fontawesome/FontAwesome.otf<br> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.eot<br> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.svg<br> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.ttf<br> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.woff<br> create mode 100644 gitbook/fonts/fontawesome/fontawesome-webfont.woff2<br> create mode 100644 gitbook/gitbook-plugin-fontsettings/fontsettings.js<br> create mode 100644 gitbook/gitbook-plugin-fontsettings/website.css<br> create mode 100644 gitbook/gitbook-plugin-highlight/ebook.css<br> create mode 100644 gitbook/gitbook-plugin-highlight/website.css<br> create mode 100644 gitbook/gitbook-plugin-lunr/lunr.min.js<br> create mode 100644 gitbook/gitbook-plugin-lunr/search-lunr.js<br> create mode 100644 gitbook/gitbook-plugin-search/lunr.min.js<br> create mode 100644 gitbook/gitbook-plugin-search/search-engine.js<br> create mode 100644 gitbook/gitbook-plugin-search/search.css<br> create mode 100644 gitbook/gitbook-plugin-search/search.js<br> create mode 100644 gitbook/gitbook-plugin-sharing/buttons.js<br> create mode 100644 gitbook/gitbook.js<br> create mode 100644 gitbook/images/apple-touch-icon-precomposed-152.png<br> create mode 100644 gitbook/images/favicon.ico<br> create mode 100644 gitbook/style.css<br> create mode 100644 gitbook/theme.js<br> create mode 100644 introduction.md<br> create mode 100755 publish_gitbook.sh<br> create mode 100644 search_index.json<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % git ppush<br>git: <span class="hljs-string">'ppush'</span> is not a git <span class="hljs-built_in">command</span>. See <span class="hljs-string">'git --help'</span>.<br><br>The most similar <span class="hljs-built_in">command</span> is<br>    push<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % git push <br>Enumerating objects: 336, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (336/336), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 16 threads<br>Compressing objects: 100% (330/330), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (336/336), 15.77 MiB | 116.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Total 336 (delta 5), reused 0 (delta 0)<br>remote: Resolving deltas: 100% (5/5), <span class="hljs-keyword">done</span>.<br>To https://github.com/adong666666/RxSwiftDoc.git<br> * [new branch]      master -&gt; master<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % lss<br>zsh: <span class="hljs-built_in">command</span> not found: lss<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % ls<br>CHANGELOG.md        SUMMARY.md        book.json        introduction.md        search_index.json<br>LICENSE            _book            content            node_modules<br>README.md        assets            gitbook            publish_gitbook.sh<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>文档处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>博文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iOS之制作xcframework摘录</title>
    <link href="/posts/10391.html"/>
    <url>/posts/10391.html</url>
    
    <content type="html"><![CDATA[<h1 id="iOS之制作xcframework摘录"><a href="#iOS之制作xcframework摘录" class="headerlink" title="iOS之制作xcframework摘录"></a>iOS之制作xcframework摘录</h1><p>========================</p><p>最近RxSwift 6开始需要xcframework拖到工程中（感觉有点麻烦，直接让我们pod就能用，他不香吗），然后我就去搜了网上的教程制作xcframework，真是很麻烦，幸好结合下面两篇教程最后还是搞定了。</p><p>附网址：<a href="https://www.shareintelli.com/1087/">https://www.shareintelli.com/1087/</a><br> 附网址：<a href="https://blog.csdn.net/zr_csdn/article/details/112298965">https://blog.csdn.net/zr_csdn/article/details/112298965</a></p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210322iOS%E4%B9%8B%E5%88%B6%E4%BD%9Cxcframework%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210322iOS%E4%B9%8B%E5%88%B6%E4%BD%9Cxcframework%E6%91%98%E5%BD%95/2.png"></p><h2 id="截图看不到的命令行"><a href="#截图看不到的命令行" class="headerlink" title="截图看不到的命令行"></a>截图看不到的命令行</h2><figure class="highlight dsconfig"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">xcodebuild</span> -<span class="hljs-built_in">create-xcframework</span> -<span class="hljs-string">framework</span> &lt;第一个库的路径&gt; -<span class="hljs-string">framework</span> &lt;第二个库的路径&gt; -<span class="hljs-string">output</span> &lt;输出路径/库名称.<span class="hljs-string">xcframework</span>&gt;<br></code></pre></td></tr></tbody></table></figure><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">xcodebuild -create-xcframework -framework <span class="hljs-regexp">/Users/</span>admin<span class="hljs-regexp">/Library/</span>Developer<span class="hljs-regexp">/Xcode/</span>DerivedData<span class="hljs-regexp">/MyTools-ciyqnqacjemhpfbqswwhrlyvstsb/</span>Build<span class="hljs-regexp">/Products/</span>Release-iphoneos<span class="hljs-regexp">/MyTools.framework -framework /</span>Users<span class="hljs-regexp">/admin/</span>Library<span class="hljs-regexp">/Developer/</span>Xcode<span class="hljs-regexp">/DerivedData/</span>MyTools-ciyqnqacjemhpfbqswwhrlyvstsb<span class="hljs-regexp">/Build/</span>Products<span class="hljs-regexp">/Release-iphonesimulator/</span>MyTools.framework -output ~<span class="hljs-regexp">/Desktop/</span>MyToolsOutput/MyTools.xcframework<br><br><span class="hljs-regexp">//</span> 成功后的日志<br>xcframework successfully written out to: <span class="hljs-regexp">/Users/</span>admin<span class="hljs-regexp">/Desktop/</span>MyToolsOutput/MyTools.xcframework<br><br></code></pre></td></tr></tbody></table></figure><h2 id="工作记录"><a href="#工作记录" class="headerlink" title="工作记录"></a>工作记录</h2><p>这里因为在博客就直接给内容哈：</p><figure class="highlight vhdl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">Last login: Sun Mar <span class="hljs-number">21</span> <span class="hljs-number">16</span>:<span class="hljs-number">16</span>:<span class="hljs-number">57</span> <span class="hljs-keyword">on</span> ttys000<br>zhangsaidong@zhangsaidongs-MacBook-Pro ~ % cd /Users/zhangsaidong/Desktop/project2/iOS/someProject<br>zhangsaidong@zhangsaidongs-MacBook-Pro someProject % <br>zhangsaidong@zhangsaidongs-MacBook-Pro someProject % git clone https://github.com/ReactiveX/RxSwift.git<br>Cloning into <span class="hljs-symbol">'RxSwift</span>'...<br>remote: Enumerating objects: <span class="hljs-number">36</span>, done.<br>remote: Counting objects: <span class="hljs-number">100</span>% (<span class="hljs-number">36</span>/<span class="hljs-number">36</span>), done.<br>remote: Compressing objects: <span class="hljs-number">100</span>% (<span class="hljs-number">33</span>/<span class="hljs-number">33</span>), done.<br>remote: Total <span class="hljs-number">39525</span> (delta <span class="hljs-number">9</span>), reused <span class="hljs-number">9</span> (delta <span class="hljs-number">3</span>), pack-reused <span class="hljs-number">39489</span><br>Receiving objects: <span class="hljs-number">100</span>% (<span class="hljs-number">39525</span>/<span class="hljs-number">39525</span>), <span class="hljs-number">15.15</span> MiB | <span class="hljs-number">1.85</span> MiB/s, done.<br>Resolving deltas: <span class="hljs-number">100</span>% (<span class="hljs-number">29174</span>/<span class="hljs-number">29174</span>), done.<br>zhangsaidong@zhangsaidongs-MacBook-Pro someProject % xcodebuild<br>Command <span class="hljs-literal">line</span> invocation:<br>    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild<br><br>xcodebuild: <span class="hljs-literal">error</span>: The directory /Users/zhangsaidong/Desktop/project2/iOS/someProject does <span class="hljs-keyword">not</span> contain an Xcode project.<br><br>zhangsaidong@zhangsaidongs-MacBook-Pro someProject % cd /Users/zhangsaidong/Desktop/project2/iOS/someProject/RxSwift/RxExample/RxExample.xcodeproj<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample.xcodeproj % cd ..<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcode build<br>zsh: command <span class="hljs-keyword">not</span> found: xcode<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild<br>Command <span class="hljs-literal">line</span> invocation:<br>    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild<br><br><span class="hljs-literal">note</span>: Using <span class="hljs-keyword">new</span> build system<br><span class="hljs-literal">note</span>: Planning build<br><span class="hljs-literal">note</span>: Constructing build description<br><span class="hljs-literal">warning</span>: ONLY_ACTIVE_ARCH=YES requested <span class="hljs-keyword">with</span> multiple ARCHS <span class="hljs-keyword">and</span> no run destination <span class="hljs-keyword">to</span> provide an active <span class="hljs-keyword">architecture</span>; building <span class="hljs-keyword">for</span> <span class="hljs-keyword">all</span> applicable architectures (<span class="hljs-keyword">in</span> target <span class="hljs-symbol">'RxCocoa</span>' from project <span class="hljs-symbol">'Rx</span>')<br><span class="hljs-literal">error</span>: No profiles <span class="hljs-keyword">for</span> <span class="hljs-symbol">'io</span>.rx.example.<span class="hljs-number">4.3</span>.<span class="hljs-number">0</span>' were found: Xcode couldn<span class="hljs-symbol">'t</span> find any iOS App Development provisioning profiles matching <span class="hljs-symbol">'io</span>.rx.example.<span class="hljs-number">4.3</span>.<span class="hljs-number">0</span>'. Automatic signing <span class="hljs-keyword">is</span> disabled <span class="hljs-keyword">and</span> unable <span class="hljs-keyword">to</span> <span class="hljs-keyword">generate</span> a profile. <span class="hljs-keyword">To</span> enable automatic signing, pass -allowProvisioningUpdates <span class="hljs-keyword">to</span> xcodebuild. (<span class="hljs-keyword">in</span> target <span class="hljs-symbol">'RxExample</span>-iOS' from project <span class="hljs-symbol">'RxExample</span>')<br><span class="hljs-literal">error</span>: Building <span class="hljs-keyword">for</span> iOS, but the linked framework <span class="hljs-symbol">'RxSwift</span>.framework' <span class="hljs-keyword">is</span> building <span class="hljs-keyword">for</span> macOS. You may need <span class="hljs-keyword">to</span> configure <span class="hljs-symbol">'RxSwift</span>.framework' <span class="hljs-keyword">to</span> build <span class="hljs-keyword">for</span> iOS. (<span class="hljs-keyword">in</span> target <span class="hljs-symbol">'RxExample</span>-iOS' from project <span class="hljs-symbol">'RxExample</span>')<br><span class="hljs-literal">error</span>: Building <span class="hljs-keyword">for</span> iOS, but the linked framework <span class="hljs-symbol">'RxCocoa</span>.framework' <span class="hljs-keyword">is</span> building <span class="hljs-keyword">for</span> macOS. You may need <span class="hljs-keyword">to</span> configure <span class="hljs-symbol">'RxCocoa</span>.framework' <span class="hljs-keyword">to</span> build <span class="hljs-keyword">for</span> iOS. (<span class="hljs-keyword">in</span> target <span class="hljs-symbol">'RxExample</span>-iOS' from project <span class="hljs-symbol">'RxExample</span>')<br><br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxCocoa.framework  -framework/Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphonesimulator/RxCocoa.framework<br><span class="hljs-literal">error</span>: invalid argument '-framework/Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxCocoa.framework'.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxCocoa.framework  -framework/Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphonesimulator/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframework<br><span class="hljs-literal">error</span>: invalid argument '-framework/Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxCocoa.framework'.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxCocoa.framework  -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphonesimulator/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframework<br>xcframework successfully written <span class="hljs-keyword">out</span> <span class="hljs-keyword">to</span>: /Users/zhangsaidong/Desktop/RxCocoa.xcframework<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxRelay.framework<br><span class="hljs-literal">error</span>: no output was specified.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxRelay.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxRelay.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphonesimulator/RxRelay.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-appletvos/RxRelay.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-watchos/RxRelay.framework output ~/Desktop/RxRelay.xcframework<br><span class="hljs-literal">error</span>: invalid argument <span class="hljs-symbol">'output</span>'.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxRelay.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxRelay.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphonesimulator/RxRelay.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-appletvos/RxRelay.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-watchos/RxRelay.framework -output ~/Desktop/RxRelay.xcframework<br>xcframework successfully written <span class="hljs-keyword">out</span> <span class="hljs-keyword">to</span>: /Users/zhangsaidong/Desktop/RxRelay.xcframework<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxCocoa.framework<br><span class="hljs-literal">error</span>: no output was specified.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphonesimulator/RxCocoa.framework<br><span class="hljs-literal">error</span>: no output was specified.<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphonesimulator/RxCocoa.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-watchos/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframework<br>xcframework successfully written <span class="hljs-keyword">out</span> <span class="hljs-keyword">to</span>: /Users/zhangsaidong/Desktop/RxCocoa.xcframework<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>/RxSwift.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-appletvos/RxSwift.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphoneos/RxSwift.framework  -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-iphonesimulator/RxSwift.framework -framework /Users/zhangsaidong/<span class="hljs-keyword">Library</span>/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/<span class="hljs-keyword">Release</span>-watchos/RxSwift.framework  -output ~/Desktop/RxSwift.xcframework<br>xcframework successfully written <span class="hljs-keyword">out</span> <span class="hljs-keyword">to</span>: /Users/zhangsaidong/Desktop/RxSwift.xcframework<br>zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % <br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Perfect部署到云服务器摘录</title>
    <link href="/posts/48709.html"/>
    <url>/posts/48709.html</url>
    
    <content type="html"><![CDATA[<h1 id="Perfect部署到云服务器摘录"><a href="#Perfect部署到云服务器摘录" class="headerlink" title="Perfect部署到云服务器摘录"></a>Perfect部署到云服务器摘录</h1><p>========================<br>部署过程中我先用的下面的教程<br>附链接:<a href="https://blog.csdn.net/z123sen/article/details/80248345">https://blog.csdn.net/z123sen/article/details/80248345</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/4.png"></p><h1 id="遇到的第一个问题"><a href="#遇到的第一个问题" class="headerlink" title="遇到的第一个问题"></a>遇到的第一个问题</h1><h3 id="linux-下解压-tar-gz文件"><a href="#linux-下解压-tar-gz文件" class="headerlink" title="linux 下解压 tar.gz文件"></a>linux 下解压 tar.gz文件</h3><p>百度了之后，使用命令行<code>tar -xvzf filename.tar.gz</code>解决</p><h1 id="遇到的第二个问题"><a href="#遇到的第二个问题" class="headerlink" title="遇到的第二个问题"></a>遇到的第二个问题</h1><h3 id="云服务器搭建Swift环境"><a href="#云服务器搭建Swift环境" class="headerlink" title="云服务器搭建Swift环境"></a>云服务器搭建Swift环境</h3><p>这里我发现前面的教程不够好，总是搭建不成功，于是我又找到了其他教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/5.png"><br>使用这个教程我成功搭建了Swift环境</p><h1 id="遇到的第三个问题"><a href="#遇到的第三个问题" class="headerlink" title="遇到的第三个问题"></a>遇到的第三个问题</h1><h3 id="这段时间github访问不了，需要翻墙"><a href="#这段时间github访问不了，需要翻墙" class="headerlink" title="这段时间github访问不了，需要翻墙"></a>这段时间github访问不了，需要翻墙</h3><p>Perfect有许多依赖库在github上面，所以需要获取到github上的依赖库<br>现在我想到了两个办法，一是服务器翻墙，二是在mac上翻墙，然后将依赖库下载下来，上传到没有被墙的代码托管仓库，我会选择Coding，因为之前就用过，在这之后，修改Perfect各个依赖仓库的代码，把有关github的url全部改成Coding的url,标签尽量保持一致。<br>权衡之下，我选择了第二个办法，linux翻墙也是件麻烦事，mac上我有无数个vpn随便翻<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/6.png"><br>不过也是很麻烦，费了几个小时整理依赖库，修改代码。<br>幸运的是，不出所料，一顿改动后，代码总算是运行起来了，这个时候已经出现了<code>[INFO] Starting HTTP server localhost on 0.0.0.0:8080</code>。<br>也就是说我成功将Perfect项目在服务器跑了起来。</p><h1 id="遇到的第四个问题"><a href="#遇到的第四个问题" class="headerlink" title="遇到的第四个问题"></a>遇到的第四个问题</h1><h3 id="公网无法访问"><a href="#公网无法访问" class="headerlink" title="公网无法访问"></a>公网无法访问</h3><p>到这里，项目只能在服务器localhost上跑，公网访问不到<br>然后我又找了半天，找到Perfect官方文档的一个nginx配置教程，链接是<a href="https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide.zh_CN/deployment-DigitalOcean.md">https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide.zh_CN/deployment-DigitalOcean.md</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/7.png"></p><h1 id="遇到的第五个问题"><a href="#遇到的第五个问题" class="headerlink" title="遇到的第五个问题"></a>遇到的第五个问题</h1><h3 id="nginx配置到想吐"><a href="#nginx配置到想吐" class="headerlink" title="nginx配置到想吐"></a>nginx配置到想吐</h3><p>上面那个文档写得很一般，我配了半天，也只是配出个 bad gateways<br>然后我又找了其他教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/8.png"><br>虽然用处不大，但我还是想到了把<code>http://127.0.0.1:8181</code>换成了<code>http://localhost:8080</code></p><h1 id="遇到的第六个问题"><a href="#遇到的第六个问题" class="headerlink" title="遇到的第六个问题"></a>遇到的第六个问题</h1><h3 id="一顿nigix配置下来，还是无法从公网访问"><a href="#一顿nigix配置下来，还是无法从公网访问" class="headerlink" title="一顿nigix配置下来，还是无法从公网访问"></a>一顿nigix配置下来，还是无法从公网访问</h3><p>然后我又找了一堆内网穿透教程、外网访问服务器教程等等，皆无果<br>我觉得我需要海量Perfect部署至服务器教程，我就又这样搜起来了，总有成功访问的吧。<br>我又找到了下面这个教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/9.png"><br>对比了之前的教程，我发现了一个非常严重却不容易发现的问题</p><h1 id="遇到的第七个问题"><a href="#遇到的第七个问题" class="headerlink" title="遇到的第七个问题"></a>遇到的第七个问题</h1><h3 id="安全组设置问题"><a href="#安全组设置问题" class="headerlink" title="安全组设置问题"></a>安全组设置问题</h3><p>我为Perfect项目设置了8080窗口<br>在云服务器控制台，我以为安全组有个80就可以了，没怎么关注这个安全组，真是上面的教程救我于危难之际。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/10.png"><br>居然要配置这么个东西，端口范围，他配置的是8181/8181<br>那么我岂不是要配置个8080/8080，我就抱着试试的态度，没想到居然成功了，外网一直无法访问，竟然是因为安全组的这个端口范围，我真是一把辛酸泪啊，终于成功了！<br>附上该教程链接，我超喜欢这个教程<a href="https://www.foolishtalk.org/2017/08/21/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E9%83%A8%E7%BD%B2Perfect%E6%9C%8D%E5%8A%A1%E5%99%A8/">https://www.foolishtalk.org/2017/08/21/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E9%83%A8%E7%BD%B2Perfect%E6%9C%8D%E5%8A%A1%E5%99%A8/</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/11.png"><br>这个时候已经可以从公网调用接口了，感觉稳了，一切都值得<br>没想到还有第八个问题</p><h1 id="遇到的第八个问题"><a href="#遇到的第八个问题" class="headerlink" title="遇到的第八个问题"></a>遇到的第八个问题</h1><h3 id="项目无法持续在服务器跑"><a href="#项目无法持续在服务器跑" class="headerlink" title="项目无法持续在服务器跑"></a>项目无法持续在服务器跑</h3><p>我远程连接一关，远程的终端一关，这个服务器他就不跑了，可我需要这个项目在服务器上一直跑下去，这样我才能随时调用接口<br>于是我又搜教程，然后一篇文章给了我启发，利用nohup来让Perfect项目保持运行<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/12.png"><br>我并没有按照上面教程来<br>我使用的是<code>apt install coreutils</code>、<code>vi ~/.profile</code>(我在.profile中按照教程写入了<code>PATH=$PATH:$HOME/bin:/usr/bin</code>)、<code>source ~/.profile</code><br>弄完这些<br>我在Perfect项目目录下使用 <code>swift build</code>、编译完之后使用<code>nohup .build/debug/PerfectTemplate</code>成功地让项目保持运行<br>如果想要停止运行，只需要关闭端口即可<br>即<code>lsof -i:端口号</code>获取到Perfect项目在对应端口号下的PID<br>使用<code>kill 该PID</code>便能关闭端口，停止项目的运行<br>好了，本次Swift Perfect部署至云服务器之旅便到此结束了！！！真的很开心！！！向着全栈的方向越走越远！！！</p>]]></content>
    
    
    <categories>
      
      <category>服务器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Perfect部署到服务器工作记录</title>
    <link href="/posts/50921.html"/>
    <url>/posts/50921.html</url>
    
    <content type="html"><![CDATA[<h1 id="Perfect部署到服务器工作记录"><a href="#Perfect部署到服务器工作记录" class="headerlink" title="Perfect部署到服务器工作记录"></a>Perfect部署到服务器工作记录</h1><p>========================</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">Welcome to Ubuntu 20.04.1 LTS (GNU/Linux 5.4.0-65-generic x86_64)<br><br> * Documentation:  https://help.ubuntu.com<br> * Management:     https://landscape.canonical.com<br> * Support:        https://ubuntu.com/advantage<br><br>Welcome to Alibaba Cloud Elastic Compute Service !<br><br>Last login: Sat Mar 20 16:36:55 2021 from 47.96.60.213<br>root@iZwz9ir4og87e0nnfrmugkZ:~<span class="hljs-comment"># cd ..</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/<span class="hljs-comment"># cd home</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home<span class="hljs-comment"># ls</span><br>Code  Swift  swift-5.3.3-RELEASE-ubuntu20.04  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sig  wget-log<br>root@iZwz9ir4og87e0nnfrmugkZ:/home<span class="hljs-comment"># cd Code</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code<span class="hljs-comment"># ls</span><br>Server-tencet2<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code<span class="hljs-comment"># cd Server-tencet2</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># swift build</span><br>error: root manifest not found<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># ls</span><br>LICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sig<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># cd PerfectTemplate</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># swift build</span><br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git<br>Fetching https://github.com/PerfectlySoft/Perfect-HTTP.git<br>^C<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># cd ..</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># git pull</span><br>Username <span class="hljs-keyword">for</span> <span class="hljs-string">'https://e.coding.net'</span>: 3440217568@qq.com<br>Password <span class="hljs-keyword">for</span> <span class="hljs-string">'https://3440217568@qq.com@e.coding.net'</span>: <br>remote: Enumerating objects: 9, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (9/9), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (5/5), <span class="hljs-keyword">done</span>.<br>remote: Total 7 (delta 2), reused 0 (delta 0), pack-reused 0<br>Unpacking objects: 100% (7/7), 558 bytes | 558.00 KiB/s, <span class="hljs-keyword">done</span>.<br>From https://e.coding.net/Zhangsaidong/server-tencet2/Server-tencet2<br>   5495386..830be1e  master     -&gt; origin/master<br>Updating 5495386..830be1e<br>Fast-forward<br> Perfect/.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata | 7 +++++++<br> 1 file changed, 7 insertions(+)<br> create mode 100644 Perfect/.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># ls</span><br>LICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sig<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># cd PerfectTemplate</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># swift build</span><br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git<br>Fetching https://github.com/PerfectlySoft/Perfect-HTTP.git<br>^C<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># cd ..</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># cd PerfecttTemplate</span><br>-bash: <span class="hljs-built_in">cd</span>: PerfecttTemplate: No such file or directory<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># cd PerfectTemplate</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># ls</span><br>LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># ls -a</span><br>.  ..  .build  .gitignore  LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources  .swiftpm<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># rm -rf .build</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># ls</span><br>LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># ls -a</span><br>.  ..  .gitignore  LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources  .swiftpm<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># swift build</span><br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git<br>Fetching https://github.com/PerfectlySoft/Perfect-HTTP.git<br>^Cerror: Failed to <span class="hljs-built_in">clone</span> https://github.com/PerfectlySoft/Perfect-HTTP.git:<br>    Cloning into bare repository <span class="hljs-string">'/home/Code/Server-tencet2/PerfectTemplate/.build/repositories/Perfect-HTTP-3192655d'</span>...<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># cd Perfect</span><br>-bash: <span class="hljs-built_in">cd</span>: Perfect: No such file or directory<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># ls</span><br>LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># cd Package.swift</span><br>-bash: <span class="hljs-built_in">cd</span>: Package.swift: Not a directory<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># vi Package.swift</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># cd ..</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># git pull</span><br>Username <span class="hljs-keyword">for</span> <span class="hljs-string">'https://e.coding.net'</span>: 3440217568@qq.com<br>Password <span class="hljs-keyword">for</span> <span class="hljs-string">'https://3440217568@qq.com@e.coding.net'</span>: <br>remote: Enumerating objects: 7, <span class="hljs-keyword">done</span>.<br>remote: Counting objects: 100% (7/7), <span class="hljs-keyword">done</span>.<br>remote: Compressing objects: 100% (4/4), <span class="hljs-keyword">done</span>.<br>remote: Total 4 (delta 3), reused 0 (delta 0), pack-reused 0<br>Unpacking objects: 100% (4/4), 322 bytes | 322.00 KiB/s, <span class="hljs-keyword">done</span>.<br>From https://e.coding.net/Zhangsaidong/server-tencet2/Server-tencet2<br>   830be1e..a6d4c36  master     -&gt; origin/master<br>Updating 830be1e..a6d4c36<br>Fast-forward<br> PerfectTemplate/Package.swift | 2 +-<br> 1 file changed, 1 insertion(+), 1 deletion(-)<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># ls</span><br>LICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sig<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># cd PerfectTemplatet</span><br>-bash: <span class="hljs-built_in">cd</span>: PerfectTemplatet: No such file or directory<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># cd PerfectTemplate</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># swift build</span><br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git<br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git<br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.git<br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.git<br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.git<br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.git<br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.git<br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git<br>https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git @ 4.0.0: error: duplicate dependency <span class="hljs-string">'perfectlib-tencent'</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># swift build</span><br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git<br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git<br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.git<br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.git<br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.git<br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.git<br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.git<br>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git<br>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.git<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.git at 4.0.2<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.git at 4.0.0<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.git at 0.0.4<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.git at 4.0.1<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.git at 3.1.0<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git at 4.0.0<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git at 3.0.23<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git at 3.3.0<br>Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.git<br>Resolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.git at 3.0.7<br>warning: failed to retrieve search paths with pkg-config; maybe pkg-config is not installed<br>warning: you may be able to install openssl using your system-packager:<br>    apt-get install openssl libssl-dev<br><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable <span class="hljs-string">'resultList'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                guard result == 0, var resultList = resultListPtr <span class="hljs-keyword">else</span> {<br>                                   ~~~ ^<br>                                   <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable <span class="hljs-string">'addr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable <span class="hljs-string">'len'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable <span class="hljs-string">'addr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable <span class="hljs-string">'len'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable <span class="hljs-string">'nothingPtr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable <span class="hljs-string">'nothing'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable <span class="hljs-string">'nothingPtr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable <span class="hljs-string">'nothing'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable <span class="hljs-string">'resultList'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                guard result == 0, var resultList = resultListPtr <span class="hljs-keyword">else</span> {<br>                                   ~~~ ^<br>                                   <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable <span class="hljs-string">'addr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable <span class="hljs-string">'len'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable <span class="hljs-string">'addr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable <span class="hljs-string">'len'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable <span class="hljs-string">'nothingPtr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable <span class="hljs-string">'nothing'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable <span class="hljs-string">'nothingPtr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable <span class="hljs-string">'nothing'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable <span class="hljs-string">'resultList'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                guard result == 0, var resultList = resultListPtr <span class="hljs-keyword">else</span> {<br>                                   ~~~ ^<br>                                   <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable <span class="hljs-string">'addr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable <span class="hljs-string">'len'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable <span class="hljs-string">'addr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable <span class="hljs-string">'len'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable <span class="hljs-string">'nothingPtr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable <span class="hljs-string">'nothing'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable <span class="hljs-string">'nothingPtr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable <span class="hljs-string">'nothing'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable <span class="hljs-string">'resultList'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                guard result == 0, var resultList = resultListPtr <span class="hljs-keyword">else</span> {<br>                                   ~~~ ^<br>                                   <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable <span class="hljs-string">'addr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable <span class="hljs-string">'len'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable <span class="hljs-string">'addr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var addr = UnsafeMutablePointer&lt;sockaddr_un&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable <span class="hljs-string">'len'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var len = UnsafeMutablePointer&lt;socklen_t&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable <span class="hljs-string">'nothingPtr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable <span class="hljs-string">'nothing'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable <span class="hljs-string">'nothingPtr'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothingPtr = UnsafeMutablePointer&lt;iovec&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable <span class="hljs-string">'nothing'</span> was never mutated; consider changing to <span class="hljs-string">'let'</span> constant<br>                var nothing = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: 1)<br>                ~~~ ^<br>                <span class="hljs-built_in">let</span><br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: <span class="hljs-string">'TLSv1_2_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1_2: newSslCtx = SSL_CTX_new(TLSv1_2_method())<br>                                                       ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: <span class="hljs-string">'TLSv1_1_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1_1: newSslCtx = SSL_CTX_new(TLSv1_1_method())<br>                                                       ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: <span class="hljs-string">'TLSv1_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1: newSslCtx = SSL_CTX_new(TLSv1_method())<br>                                                     ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: <span class="hljs-string">'TLSv1_2_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1_2: newSslCtx = SSL_CTX_new(TLSv1_2_method())<br>                                                       ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: <span class="hljs-string">'TLSv1_1_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1_1: newSslCtx = SSL_CTX_new(TLSv1_1_method())<br>                                                       ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: <span class="hljs-string">'TLSv1_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1: newSslCtx = SSL_CTX_new(TLSv1_method())<br>                                                     ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: <span class="hljs-string">'TLSv1_2_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1_2: newSslCtx = SSL_CTX_new(TLSv1_2_method())<br>                                                       ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: <span class="hljs-string">'TLSv1_1_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1_1: newSslCtx = SSL_CTX_new(TLSv1_1_method())<br>                                                       ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: <span class="hljs-string">'TLSv1_method()'</span> is deprecated<br>                <span class="hljs-keyword">case</span> .tlsV1: newSslCtx = SSL_CTX_new(TLSv1_method())<br>                                                     ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPRequestHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPResponseHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPMethod'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                public var hashValue: Int {<br>                           ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPRequestHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPResponseHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPMethod'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                public var hashValue: Int {<br>                           ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPRequestHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPResponseHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPMethod'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                public var hashValue: Int {<br>                           ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPRequestHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPResponseHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPMethod'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                public var hashValue: Int {<br>                           ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPRequestHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPResponseHeader.Name'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                        public var hashValue: Int {<br>                                   ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTPMethod'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                public var hashValue: Int {<br>                           ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                                        <span class="hljs-built_in">let</span> qPtr = UnsafePointer&lt;UInt8&gt;(byts)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="hljs-string">'Hashable.hashValue'</span> is deprecated as a protocol requirement; conform <span class="hljs-built_in">type</span> <span class="hljs-string">'HTTP2Session'</span> to <span class="hljs-string">'Hashable'</span> by implementing <span class="hljs-string">'hash(into:)'</span> instead<br>                var hashValue: Int { <span class="hljs-built_in">return</span> Int(net.fd.fd) }<br>                    ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="hljs-string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        stream.next_in = UnsafeMutablePointer(mutating: bytes)<br>                                                                        ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="hljs-string">'UnsafeMutableRawPointer'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(mutating:)'</span><br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="hljs-string">'withUnsafeBytes'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                        lastHeaderName = String(validatingUTF8: UnsafeMutableRawPointer(mutating: workingBuffer).assumingMemoryBound(to: Int8.self))<br>                                                                                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="hljs-keyword">in</span> a dangling pointer<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                    ^~~~~~~~~~~~~~~~<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="hljs-string">'[UInt8]'</span> to <span class="hljs-string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="hljs-keyword">for</span> the duration of the call to <span class="hljs-string">'init(_:)'</span><br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="hljs-string">'withUnsafeBufferPointer'</span> method on Array <span class="hljs-keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="hljs-keyword">for</span> a defined scope<br>                _ = UnsafePointer(b).withMemoryRebound(to: Int8.self, capacity: b.count) {<br>                                  ^<br>[88/88] Linking PerfectTemplate<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># .build/debug/PerfectTemplate</span><br>[INFO] Starting HTTP server localhost on 0.0.0.0:8181<br>^C<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="hljs-comment"># cd ..</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="hljs-comment"># cd ..</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code<span class="hljs-comment"># cd ..</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home<span class="hljs-comment"># mkdir WebService</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home<span class="hljs-comment"># cd WebService</span><br>root@iZwz9ir4og87e0nnfrmugkZ:/home/WebService<span class="hljs-comment"># swift package init --type=executable</span><br>Creating executable package: WebService<br>Creating Package.swift<br>Creating README.md<br>Creating .gitignore<br>Creating Sources/<br>Creating Sources/WebService/main.swift<br>Creating Tests/<br>Creating Tests/LinuxMain.swift<br>Creating Tests/WebServiceTests/<br>Creating Tests/WebServiceTests/WebServiceTests.swift<br>Creating Tests/WebServiceTests/XCTestManifests.swift<br>root@iZwz9ir4og87e0nnfrmugkZ:/home/WebService<span class="hljs-comment"># </span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>服务器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git发布tag</title>
    <link href="/posts/40815.html"/>
    <url>/posts/40815.html</url>
    
    <content type="html"><![CDATA[<h1 id="git发布tag"><a href="#git发布tag" class="headerlink" title="git发布tag"></a>git发布tag</h1><p>========================<br>有些命令行老是要找半天，这里记录下git发布tag<br>举例来说，要发布一个3.3.0的tag ，就用<code>git tag 3.3.0</code><br>然后推送到远程仓库用<code>git push origin 3.3.0</code>，注意<code>origin</code>不能省略<br>删除tag用<code>git tag -d 3.3.0</code><br>查看tag用<code>git tag</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % git tag 3.3.0<br>zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % git push 3.3.0<br>fatal: <span class="hljs-string">'3.3.0'</span> does not appear to be a git repository<br>fatal: Could not <span class="hljs-built_in">read</span> from remote repository.<br><br>Please make sure you have the correct access rights<br>and the repository exists.<br>zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % git push origin 3.3.0<br>Total 0 (delta 0), reused 0 (delta 0)<br>To https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git<br> * [new tag]         3.3.0 -&gt; 3.3.0<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>版本控制git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac命令行关闭端口</title>
    <link href="/posts/15967.html"/>
    <url>/posts/15967.html</url>
    
    <content type="html"><![CDATA[<h1 id="Mac命令行关闭端口"><a href="#Mac命令行关闭端口" class="headerlink" title="Mac命令行关闭端口"></a>Mac命令行关闭端口</h1><p>========================</p><h2 id="lsof-i-端口号"><a href="#lsof-i-端口号" class="headerlink" title="lsof -i:端口号"></a>lsof -i:端口号</h2><p>这里项目PefectTemplate占用了8181端口号，因此我输入的是<code>lsof -i:8181</code>，可以看到PerfectTemplate的进程ID为1869。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/lsof.png" alt="查看端口号"></p><h2 id="kill-PID"><a href="#kill-PID" class="headerlink" title="kill PID"></a>kill PID</h2><p>得到PID为1869后，我需要关闭端口，只需要使用<code>kill 1869</code>即可。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">zhangsaidong@zhangsaidongs-MacBook-Pro PerfectTemplate % lsof -i:8181<br>COMMAND    PID         USER   FD   TYPE            DEVICE SIZE/OFF NODE NAME<br>Google     574 zhangsaidong   38u  IPv4 0xe91302581543067      0t0  TCP localhost:56525-&gt;localhost:8181 (ESTABLISHED)<br>Google     574 zhangsaidong   44u  IPv4 0xe91302581f1b067      0t0  TCP localhost:56526-&gt;localhost:8181 (ESTABLISHED)<br>PerfectTe 1869 zhangsaidong    3u  IPv4 0xe91302587abea7f      0t0  TCP *:8181 (LISTEN)<br>PerfectTe 1869 zhangsaidong    4u  IPv4 0xe91302582798067      0t0  TCP localhost:8181-&gt;localhost:56525 (ESTABLISHED)<br>PerfectTe 1869 zhangsaidong    5u  IPv4 0xe91302579eaa807      0t0  TCP localhost:8181-&gt;localhost:56526 (ESTABLISHED)<br>zhangsaidong@zhangsaidongs-MacBook-Pro PerfectTemplate % <span class="hljs-built_in">kill</span> 1869<br></code></pre></td></tr></tbody></table></figure><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><h3 id="关闭前"><a href="#关闭前" class="headerlink" title="关闭前"></a>关闭前</h3><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/%E5%85%B3%E9%97%AD%E5%89%8D.png" alt="关闭前"></p><h3 id="关闭后"><a href="#关闭后" class="headerlink" title="关闭后"></a>关闭后</h3><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/%E5%85%B3%E9%97%AD%E5%90%8E.png" alt="关闭后"><br>至此端口被成功关闭。</p>]]></content>
    
    
    <categories>
      
      <category>脚本语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swift多线程摘录</title>
    <link href="/posts/58771.html"/>
    <url>/posts/58771.html</url>
    
    <content type="html"><![CDATA[<h1 id="Swift-多线程摘录"><a href="#Swift-多线程摘录" class="headerlink" title="Swift 多线程摘录"></a>Swift 多线程摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210316Swift%E5%A4%9A%E7%BA%BF%E7%A8%8B/Swift%E5%A4%9A%E7%BA%BF%E7%A8%8B.png" alt="Swift多线程"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>多线程</tag>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQLite.swift使用</title>
    <link href="/posts/63335.html"/>
    <url>/posts/63335.html</url>
    
    <content type="html"><![CDATA[<h1 id="SQLite-swift使用"><a href="#SQLite-swift使用" class="headerlink" title="SQLite.swift使用"></a>SQLite.swift使用</h1><p>========================<br>对于这个，我只想上代码。</p><h2 id="数据库代码示例"><a href="#数据库代码示例" class="headerlink" title="数据库代码示例"></a>数据库代码示例</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  DataBase.swift</span><br><span class="hljs-comment">//  RunInto</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东（手机：15674119605） on 2021/3/3.</span><br><span class="hljs-comment">//  Copyright © 2021 adong666666. All rights reserved.</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-keyword">import</span> Foundation<br><span class="hljs-keyword">import</span> SQLite<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span>  <span class="hljs-title">DataCenterConstant</span> </span>{<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">let</span> dbName <span class="hljs-operator">=</span> <span class="hljs-string">"db.sqlite"</span><br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">let</span> dbFilePath <span class="hljs-operator">=</span> <span class="hljs-type">NSHomeDirectory</span>() <span class="hljs-operator">+</span> <span class="hljs-string">"/Documents/"</span> <span class="hljs-operator">+</span> <span class="hljs-type">DataCenterConstant</span>.dbName<br>}<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DataBase</span> </span>{<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">let</span> shared <span class="hljs-operator">=</span> <span class="hljs-type">DataBase</span>()<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">var</span> dataBase: <span class="hljs-type">Connection</span>? <span class="hljs-operator">=</span> {<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">try</span> <span class="hljs-type">Connection</span>(<span class="hljs-type">DataCenterConstant</span>.dbFilePath)<br>        } <span class="hljs-keyword">catch</span> {<br>            <span class="hljs-built_in">assertionFailure</span>(<span class="hljs-string">"Fail to Create DataBase"</span>)<br>            <span class="hljs-built_in">debugPrint</span>(error)<br>        }<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>    }()<br>    <br>    <span class="hljs-keyword">var</span> cuturalRelicsIntroduction <span class="hljs-operator">=</span> <span class="hljs-type">CulturalRelicsIntroduction</span>()<br>    <span class="hljs-function"><span class="hljs-keyword">init</span>()</span> {<br>        cuturalRelicsIntroduction.setupTable()<br>    }<br>}<br><br><span class="hljs-comment">// MARK: - Query</span><br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">DataBase</span> </span>{<br>    <span class="hljs-comment">// 查询所有文物介绍</span><br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">queryCulturalRelicsIntroduction</span>()</span> -&gt; [<span class="hljs-type">Introduction</span>] {<br>        <span class="hljs-keyword">var</span> intro <span class="hljs-operator">=</span> [<span class="hljs-type">Introduction</span>]()<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">for</span> value <span class="hljs-keyword">in</span> <span class="hljs-type">Array</span>(<span class="hljs-keyword">try</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">!</span>.prepare(cuturalRelicsIntroduction.table)) {<br>                <span class="hljs-keyword">let</span> idForDB <span class="hljs-operator">=</span> value[cuturalRelicsIntroduction.id]<br>                <span class="hljs-keyword">let</span> name <span class="hljs-operator">=</span> value[cuturalRelicsIntroduction.name]<br>                <span class="hljs-keyword">let</span> introduction <span class="hljs-operator">=</span> value[cuturalRelicsIntroduction.introduction]<br>                <span class="hljs-keyword">let</span> photo <span class="hljs-operator">=</span> value[cuturalRelicsIntroduction.photo]<br>                <span class="hljs-keyword">let</span> remark <span class="hljs-operator">=</span> value[cuturalRelicsIntroduction.remark]<br>                <span class="hljs-keyword">let</span> tempIntroduction <span class="hljs-operator">=</span> <span class="hljs-type">Introduction</span>(idForDataBase: idForDB, image: photo, title: <span class="hljs-type">I18n</span>.localizedString(name), text: <span class="hljs-type">I18n</span>.localizedString(introduction), date: <span class="hljs-type">I18n</span>.localizedString(remark))<br>                intro.append(tempIntroduction)<br>            }<br>        } <span class="hljs-keyword">catch</span> {<br>            <span class="hljs-built_in">assertionFailure</span>(<span class="hljs-string">"<span class="hljs-subst">\(error)</span>"</span>)<br>        }<br>        <span class="hljs-keyword">return</span> intro<br>    }<br>    <span class="hljs-comment">//查询个别文物介绍</span><br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">queryIntroduction</span>(<span class="hljs-params">with</span> <span class="hljs-params">id</span>: <span class="hljs-type">Int64</span>)</span> -&gt; <span class="hljs-type">Introduction</span>? {<br>        <span class="hljs-keyword">let</span> filter <span class="hljs-operator">=</span> cuturalRelicsIntroduction.table.filter(id <span class="hljs-operator">==</span> cuturalRelicsIntroduction.id)<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> pluck <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.pluck(filter) <span class="hljs-keyword">else</span> {<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>            }<br>            <span class="hljs-keyword">return</span>  <span class="hljs-type">Introduction</span>(idForDataBase: pluck[cuturalRelicsIntroduction.id],<br>                                 image: pluck[cuturalRelicsIntroduction.photo],<br>                                 title: pluck[cuturalRelicsIntroduction.name],<br>                                 text: pluck[cuturalRelicsIntroduction.introduction],<br>                                 date: pluck[cuturalRelicsIntroduction.remark])<br>        } <span class="hljs-keyword">catch</span> {<br>            <span class="hljs-built_in">assertionFailure</span>()<br>        }<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>    }<br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">queryIntroduction</span>(<span class="hljs-params">with</span> <span class="hljs-params">name</span>: <span class="hljs-type">String</span>)</span> -&gt; <span class="hljs-type">Introduction</span>? {<br>        <span class="hljs-keyword">let</span> filter <span class="hljs-operator">=</span> cuturalRelicsIntroduction.table.filter(name <span class="hljs-operator">==</span> cuturalRelicsIntroduction.name)<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> pluck <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.pluck(filter) <span class="hljs-keyword">else</span> {<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>            }<br>            <span class="hljs-keyword">return</span>  <span class="hljs-type">Introduction</span>(idForDataBase: pluck[cuturalRelicsIntroduction.id],<br>                                 image: pluck[cuturalRelicsIntroduction.photo],<br>                                 title: pluck[cuturalRelicsIntroduction.name],<br>                                 text: pluck[cuturalRelicsIntroduction.introduction],<br>                                 date: pluck[cuturalRelicsIntroduction.remark])<br>        } <span class="hljs-keyword">catch</span> {<br>            <span class="hljs-built_in">assertionFailure</span>()<br>        }<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>    }<br>}<br><br><span class="hljs-comment">// MARK: - Insert</span><br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">DataBase</span> </span>{<br>    <span class="hljs-comment">//插入文物介绍</span><br>    <span class="hljs-keyword">@discardableResult</span><br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">insertCulturalRelicsIntroduction</span>(<span class="hljs-params">with</span> <span class="hljs-params">intro</span>: <span class="hljs-type">Introduction</span>)</span> -&gt; (<span class="hljs-type">Int64</span>?, <span class="hljs-type">String</span>?) {<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">try</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.pluck(cuturalRelicsIntroduction.table.filter(cuturalRelicsIntroduction.id <span class="hljs-operator">==</span> intro.idForDataBase))) <span class="hljs-operator">!=</span> <span class="hljs-literal">nil</span> {<br>                <span class="hljs-keyword">return</span> (<span class="hljs-literal">nil</span>, <span class="hljs-string">"the cultural relics exsit"</span>)<br>            }<br>            <span class="hljs-keyword">let</span> insert <span class="hljs-operator">=</span> cuturalRelicsIntroduction.table.insert(cuturalRelicsIntroduction.name <span class="hljs-operator">&lt;-</span> intro.title,<br>                                                                cuturalRelicsIntroduction.id <span class="hljs-operator">&lt;-</span> intro.idForDataBase,<br>                                                                cuturalRelicsIntroduction.introduction <span class="hljs-operator">&lt;-</span> intro.text,<br>                                                                cuturalRelicsIntroduction.photo <span class="hljs-operator">&lt;-</span> intro.image,<br>                                                                cuturalRelicsIntroduction.remark <span class="hljs-operator">&lt;-</span> intro.date)<br>            <span class="hljs-keyword">let</span> insertIntroduction <span class="hljs-operator">=</span> <span class="hljs-keyword">try?</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.run(insert)<br>            <span class="hljs-keyword">return</span> (insertIntroduction, <span class="hljs-string">"inserted successfully"</span>)<br>        } <span class="hljs-keyword">catch</span> {<br>            <span class="hljs-built_in">assertionFailure</span>()<br>        }<br>        <span class="hljs-keyword">return</span>(<span class="hljs-literal">nil</span>, <span class="hljs-string">"inserted unsuccessfully"</span>)<br>    }<br>}<br><br><span class="hljs-comment">// MARK: - Delete</span><br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">DataBase</span> </span>{<br>    <span class="hljs-comment">//删除文物介绍</span><br>    <span class="hljs-keyword">@discardableResult</span><br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">deletetCulturalRelicsIntroduction</span>(<span class="hljs-params">with</span> <span class="hljs-params">id</span>: <span class="hljs-type">Int64</span>)</span> -&gt; (<span class="hljs-type">Int</span>?, <span class="hljs-type">String</span>?) {<br>        <span class="hljs-keyword">let</span> filter <span class="hljs-operator">=</span> cuturalRelicsIntroduction.table.filter(id <span class="hljs-operator">==</span> cuturalRelicsIntroduction.id)<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">let</span> delete <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.run(filter.delete())<br>            <span class="hljs-keyword">return</span> (delete, <span class="hljs-string">"deleted successfully"</span>)<br>        } <span class="hljs-keyword">catch</span> {<br>            <span class="hljs-built_in">assertionFailure</span>()<br>        }<br>        <span class="hljs-keyword">return</span> (<span class="hljs-literal">nil</span>, <span class="hljs-string">"deleted unsuccessfully"</span>)<br>    }<br>    <span class="hljs-keyword">@discardableResult</span><br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">deletetCulturalRelicsIntroduction</span>(<span class="hljs-params">with</span> <span class="hljs-params">name</span>: <span class="hljs-type">String</span>)</span> -&gt; (<span class="hljs-type">Int</span>?, <span class="hljs-type">String</span>?) {<br>        <span class="hljs-keyword">let</span> filter <span class="hljs-operator">=</span> cuturalRelicsIntroduction.table.filter(name <span class="hljs-operator">==</span> cuturalRelicsIntroduction.name)<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">let</span> deleteIntroduction <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.run(filter.delete())<br>            <span class="hljs-keyword">return</span> (deleteIntroduction, <span class="hljs-string">"deleted successfully"</span>)<br>        } <span class="hljs-keyword">catch</span> {<br>            <span class="hljs-built_in">assertionFailure</span>()<br>        }<br>        <span class="hljs-keyword">return</span> (<span class="hljs-literal">nil</span>, <span class="hljs-string">"deleted unsuccessfully"</span>)<br>    }<br>}<br><br><span class="hljs-comment">// MARK: - Update</span><br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">DataBase</span> </span>{<br>    <span class="hljs-comment">//修改文物介绍数据</span><br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">update</span>(<span class="hljs-keyword">_</span> <span class="hljs-params">intro</span>: <span class="hljs-type">Introduction</span>)</span> -&gt; (<span class="hljs-type">Int</span>?, <span class="hljs-type">String</span>?) {<br>        <span class="hljs-keyword">guard</span> (<span class="hljs-keyword">try?</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.pluck(cuturalRelicsIntroduction.table.filter(cuturalRelicsIntroduction.id <span class="hljs-operator">==</span> intro.idForDataBase))) <span class="hljs-operator">!=</span> <span class="hljs-literal">nil</span> <span class="hljs-keyword">else</span> {<br>            <span class="hljs-keyword">return</span> (<span class="hljs-literal">nil</span>, <span class="hljs-string">"the cultural relics not exsit"</span>)<br>        }<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">let</span> update <span class="hljs-operator">=</span> cuturalRelicsIntroduction.table.update(cuturalRelicsIntroduction.name <span class="hljs-operator">&lt;-</span> intro.title,<br>                                                                cuturalRelicsIntroduction.id <span class="hljs-operator">&lt;-</span> intro.idForDataBase,<br>                                                                cuturalRelicsIntroduction.introduction <span class="hljs-operator">&lt;-</span> intro.text,<br>                                                                cuturalRelicsIntroduction.photo <span class="hljs-operator">&lt;-</span> intro.image,<br>                                                                cuturalRelicsIntroduction.remark <span class="hljs-operator">&lt;-</span> intro.date)<br>            <span class="hljs-keyword">let</span> updateIntroduction <span class="hljs-operator">=</span> <span class="hljs-keyword">try</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.run(update)<br>            <span class="hljs-keyword">return</span> (updateIntroduction, <span class="hljs-string">"updated successfully"</span>)<br>        } <span class="hljs-keyword">catch</span> {<br>            <span class="hljs-built_in">assertionFailure</span>()<br>        }<br>        <span class="hljs-keyword">return</span> (<span class="hljs-literal">nil</span>, <span class="hljs-string">"updated unsuccessfully"</span>)<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="建表示例"><a href="#建表示例" class="headerlink" title="建表示例"></a>建表示例</h2><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-comment">//</span><br><span class="hljs-comment">//  CulturalRelicsIntroduction.swift</span><br><span class="hljs-comment">//  RunInto</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">//  Created by 张赛东（手机：15674119605） on 2021/3/3.</span><br><span class="hljs-comment">//  Copyright © 2021 adong666666. All rights reserved.</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-keyword">import</span> Foundation<br><span class="hljs-keyword">import</span> SQLite<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CulturalRelicsIntroduction</span> </span>{<br>    <span class="hljs-keyword">let</span> table <span class="hljs-operator">=</span> <span class="hljs-type">Table</span>(<span class="hljs-string">"CulturalRelicsIntroduction"</span>)<br>    <span class="hljs-keyword">let</span> id <span class="hljs-operator">=</span> <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Int64</span>&gt;(<span class="hljs-string">"id"</span>)<br>    <span class="hljs-keyword">let</span> name <span class="hljs-operator">=</span> <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">String</span>&gt;(<span class="hljs-string">"name"</span>)<br>    <span class="hljs-keyword">let</span> introduction <span class="hljs-operator">=</span> <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">String</span>&gt;(<span class="hljs-string">"introduction"</span>)<br>    <span class="hljs-keyword">let</span> photo <span class="hljs-operator">=</span> <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">String</span>&gt;(<span class="hljs-string">"photo"</span>)<br>    <span class="hljs-keyword">let</span> remark <span class="hljs-operator">=</span> <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">String</span>&gt;(<span class="hljs-string">"remark"</span>)<br>}<br><span class="hljs-class"><span class="hljs-keyword">extension</span> <span class="hljs-title">CulturalRelicsIntroduction</span> </span>{<br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">setupTable</span>()</span> {<br>        <span class="hljs-keyword">do</span> {<br>            <span class="hljs-keyword">guard</span> <span class="hljs-keyword">let</span> cmd <span class="hljs-operator">=</span> createTableCMD() <span class="hljs-keyword">else</span> { <span class="hljs-keyword">return</span> }<br>            <span class="hljs-keyword">try</span> <span class="hljs-type">DataBase</span>.dataBase<span class="hljs-operator">?</span>.run(cmd)<br>        } <span class="hljs-keyword">catch</span> { <span class="hljs-built_in">print</span>(error) }<br>    }<br>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">createTableCMD</span>()</span> -&gt; <span class="hljs-type">String</span>? {<br>        <span class="hljs-keyword">return</span> table.create(ifNotExists: <span class="hljs-literal">true</span>) {<br>            <span class="hljs-variable">$0</span>.column(id, primaryKey: <span class="hljs-literal">true</span>)<br>            <span class="hljs-variable">$0</span>.column(name)<br>            <span class="hljs-variable">$0</span>.column(introduction)<br>            <span class="hljs-variable">$0</span>.column(photo)<br>            <span class="hljs-variable">$0</span>.column(remark)<br>        }<br>    }<br>}<br><br></code></pre></td></tr></tbody></table></figure><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用</p><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">DataBase</span>.shared.insertCulturalRelicsIntroduction(with: intro<span class="hljs-operator">!</span>)<br></code></pre></td></tr></tbody></table></figure><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-type">Help</span>(show: <span class="hljs-variable">$showContent</span>, datas: <span class="hljs-type">DataBase</span>.shared.queryCulturalRelicsIntroduction())<br></code></pre></td></tr></tbody></table></figure><h2 id="查看sqlite文件"><a href="#查看sqlite文件" class="headerlink" title="查看sqlite文件"></a>查看sqlite文件</h2><p>下载真机的沙盒数据，查看后缀名为.sqlite的文件，即为生成的数据库，在应用商店搜“sqlite”,有很多软件可以查看<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331SQLite.swift%E4%BD%BF%E7%94%A8/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331SQLite.swift%E4%BD%BF%E7%94%A8/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%932.png"></p><h2 id="导出的表"><a href="#导出的表" class="headerlink" title="导出的表"></a>导出的表</h2><table><thead><tr><th align="left">id</th><th align="left">name</th><th align="left">introduction</th><th align="left">photo</th><th align="left">remark</th></tr></thead><tbody><tr><td align="left">20210303063005</td><td align="left">bottle</td><td align="left">郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。</td><td align="left">郎窑红釉穿带直口瓶</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063006</td><td align="left">box</td><td align="left">张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。</td><td align="left">张成造款雕漆云纹盒</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063007</td><td align="left">clock</td><td align="left">黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。</td><td align="left">彩漆描金楼阁式自开门群仙祝寿御制钟</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063008</td><td align="left">cup</td><td align="left">宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。</td><td align="left">乾隆款金瓯永固杯</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063009</td><td align="left">ear_furnace</td><td align="left">掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。</td><td align="left">掐丝珐琅缠枝莲纹象耳炉</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063010</td><td align="left">grain_furnace</td><td align="left">青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”</td><td align="left">青玉云龙纹炉</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063011</td><td align="left">painting</td><td align="left">《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。</td><td align="left">清明上河图</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063012</td><td align="left">placard</td><td align="left">西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。</td><td align="left">平复帖</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063013</td><td align="left">zun</td><td align="left">青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。</td><td align="left">酗亚方尊</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063014</td><td align="left">magpie</td><td align="left">沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。</td><td align="left">沈子蕃缂丝《梅鹊图》轴</td><td align="left">故宫镇馆之宝</td></tr></tbody></table><h2 id="导出的JSON"><a href="#导出的JSON" class="headerlink" title="导出的JSON"></a>导出的JSON</h2><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs json">[<br>  {<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"郎窑红釉穿带直口瓶"</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"bottle"</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。"</span>,<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063005</span><br>  },<br>  {<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063006</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span>,<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"张成造款雕漆云纹盒"</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"box"</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。"</span><br>  },<br>  {<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063007</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。"</span>,<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"彩漆描金楼阁式自开门群仙祝寿御制钟"</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"clock"</span><br>  },<br>  {<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"cup"</span>,<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"乾隆款金瓯永固杯"</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。"</span>,<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063008</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span><br>  },<br>  {<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"掐丝珐琅缠枝莲纹象耳炉"</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。"</span>,<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063009</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"ear_furnace"</span><br>  },<br>  {<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063010</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"grain_furnace"</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”"</span>,<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"青玉云龙纹炉"</span><br>  },<br>  {<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span>,<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"清明上河图"</span>,<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063011</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。"</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"painting"</span><br>  },<br>  {<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"平复帖"</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。"</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"placard"</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span>,<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063012</span><br>  },<br>  {<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063013</span>,<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"酗亚方尊"</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"zun"</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。"</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span><br>  },<br>  {<br>    <span class="hljs-attr">"id"</span> : <span class="hljs-number">20210303063014</span>,<br>    <span class="hljs-attr">"name"</span> : <span class="hljs-string">"magpie"</span>,<br>    <span class="hljs-attr">"photo"</span> : <span class="hljs-string">"沈子蕃缂丝《梅鹊图》轴"</span>,<br>    <span class="hljs-attr">"introduction"</span> : <span class="hljs-string">"沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。"</span>,<br>    <span class="hljs-attr">"remark"</span> : <span class="hljs-string">"故宫镇馆之宝"</span><br>  }<br>]<br></code></pre></td></tr></tbody></table></figure><h2 id="导出的插入语句"><a href="#导出的插入语句" class="headerlink" title="导出的插入语句"></a>导出的插入语句</h2><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">BEGIN</span>;<br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063005</span>, <span class="hljs-string">'bottle'</span>, <span class="hljs-string">'郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。'</span>, <span class="hljs-string">'郎窑红釉穿带直口瓶'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063006</span>, <span class="hljs-string">'box'</span>, <span class="hljs-string">'张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。'</span>, <span class="hljs-string">'张成造款雕漆云纹盒'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063007</span>, <span class="hljs-string">'clock'</span>, <span class="hljs-string">'黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。'</span>, <span class="hljs-string">'彩漆描金楼阁式自开门群仙祝寿御制钟'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063008</span>, <span class="hljs-string">'cup'</span>, <span class="hljs-string">'宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。'</span>, <span class="hljs-string">'乾隆款金瓯永固杯'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063009</span>, <span class="hljs-string">'ear_furnace'</span>, <span class="hljs-string">'掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。'</span>, <span class="hljs-string">'掐丝珐琅缠枝莲纹象耳炉'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063010</span>, <span class="hljs-string">'grain_furnace'</span>, <span class="hljs-string">'青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”'</span>, <span class="hljs-string">'青玉云龙纹炉'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063011</span>, <span class="hljs-string">'painting'</span>, <span class="hljs-string">'《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。'</span>, <span class="hljs-string">'清明上河图'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063012</span>, <span class="hljs-string">'placard'</span>, <span class="hljs-string">'西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。'</span>, <span class="hljs-string">'平复帖'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063013</span>, <span class="hljs-string">'zun'</span>, <span class="hljs-string">'青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。'</span>, <span class="hljs-string">'酗亚方尊'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> CulturalRelicsIntroduction(id, name, introduction, photo, remark) <span class="hljs-keyword">VALUES</span>(<span class="hljs-number">20210303063014</span>, <span class="hljs-string">'magpie'</span>, <span class="hljs-string">'沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。'</span>, <span class="hljs-string">'沈子蕃缂丝《梅鹊图》轴'</span>, <span class="hljs-string">'故宫镇馆之宝'</span>);<br><br><span class="hljs-keyword">COMMIT</span>;<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>DataBase</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PodfileKit summarizes the common iOS (Swift) third-party frameworks on GitHub (cocoapods)</title>
    <link href="/posts/50954.html"/>
    <url>/posts/50954.html</url>
    
    <content type="html"><![CDATA[<h1 id="PodfileKit"><a href="#PodfileKit" class="headerlink" title="PodfileKit"></a>PodfileKit</h1><p>========================</p><p>Easy Podfile !</p><p>PodfileKit summarizes the common iOS (Swift) third-party frameworks on GitHub, and classifies the frameworks, which provides convenience for users to manage the third-party frameworks.</p><h1 id="github：https-github-com-adong666666-PodfileKit"><a href="#github：https-github-com-adong666666-PodfileKit" class="headerlink" title="github：https://github.com/adong666666/PodfileKit"></a>github：<a href="https://github.com/adong666666/PodfileKit">https://github.com/adong666666/PodfileKit</a></h1><ul><li><a href="#set-up-platform">Set up Platform</a></li><li><a href="#designated-third-party-framework">Designated Third Party framework</a></li><li><a href="#framework-classification">Framework Classification</a></li><li><a href="#subframework">Subframework</a></li><li><a href="#set-up-groups">Set up groups</a></li><li><a href="#use">Use</a></li><li><a href="#contributing">Contributing</a></li><li><a href="#license">License</a><h2 id="Set-up-Platform"><a href="#Set-up-Platform" class="headerlink" title="Set up Platform"></a>Set up Platform</h2><code>platform:ios '13.0'</code>. The <code>'13.0'</code>here is the lowest iOS system version that the app can support. You can replace it with <code>'11.0', '12.3' , '14.0'</code>and so on.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/SetUpPlatform.png" alt="SetUpPlatform"></p><h2 id="Designated-Third-Party-framework"><a href="#Designated-Third-Party-framework" class="headerlink" title="Designated Third Party framework"></a>Designated Third Party framework</h2><p><code>Pod 'ARVideoKit'</code> specifies a framework named <code>'ARVideoKit'</code> to download. You can replace <code>'ARVideoKit'</code> with <code>'name of the framework you want to install'</code>. Specify the corresponding URL by <code>: git = &gt;</code>, specify the corresponding branch by <code>: Branch = &gt;</code>, specify the submitted version by <code>commit:</code>, specify the marked submitted version by <code>: tag = &gt;</code>, and specify the submitted version by <code>: inhibit'_ Warnings = &gt; true </code> to avoid warnings from a single framework. Of course, the relevant specifications after <code>pod' ARVideoKit</code> can be omitted. In this way, you will download the default version of the framework, which is generally the latest version suitable for your project.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/Example.png" alt="Example"></p><h2 id="Framework-Classification"><a href="#Framework-Classification" class="headerlink" title="Framework Classification"></a>Framework Classification</h2><p>The frameworks are classified, you can also classify according to your own preferences.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/FrameworkClassification.png" alt="FrameworkClassification"><br>When there is a framework you need to use in the classification, you can delete “#“.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/FrameworkSelection.png" alt="FrameworkSelection"></p><h2 id="Subframework"><a href="#Subframework" class="headerlink" title="Subframework"></a>Subframework</h2><p>For some frameworks, if only some of the functions in the framework are used, it is not necessary to download the whole framework, only its sub frameworks.</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/Subframework.png" alt="Subframework"></p><h2 id="Set-up-groups"><a href="#Set-up-groups" class="headerlink" title="Set up groups"></a>Set up groups</h2><p>You can use</p><figure class="highlight erlang"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs erlang">def groupName <br> pod ...<br> ...<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></tbody></table></figure><p>to set up groups, for example, some frameworks are used for debugging, some frameworks are used for app publishing, and some frameworks are special. After <code>target</code>, you need to replace <code>ProjectName</code> with the name of your project.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/SetUpGroups.png" alt="SetUpGroups"></p><h2 id="Use"><a href="#Use" class="headerlink" title="Use"></a>Use</h2><ul><li>Clone the repository to get the <code>PodFile</code> file in the repository</li><li>Directly download the <code>PodFile</code> in the repository and put it under the directory of the project folder</li><li>Copy the contents of the <code>PodFile</code> in the repository to your own generated <code>PodFile</code></li><li>Use the terminal to open the project directory and run the following command<figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ pod <span class="hljs-keyword">install</span><br></code></pre></td></tr></tbody></table></figure><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2></li><li>Fork it !</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2>PodfileKit is released under the MIT license. <a href="https://github.com/adong666666/PodfileKit/blob/master/LICENSE">See LICENSE</a> for details.<h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br></pre></td><td class="code"><pre><code class="hljs ruby">source <span class="hljs-string">'https://github.com/CocoaPods/Specs.git'</span><br><span class="hljs-comment"># Minimum supported iOS system version</span><br><span class="hljs-symbol">platform:</span>ios,<span class="hljs-string">'13.0'</span><br>use_frameworks!<br><span class="hljs-comment"># Inhibit the warning of the third party library</span><br>inhibit_all_warnings!<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">thirdParty</span></span><br>  <span class="hljs-comment"># eg. # AR Video</span><br>  <span class="hljs-comment"># Git specifies the web address, branch specifies the branch, commit specifies the submitted version, tag specifies the marked submitted version and inhibit_ Warnings to avoid warnings from a single framework</span><br>  <span class="hljs-comment"># pod 'ARVideoKit', :git =&gt; 'https://github.com/AFathi/ARVideoKit.git', :branch =&gt; 'swift_5', commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27",'~&gt; 5.0', :tag =&gt; '1.6.0', :inhibit_warnings =&gt; true</span><br>  <br>  <span class="hljs-comment"># Network Request</span><br>  <span class="hljs-comment"># pod 'Alamofire'</span><br>  <span class="hljs-comment"># pod 'Moya'</span><br>  <span class="hljs-comment"># pod 'AlamofireObjectMapper'</span><br>  <br>  <span class="hljs-comment"># JSON Parsing</span><br>  <span class="hljs-comment"># pod 'SwiftyJSON'</span><br>  <span class="hljs-comment"># pod 'HandyJSON'</span><br>  <span class="hljs-comment"># pod 'Argo'</span><br>  <span class="hljs-comment"># pod 'Sync'</span><br>  <br>  <span class="hljs-comment"># Detect Network Status</span><br>  <span class="hljs-comment"># pod 'ReachabilitySwift'</span><br>  <br>  <span class="hljs-comment"># Data Stream</span><br>  <span class="hljs-comment"># pod 'RxSwift'</span><br>  <span class="hljs-comment"># pod 'RxCocoa'</span><br>  <span class="hljs-comment"># pod 'ObjectMapper'</span><br>  <span class="hljs-comment"># pod 'ReSwift'</span><br>  <span class="hljs-comment"># pod 'ReactiveSwift'</span><br>  <span class="hljs-comment"># pod 'ReactorKit'</span><br>  <br>  <span class="hljs-comment"># Internet Pictures</span><br>  <span class="hljs-comment"># pod 'Kingfisher'</span><br>  <br>  <span class="hljs-comment"># Layout</span><br>  <span class="hljs-comment"># pod 'SnapKit'</span><br>  <span class="hljs-comment"># pod 'Cartography'</span><br>  <span class="hljs-comment"># pod 'Neon'</span><br>  <span class="hljs-comment"># pod 'AnimatedCollectionViewLayout'</span><br>  <span class="hljs-comment"># pod "BouncyLayout"</span><br>  <span class="hljs-comment"># pod 'TangramKit'</span><br>  <span class="hljs-comment"># pod 'TinyConstraints'</span><br>  <span class="hljs-comment"># pod 'LayoutKit'</span><br>  <span class="hljs-comment"># pod 'SteviaLayout'</span><br>  <br>  <span class="hljs-comment"># Animation</span><br>  <span class="hljs-comment"># pod 'Spring', :git =&gt; 'https://github.com/MengTo/Spring.git'</span><br>  <span class="hljs-comment"># pod 'lottie-ios'</span><br>  <span class="hljs-comment"># pod 'ViewAnimator'</span><br>  <span class="hljs-comment"># pod 'Advance'</span><br>  <span class="hljs-comment"># pod 'Pastel'</span><br>  <span class="hljs-comment"># pod 'YapAnimator'</span><br>  <br>  <span class="hljs-comment"># Transition</span><br>  <span class="hljs-comment"># pod 'Hero'</span><br>  <span class="hljs-comment"># pod 'Transition'</span><br>  <span class="hljs-comment"># pod 'Jelly'</span><br>  <br>  <span class="hljs-comment"># Code Rules</span><br>  <span class="hljs-comment"># pod 'SwiftLint'</span><br>  <br>  <span class="hljs-comment"># UserDefault</span><br>  <span class="hljs-comment"># pod 'SwiftyUserDefaults'</span><br>  <br>  <span class="hljs-comment"># Data Base</span><br>  <span class="hljs-comment"># pod 'SQLite.swift'</span><br>  <span class="hljs-comment"># pod 'GRDB.swift'</span><br>  <span class="hljs-comment"># pod 'FMDB'</span><br>  <span class="hljs-comment"># pod 'RealmSwift'</span><br>  <span class="hljs-comment"># pod 'YapDatabase'</span><br>  <span class="hljs-comment"># pod 'CoreStore'</span><br>  <br>  <span class="hljs-comment"># Extension</span><br>  <span class="hljs-comment"># pod 'SwifterSwift'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/SwiftStdlib'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/Foundation'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/UIKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/AppKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/MapKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/CoreGraphics'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/CoreLocation'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/SpriteKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/SceneKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/StoreKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/Dispatch'</span><br>  <span class="hljs-comment"># pod 'Then'</span><br>  <span class="hljs-comment">### Use 'SwiftUIX'</span><br>  <span class="hljs-comment"># pod 'EZSwiftExtensions'</span><br>  <br>  <span class="hljs-comment"># Resources (picture, color, localized string)</span><br>  <span class="hljs-comment"># pod 'R.swift'</span><br>  <span class="hljs-comment"># pod 'SwiftGen'</span><br>  <br>  <span class="hljs-comment"># Monitor</span><br>  <span class="hljs-comment"># pod 'Crashlytics'</span><br>  <span class="hljs-comment"># pod 'Fabric'</span><br>  <span class="hljs-comment"># pod 'Bugly'</span><br> <br>  <span class="hljs-comment"># Bind</span><br>  <span class="hljs-comment"># pod 'bond'</span><br>  <br>  <span class="hljs-comment"># Alert</span><br>  <span class="hljs-comment"># pod 'JGProgressHUD'</span><br>  <span class="hljs-comment"># pod 'SwiftMessages'</span><br>  <span class="hljs-comment"># pod 'SwiftEntryKit'</span><br>  <span class="hljs-comment"># pod 'SPPermissions'</span><br>  <span class="hljs-comment"># pod 'NotificationBanner'</span><br>  <span class="hljs-comment"># pod 'Whisper'</span><br>  <span class="hljs-comment"># pod 'PopupDialog'</span><br>  <span class="hljs-comment"># pod 'Toast-Swift'</span><br>  <br>  <span class="hljs-comment"># Side Menu</span><br>  <span class="hljs-comment"># pod 'SideMenu'</span><br>  <span class="hljs-comment"># pod 'YALSideMenu'</span><br>  <br>  <span class="hljs-comment"># Drop-down Menu</span><br>  <span class="hljs-comment"># pod 'BTNavigationDropdownMenu'</span><br>  <br>  <span class="hljs-comment"># Pagination Menu</span><br>  <span class="hljs-comment"># pod 'Parchment'</span><br>  <span class="hljs-comment"># pod 'Tabman'</span><br>  <br>  <span class="hljs-comment"># UI Controls</span><br>  <span class="hljs-comment"># pod 'LYEmptyView'</span><br>  <span class="hljs-comment"># pod 'CollectionKit'</span><br>  <span class="hljs-comment"># pod 'DifferenceKit'</span><br>  <span class="hljs-comment"># pod 'ACBadge'</span><br>  <span class="hljs-comment"># pod 'LTMorphingLabel'</span><br>  <span class="hljs-comment"># pod 'SkeletonView'</span><br>  <span class="hljs-comment"># pod 'NVActivityIndicatorView'</span><br>  <span class="hljs-comment"># pod 'FSPagerView'</span><br>  <span class="hljs-comment"># pod 'TextFieldEffects'</span><br>  <span class="hljs-comment"># pod 'SwipeCellKit'</span><br>  <span class="hljs-comment"># pod 'ScrollableGraphView'</span><br>  <span class="hljs-comment"># pod 'SCLAlertView'</span><br>  <span class="hljs-comment"># pod 'SkyFloatingLabelTextField'</span><br>  <span class="hljs-comment"># pod 'ActiveLabel'</span><br>  <span class="hljs-comment"># pod 'MarqueeLabel'</span><br>  <span class="hljs-comment"># pod 'DOFavoriteButton'</span><br>  <span class="hljs-comment"># pod 'Persei' # top menu for UITableView / UICollectionView / UIScrollView</span><br>  <span class="hljs-comment"># pod 'XLActionController'</span><br>  <span class="hljs-comment"># pod 'LNPopupController'</span><br>  <span class="hljs-comment"># pod 'CHIPageControl'</span><br>  <span class="hljs-comment"># pod 'EasyTipView'</span><br>  <span class="hljs-comment"># pod 'CardParts'</span><br>  <span class="hljs-comment"># pod 'PMAlertController'</span><br>  <span class="hljs-comment"># pod 'Segmentio'</span><br>  <span class="hljs-comment"># pod 'HGCircularSlider'</span><br>  <span class="hljs-comment"># pod 'ZLSwipeableViewSwift'</span><br>  <span class="hljs-comment"># pod 'ALCameraViewController'</span><br>  <span class="hljs-comment"># pod 'SwiftSpinner'</span><br>  <span class="hljs-comment"># pod 'Cosmos'</span><br>  <br>  <span class="hljs-comment"># Scan</span><br>  <span class="hljs-comment"># pod 'BarcodeScanner'</span><br>  <br>  <span class="hljs-comment"># QR Code</span><br>  <span class="hljs-comment"># pod 'EFQRCode'</span><br>  <br>  <span class="hljs-comment"># Scan Document</span><br>  <span class="hljs-comment"># pod 'WeScan'</span><br>  <br>  <span class="hljs-comment"># Color Picker</span><br>  <span class="hljs-comment"># pod 'ColorSlider'</span><br>  <br>  <span class="hljs-comment"># Prompt for Software Updates</span><br>  <span class="hljs-comment"># pod 'Siren'</span><br>  <br>  <span class="hljs-comment"># Machine learning Vision</span><br>  <span class="hljs-comment"># pod 'OpenCV'</span><br>  <br>  <span class="hljs-comment"># Feedback</span><br>  <span class="hljs-comment"># pod 'PinpointKit'</span><br>  <br>  <span class="hljs-comment"># Log</span><br>  <span class="hljs-comment"># pod 'SwiftyBeaver'</span><br>  <br>  <span class="hljs-comment"># Encryption</span><br>  <span class="hljs-comment"># pod 'CryptoSwift'</span><br>  <span class="hljs-comment"># pod 'RNCryptor'</span><br>  <br>  <span class="hljs-comment"># Internal Purchase</span><br>  <span class="hljs-comment"># pod 'SwiftyStoreKit'</span><br>  <br>  <span class="hljs-comment"># Calendar</span><br>  <span class="hljs-comment"># pod 'JTAppleCalendar'</span><br>  <span class="hljs-comment"># pod 'CVCalendar'</span><br>  <br>  <span class="hljs-comment"># Image Processing</span><br>  <span class="hljs-comment"># pod 'Nuke'</span><br>  <span class="hljs-comment"># pod 'Macaw'</span><br>  <br>  <span class="hljs-comment"># Image Picker</span><br>  <span class="hljs-comment"># pod 'ImagePicker'</span><br>  <span class="hljs-comment"># pod 'ZLPhotoBrowser'</span><br>  <span class="hljs-comment"># pod 'YPImagePicker'</span><br>  <span class="hljs-comment"># pod 'SKPhotoBrowser'</span><br>  <br>  <span class="hljs-comment"># Test</span><br>  <span class="hljs-comment"># pod 'Quick'</span><br>  <span class="hljs-comment"># pod 'Nimble'</span><br>  <br>  <span class="hljs-comment"># Storyboard and xib</span><br>  <span class="hljs-comment"># pod 'IBAnimatable'</span><br>  <br>  <span class="hljs-comment"># Date</span><br>  <span class="hljs-comment"># pod 'SwiftDate'</span><br>  <br>  <span class="hljs-comment"># Cache</span><br>  <span class="hljs-comment"># pod 'HanekeSwift'</span><br>  <span class="hljs-comment"># pod 'Disk'</span><br>  <span class="hljs-comment"># pod 'Cache'</span><br>  <br>  <span class="hljs-comment"># Mathematics</span><br>  <span class="hljs-comment"># pod 'Surge'</span><br>  <br>  <span class="hljs-comment"># Multithreading</span><br>  <span class="hljs-comment"># pod "AsyncSwift"</span><br>  <span class="hljs-comment"># pod 'Hydra'</span><br>  <span class="hljs-comment"># pod 'BrightFutures'</span><br>  <br>  <span class="hljs-comment"># Dependency Injection</span><br>  <span class="hljs-comment"># pod 'Swinject'</span><br>  <span class="hljs-comment"># pod 'Typhoon'</span><br>  <br>  <span class="hljs-comment"># Chat</span><br>  <span class="hljs-comment"># pod 'Chatto'</span><br>  <span class="hljs-comment"># pod 'ChattoAdditions'</span><br>  <br>  <span class="hljs-comment"># Message</span><br>  <span class="hljs-comment"># pod 'Messenger'</span><br>  <span class="hljs-comment"># pod 'MessageKit'</span><br>  <br>  <span class="hljs-comment"># Phone Number</span><br>  <span class="hljs-comment"># pod 'PhoneNumberKit'</span><br>  <br>  <span class="hljs-comment"># Functional Programming</span><br>  <span class="hljs-comment"># pod 'Swiftz'</span><br>  <br>  <span class="hljs-comment"># Device</span><br>  <span class="hljs-comment"># pod 'DeviceKit'</span><br>  <br>  <span class="hljs-comment"># Rich Text</span><br>  <span class="hljs-comment"># pod 'BonMot'</span><br>  <span class="hljs-comment"># pod 'SwiftRichString'</span><br>  <br>  <span class="hljs-comment"># Face</span><br>  <span class="hljs-comment"># pod 'FaceAware'</span><br>  <br>  <span class="hljs-comment"># Geographic Location</span><br>  <span class="hljs-comment"># pod 'SwiftLocation'</span><br>  <br>  <span class="hljs-comment"># HTML、XML</span><br>  <span class="hljs-comment"># pod 'SwiftSoup'</span><br>  <span class="hljs-comment"># pod 'Ono'</span><br>  <span class="hljs-comment"># pod 'Kanna'</span><br>  <br>  <span class="hljs-comment"># Convenient (uitableviewcells, uicollectionviewcells, convenient reuse, etc)</span><br>  <span class="hljs-comment"># pod 'Reusable'</span><br>  <br>  <span class="hljs-comment"># Localization</span><br>  <span class="hljs-comment"># pod 'Localize-Swift'</span><br>  <br>  <span class="hljs-comment"># Gif Support</span><br>  <span class="hljs-comment"># pod 'Gifu'</span><br>  <br>  <span class="hljs-comment"># Color</span><br>  <span class="hljs-comment"># pod 'DynamicColor'</span><br>  <br>  <span class="hljs-comment"># Detecting memory leaks, etc</span><br>  <span class="hljs-comment"># pod 'LifetimeTracker'</span><br>  <br>  <span class="hljs-comment"># Chart</span><br>  <span class="hljs-comment"># pod 'SwiftCharts'</span><br>  <br>  <span class="hljs-comment"># File Processing</span><br>  <span class="hljs-comment"># pod 'FileKit'</span><br>  <span class="hljs-comment"># pod 'Files'</span><br>  <br>  <span class="hljs-comment"># Theme (Adapt to Dark Mode)</span><br>  <span class="hljs-comment"># pod 'SwiftTheme'</span><br>  <br>  <span class="hljs-comment"># The status bar displays information such as FPS, CPU and memory usage, device model, app and iOS versions</span><br>  <span class="hljs-comment"># pod 'GDPerformanceView-Swift'</span><br>  <br>  <span class="hljs-comment"># Camera and Microphone</span><br>  <span class="hljs-comment"># pod 'HaishinKit.swift'</span><br>  <br>  <span class="hljs-comment"># Download</span><br>  <span class="hljs-comment"># pod 'Tiercel'</span><br>  <br>  <span class="hljs-comment"># Bluetooth</span><br>  <span class="hljs-comment"># pod 'BluetoothKit'</span><br>  <br>  <span class="hljs-comment"># Compress</span><br>  <span class="hljs-comment"># pod 'Zip'</span><br>  <br>  <span class="hljs-comment"># Keychain</span><br>  <span class="hljs-comment"># pod 'KeychainSwift'</span><br>  <br>  <span class="hljs-comment"># Social Sharing</span><br>  <span class="hljs-comment"># pod 'UMengUshare'</span><br>  <span class="hljs-comment">## pod 'UMengUShare/UI'</span><br>  <span class="hljs-comment">## pod 'UMengUShare/Social/ReducedWeChat'</span><br>  <span class="hljs-comment">## pod 'UMengUShare/Social/ReducedQQ'</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">project</span></span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">debug</span></span><br>  <span class="hljs-comment"># App Interface Debugging</span><br>  <span class="hljs-comment"># pod 'Reveal-SDK'</span><br>  <span class="hljs-comment"># pod 'CocoaDebug'</span><br>  <br>  <span class="hljs-comment"># Network Debugging</span><br>  <span class="hljs-comment"># pod 'Bagel'</span><br>  <span class="hljs-comment"># pod 'ResponseDetective'</span><br>  <br>  <span class="hljs-comment"># Log</span><br>  <span class="hljs-comment"># pod 'XCGLogger'</span><br><span class="hljs-keyword">end</span><br>  <span class="hljs-comment"># Replace your project name here</span><br>target <span class="hljs-string">"ProjectName"</span> <span class="hljs-keyword">do</span><br>  thirdParty<br>  project<br>  debug<br><span class="hljs-keyword">end</span><br><br>post_install <span class="hljs-keyword">do</span> <span class="hljs-params">|installer_representation|</span><br>  installer_representation.pods_project.targets.each <span class="hljs-keyword">do</span> <span class="hljs-params">|target|</span><br>    target.build_configurations.each <span class="hljs-keyword">do</span> <span class="hljs-params">|config|</span><br>      <span class="hljs-comment"># Minimum supported iOS system version</span><br>      config.build_settings[<span class="hljs-string">'IPHONEOS_DEPLOYMENT_TARGET'</span>] = <span class="hljs-string">'13.0'</span><br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></tbody></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PodfileKit将github上常见的iOS(Swift)第三方框架进行了汇总，并且将框架进行了分类，为用户管理第三方框架提供了方便</title>
    <link href="/posts/38667.html"/>
    <url>/posts/38667.html</url>
    
    <content type="html"><![CDATA[<h1 id="PodfileKit"><a href="#PodfileKit" class="headerlink" title="PodfileKit"></a>PodfileKit</h1><p>========================</p><p>Easy Podfile !</p><p>PodfileKit将github上常见的iOS(Swift)第三方框架进行了汇总，并且将框架进行了分类，为用户管理第三方框架提供了方便。</p><h1 id="github网址：https-github-com-adong666666-PodfileKit"><a href="#github网址：https-github-com-adong666666-PodfileKit" class="headerlink" title="github网址：https://github.com/adong666666/PodfileKit"></a>github网址：<a href="https://github.com/adong666666/PodfileKit">https://github.com/adong666666/PodfileKit</a></h1><ul><li><a href="#%E8%AE%BE%E7%BD%AE%E5%B9%B3%E5%8F%B0">设置平台</a></li><li><a href="#%E6%8C%87%E5%AE%9A%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6">指定第三方框架</a></li><li><a href="#%E6%A1%86%E6%9E%B6%E5%88%86%E7%B1%BB">框架分类</a></li><li><a href="#%E5%AD%90%E6%A1%86%E6%9E%B6">子框架</a></li><li><a href="#%E5%BB%BA%E7%AB%8B%E5%88%86%E7%BB%84">建立分组</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E8%B4%A1%E7%8C%AE">贡献</a></li><li><a href="#license">License</a><h2 id="设置平台"><a href="#设置平台" class="headerlink" title="设置平台"></a>设置平台</h2><code>platform:ios,'13.0'</code>，这里的<code>‘13.0’</code>是App所能支持的最低iOS系统版本，你可以替换为<code>‘11.0’、'12.3'、‘14.0’</code>等版本。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%B9%B3%E5%8F%B0%E8%AE%BE%E7%BD%AE.png" alt="设置平台"><h2 id="指定第三方框架"><a href="#指定第三方框架" class="headerlink" title="指定第三方框架"></a>指定第三方框架</h2><code>pod 'ARVideoKit'</code>指定名为<code>‘ARVideoKit’</code>的框架进行下载，你可以将<code>‘ARVideoKit’</code>替换为<code>‘你想要安装的框架的名称’</code>。通过<code>:git =&gt;</code>来指定相应网址，通过<code>:branch =&gt;</code>来指定相应分支，通过<code>commit:</code>来指定某次提交的版本，通过<code>:tag =&gt;</code>来指定某次被标记的提交版本，通过<code>:inhibit_warnings =&gt; true</code>来规避单个框架的警告。当然，<code>pod 'ARVideoKit'</code>之后的相关指定都可以被省略，这样你将会下载该框架的默认版本，一般为适合你工程的最新版本。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E7%A4%BA%E4%BE%8B.png" alt="示例"><h2 id="框架分类"><a href="#框架分类" class="headerlink" title="框架分类"></a>框架分类</h2>对框架进行了分类，你也可以根据自己的喜好进行分类。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E6%A1%86%E6%9E%B6%E5%88%86%E7%B1%BB.png" alt="框架分类"><br>当分类中有你需要使用的框架时，便将”#“删除即可。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9.png" alt="框架选择"><h2 id="子框架"><a href="#子框架" class="headerlink" title="子框架"></a>子框架</h2>对于某些框架，如果只用到框架中部分功能，则不必下载整个框架，只需下载其子框架。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%AD%90%E6%A1%86%E6%9E%B6.png" alt="子框架"><h2 id="建立分组"><a href="#建立分组" class="headerlink" title="建立分组"></a>建立分组</h2>你可以使用<figure class="highlight erlang"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs erlang">def groupName <br> pod ...<br> ...<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></tbody></table></figure>来建立分组，比如某些框架是用于调试的，某些框架是用于App发布的，某些框架比较特殊等。在<code>target</code>之后，你需要将<code>ProjectName</code>替换为你项目的名称。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%88%86%E7%BB%84.png" alt="建立分组"><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2></li></ul><ul><li>克隆本仓库，从而拿到仓库中的<code>PodFile</code>文件</li><li>直接下载本仓库中的<code>PodFile</code>，置于工程文件夹的目录之下</li><li>拷贝本仓库中<code>PodFile</code>的内容到你自己生成的<code>PodFile</code>文件中</li><li>使用终端打开工程所在目录，运行如下命令<figure class="highlight cmake"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ pod <span class="hljs-keyword">install</span><br></code></pre></td></tr></tbody></table></figure><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2></li><li>Fork it !</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2>PodfileKit is released under the MIT license. <a href="https://github.com/adong666666/PodfileKit/blob/master/LICENSE">See LICENSE</a> for details.<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2>这里因为在博客就直接给内容哈：<figure class="highlight ruby"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br></pre></td><td class="code"><pre><code class="hljs ruby">source <span class="hljs-string">'https://github.com/CocoaPods/Specs.git'</span><br><span class="hljs-comment"># 所支持的iOS系统版本</span><br><span class="hljs-symbol">platform:</span>ios,<span class="hljs-string">'13.0'</span><br>use_frameworks!<br><span class="hljs-comment"># 规避第三方库的警告</span><br>inhibit_all_warnings!<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">thirdParty</span></span><br>  <span class="hljs-comment"># eg. # AR录像</span><br>  <span class="hljs-comment"># git指定网址, branch指定分支， commit指定某次提交的版本， tag指定某次被标记的提交版本，inhibit_warnings规避单个框架的警告</span><br>  <span class="hljs-comment"># pod 'ARVideoKit'#, :git =&gt; 'https://github.com/AFathi/ARVideoKit.git', :branch =&gt; 'swift_5', commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27",'~&gt; 5.0', :tag =&gt; '1.6.0', :inhibit_warnings =&gt; true</span><br>  <span class="hljs-comment"># 网络请求</span><br>  <span class="hljs-comment"># pod 'Alamofire'</span><br>  <span class="hljs-comment"># pod 'Moya'</span><br>  <span class="hljs-comment"># pod 'AlamofireObjectMapper'</span><br>  <span class="hljs-comment"># JSON解析</span><br>  <span class="hljs-comment"># pod 'SwiftyJSON'</span><br>  <span class="hljs-comment"># pod 'HandyJSON'</span><br>  <span class="hljs-comment"># pod 'Argo'</span><br>  <span class="hljs-comment"># pod 'Sync'</span><br>  <span class="hljs-comment"># 检测网络状态</span><br>  <span class="hljs-comment"># pod 'ReachabilitySwift'</span><br>  <span class="hljs-comment"># 数据流</span><br>  <span class="hljs-comment"># pod 'RxSwift'</span><br>  <span class="hljs-comment"># pod 'RxCocoa'</span><br>  <span class="hljs-comment"># pod 'ObjectMapper'</span><br>  <span class="hljs-comment"># pod 'ReSwift'</span><br>  <span class="hljs-comment"># pod 'ReactiveSwift'</span><br>  <span class="hljs-comment"># pod 'ReactorKit'</span><br>  <span class="hljs-comment"># 网络图片</span><br>  <span class="hljs-comment"># pod 'Kingfisher'</span><br>  <span class="hljs-comment"># 布局</span><br>  <span class="hljs-comment"># pod 'SnapKit'</span><br>  <span class="hljs-comment"># pod 'Cartography'</span><br>  <span class="hljs-comment"># pod 'Neon'</span><br>  <span class="hljs-comment"># pod 'AnimatedCollectionViewLayout'</span><br>  <span class="hljs-comment"># pod "BouncyLayout"</span><br>  <span class="hljs-comment"># pod 'TangramKit'</span><br>  <span class="hljs-comment"># pod 'TinyConstraints'</span><br>  <span class="hljs-comment"># pod 'LayoutKit'</span><br>  <span class="hljs-comment"># pod 'SteviaLayout'</span><br>  <span class="hljs-comment"># 动画</span><br>  <span class="hljs-comment"># pod 'Spring', :git =&gt; 'https://github.com/MengTo/Spring.git'</span><br>  <span class="hljs-comment"># pod 'lottie-ios'</span><br>  <span class="hljs-comment"># pod 'ViewAnimator'</span><br>  <span class="hljs-comment"># pod 'Advance'</span><br>  <span class="hljs-comment"># pod 'Pastel'</span><br>  <span class="hljs-comment"># pod 'YapAnimator'</span><br>  <span class="hljs-comment"># 转场</span><br>  <span class="hljs-comment"># pod 'Hero'</span><br>  <span class="hljs-comment"># pod 'Transition'</span><br>  <span class="hljs-comment"># pod 'Jelly'</span><br>  <span class="hljs-comment"># 代码规范</span><br>  <span class="hljs-comment"># pod 'SwiftLint'</span><br>  <span class="hljs-comment"># UserDefault</span><br>  <span class="hljs-comment"># pod 'SwiftyUserDefaults'</span><br>  <span class="hljs-comment"># 数据库</span><br>  <span class="hljs-comment"># pod 'SQLite.swift'</span><br>  <span class="hljs-comment"># pod 'GRDB.swift'</span><br>  <span class="hljs-comment"># pod 'FMDB'</span><br>  <span class="hljs-comment"># pod 'RealmSwift'</span><br>  <span class="hljs-comment"># pod 'YapDatabase'</span><br>  <span class="hljs-comment"># pod 'CoreStore'</span><br>  <span class="hljs-comment"># 扩展</span><br>  <span class="hljs-comment"># pod 'SwifterSwift'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/SwiftStdlib'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/Foundation'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/UIKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/AppKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/MapKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/CoreGraphics'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/CoreLocation'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/SpriteKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/SceneKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/StoreKit'</span><br>  <span class="hljs-comment">## pod 'SwifterSwift/Dispatch'</span><br>  <span class="hljs-comment"># pod 'Then'</span><br>  <span class="hljs-comment">### Use 'SwiftUIX'</span><br>  <span class="hljs-comment"># pod 'EZSwiftExtensions'</span><br>  <span class="hljs-comment"># Resources（图片、颜色、本地化字符串）</span><br>  <span class="hljs-comment"># pod 'R.swift'</span><br>  <span class="hljs-comment"># pod 'SwiftGen'</span><br>  <span class="hljs-comment"># 监控</span><br>  <span class="hljs-comment"># pod 'Crashlytics'</span><br>  <span class="hljs-comment"># pod 'Fabric'</span><br>  <span class="hljs-comment"># pod 'Bugly'</span><br>  <span class="hljs-comment"># 绑定</span><br>  <span class="hljs-comment"># pod 'bond'</span><br>  <span class="hljs-comment"># 提示框</span><br>  <span class="hljs-comment"># pod 'JGProgressHUD'</span><br>  <span class="hljs-comment"># pod 'SwiftMessages'</span><br>  <span class="hljs-comment"># pod 'SwiftEntryKit'</span><br>  <span class="hljs-comment"># pod 'SPPermissions'</span><br>  <span class="hljs-comment"># pod 'NotificationBanner'</span><br>  <span class="hljs-comment"># pod 'Whisper'</span><br>  <span class="hljs-comment"># pod 'PopupDialog'</span><br>  <span class="hljs-comment"># pod 'Toast-Swift'</span><br>  <span class="hljs-comment"># 侧边栏</span><br>  <span class="hljs-comment"># pod 'SideMenu'</span><br>  <span class="hljs-comment"># pod 'YALSideMenu'</span><br>  <span class="hljs-comment"># 下拉菜单</span><br>  <span class="hljs-comment"># pod 'BTNavigationDropdownMenu'</span><br>  <span class="hljs-comment"># 分页菜单</span><br>  <span class="hljs-comment"># pod 'Parchment'</span><br>  <span class="hljs-comment"># pod 'Tabman'</span><br>  <span class="hljs-comment"># UI控件</span><br>  <span class="hljs-comment"># pod 'LYEmptyView'</span><br>  <span class="hljs-comment"># pod 'CollectionKit'</span><br>  <span class="hljs-comment"># pod 'DifferenceKit'</span><br>  <span class="hljs-comment"># pod 'ACBadge'</span><br>  <span class="hljs-comment"># pod 'LTMorphingLabel'</span><br>  <span class="hljs-comment"># pod 'SkeletonView'</span><br>  <span class="hljs-comment"># pod 'NVActivityIndicatorView'</span><br>  <span class="hljs-comment"># pod 'FSPagerView'</span><br>  <span class="hljs-comment"># pod 'TextFieldEffects'</span><br>  <span class="hljs-comment"># pod 'SwipeCellKit'</span><br>  <span class="hljs-comment"># pod 'ScrollableGraphView'</span><br>  <span class="hljs-comment"># pod 'SCLAlertView'</span><br>  <span class="hljs-comment"># pod 'SkyFloatingLabelTextField'</span><br>  <span class="hljs-comment"># pod 'ActiveLabel'</span><br>  <span class="hljs-comment"># pod 'MarqueeLabel'</span><br>  <span class="hljs-comment"># pod 'DOFavoriteButton'</span><br>  <span class="hljs-comment"># pod 'Persei' # top menu for UITableView / UICollectionView / UIScrollView</span><br>  <span class="hljs-comment"># pod 'XLActionController'</span><br>  <span class="hljs-comment"># pod 'LNPopupController'</span><br>  <span class="hljs-comment"># pod 'CHIPageControl'</span><br>  <span class="hljs-comment"># pod 'EasyTipView'</span><br>  <span class="hljs-comment"># pod 'CardParts'</span><br>  <span class="hljs-comment"># pod 'PMAlertController'</span><br>  <span class="hljs-comment"># pod 'Segmentio'</span><br>  <span class="hljs-comment"># pod 'HGCircularSlider'</span><br>  <span class="hljs-comment"># pod 'ZLSwipeableViewSwift'</span><br>  <span class="hljs-comment"># pod 'ALCameraViewController'</span><br>  <span class="hljs-comment"># pod 'SwiftSpinner'</span><br>  <span class="hljs-comment"># pod 'Cosmos'</span><br>  <span class="hljs-comment"># 扫描</span><br>  <span class="hljs-comment"># pod 'BarcodeScanner'</span><br>  <span class="hljs-comment"># 二维码</span><br>  <span class="hljs-comment"># pod 'EFQRCode'</span><br>  <span class="hljs-comment"># 扫描文件</span><br>  <span class="hljs-comment"># pod 'WeScan'</span><br>  <span class="hljs-comment"># 取色器</span><br>  <span class="hljs-comment"># pod 'ColorSlider'</span><br>  <span class="hljs-comment"># 提示软件更新</span><br>  <span class="hljs-comment"># pod 'Siren'</span><br>  <span class="hljs-comment"># 机器学习视觉</span><br>  <span class="hljs-comment"># pod 'OpenCV'</span><br>  <span class="hljs-comment"># 反馈</span><br>  <span class="hljs-comment"># pod 'PinpointKit'</span><br>  <span class="hljs-comment"># 日志</span><br>  <span class="hljs-comment"># pod 'SwiftyBeaver'</span><br>  <span class="hljs-comment"># 加密</span><br>  <span class="hljs-comment"># pod 'CryptoSwift'</span><br>  <span class="hljs-comment"># pod 'RNCryptor'</span><br>  <span class="hljs-comment"># 内购</span><br>  <span class="hljs-comment"># pod 'SwiftyStoreKit'</span><br>  <span class="hljs-comment"># 日历</span><br>  <span class="hljs-comment"># pod 'JTAppleCalendar'</span><br>  <span class="hljs-comment"># pod 'CVCalendar'</span><br>  <span class="hljs-comment"># 图像处理</span><br>  <span class="hljs-comment"># pod 'Nuke'</span><br>  <span class="hljs-comment"># pod 'Macaw'</span><br>  <span class="hljs-comment"># 图片拾取</span><br>  <span class="hljs-comment"># pod 'ImagePicker'</span><br>  <span class="hljs-comment"># pod 'ZLPhotoBrowser'</span><br>  <span class="hljs-comment"># pod 'YPImagePicker'</span><br>  <span class="hljs-comment"># pod 'SKPhotoBrowser'</span><br>  <span class="hljs-comment"># 测试</span><br>  <span class="hljs-comment"># pod 'Quick'</span><br>  <span class="hljs-comment"># pod 'Nimble'</span><br>  <span class="hljs-comment"># Storyboard和xib</span><br>  <span class="hljs-comment"># pod 'IBAnimatable'</span><br>  <span class="hljs-comment"># 时间</span><br>  <span class="hljs-comment"># pod 'SwiftDate'</span><br>  <span class="hljs-comment"># 缓存</span><br>  <span class="hljs-comment"># pod 'HanekeSwift'</span><br>  <span class="hljs-comment"># pod 'Disk'</span><br>  <span class="hljs-comment"># pod 'Cache'</span><br>  <span class="hljs-comment"># 数学</span><br>  <span class="hljs-comment"># pod 'Surge'</span><br>  <span class="hljs-comment"># 多线程</span><br>  <span class="hljs-comment"># pod "AsyncSwift"</span><br>  <span class="hljs-comment"># pod 'Hydra'</span><br>  <span class="hljs-comment"># pod 'BrightFutures'</span><br>  <span class="hljs-comment"># 依赖注入</span><br>  <span class="hljs-comment"># pod 'Swinject'</span><br>  <span class="hljs-comment"># pod 'Typhoon'</span><br>  <span class="hljs-comment"># 聊天</span><br>  <span class="hljs-comment"># pod 'Chatto'</span><br>  <span class="hljs-comment"># pod 'ChattoAdditions'</span><br>  <span class="hljs-comment"># 信息</span><br>  <span class="hljs-comment"># pod 'Messenger'</span><br>  <span class="hljs-comment"># pod 'MessageKit'</span><br>  <span class="hljs-comment"># 手机号码</span><br>  <span class="hljs-comment"># pod 'PhoneNumberKit'</span><br>  <span class="hljs-comment"># 函数式编程</span><br>  <span class="hljs-comment"># pod 'Swiftz'</span><br>  <span class="hljs-comment"># 设备</span><br>  <span class="hljs-comment"># pod 'DeviceKit'</span><br>  <span class="hljs-comment"># 富文本</span><br>  <span class="hljs-comment"># pod 'BonMot'</span><br>  <span class="hljs-comment"># pod 'SwiftRichString'</span><br>  <span class="hljs-comment"># 人脸</span><br>  <span class="hljs-comment"># pod 'FaceAware'</span><br>  <span class="hljs-comment"># 地理位置</span><br>  <span class="hljs-comment"># pod 'SwiftLocation'</span><br>  <span class="hljs-comment"># HTML、XML</span><br>  <span class="hljs-comment"># pod 'SwiftSoup'</span><br>  <span class="hljs-comment"># pod 'Ono'</span><br>  <span class="hljs-comment"># pod 'Kanna'</span><br>  <span class="hljs-comment"># 便利 UITableViewCells, UICollectionViewCells 便利复用等</span><br>  <span class="hljs-comment"># pod 'Reusable'</span><br>  <span class="hljs-comment"># 本地化</span><br>  <span class="hljs-comment"># pod 'Localize-Swift'</span><br>  <span class="hljs-comment"># Gif支持</span><br>  <span class="hljs-comment"># pod 'Gifu'</span><br>  <span class="hljs-comment"># 颜色</span><br>  <span class="hljs-comment"># pod 'DynamicColor'</span><br>  <span class="hljs-comment"># 检测内存泄漏等</span><br>  <span class="hljs-comment"># pod 'LifetimeTracker'</span><br>  <span class="hljs-comment"># 表格</span><br>  <span class="hljs-comment"># pod 'SwiftCharts'</span><br>  <span class="hljs-comment"># 文件处理</span><br>  <span class="hljs-comment"># pod 'FileKit'</span><br>  <span class="hljs-comment"># pod 'Files'</span><br>  <span class="hljs-comment"># 主题 适配暗黑模式</span><br>  <span class="hljs-comment"># pod 'SwiftTheme'</span><br>  <span class="hljs-comment"># 状态栏显示FPS, CPU and memory usage, device model, app and iOS versions 等信息</span><br>  <span class="hljs-comment"># pod 'GDPerformanceView-Swift'</span><br>  <span class="hljs-comment"># 相机 麦克风</span><br>  <span class="hljs-comment"># pod 'HaishinKit.swift'</span><br>  <span class="hljs-comment"># 下载</span><br>  <span class="hljs-comment"># pod 'Tiercel'</span><br>  <span class="hljs-comment"># 蓝牙</span><br>  <span class="hljs-comment"># pod 'BluetoothKit'</span><br>  <span class="hljs-comment"># 压缩</span><br>  <span class="hljs-comment"># pod 'Zip'</span><br>  <span class="hljs-comment"># 钥匙串</span><br>  <span class="hljs-comment"># pod 'KeychainSwift'</span><br>  <span class="hljs-comment"># 社会化分享</span><br>  <span class="hljs-comment"># pod 'UMengUshare'</span><br>  <span class="hljs-comment">## pod 'UMengUShare/UI'</span><br>  <span class="hljs-comment">## pod 'UMengUShare/Social/ReducedWeChat'</span><br>  <span class="hljs-comment">## pod 'UMengUShare/Social/ReducedQQ'</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">project</span></span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">debug</span></span><br>  <span class="hljs-comment"># App界面调试</span><br>  <span class="hljs-comment"># pod 'Reveal-SDK'</span><br>  <span class="hljs-comment"># pod 'CocoaDebug'</span><br>  <span class="hljs-comment"># 网络调试</span><br>  <span class="hljs-comment"># pod 'Bagel'</span><br>  <span class="hljs-comment"># pod 'ResponseDetective'</span><br>  <span class="hljs-comment"># 日志</span><br>  <span class="hljs-comment"># pod 'XCGLogger'</span><br><span class="hljs-keyword">end</span><br>  <span class="hljs-comment"># 在这里替换你的项目名称</span><br>target <span class="hljs-string">"ProjectName"</span> <span class="hljs-keyword">do</span><br>  thirdParty<br>  project<br>  debug<br><span class="hljs-keyword">end</span><br><br>post_install <span class="hljs-keyword">do</span> <span class="hljs-params">|installer_representation|</span><br>  installer_representation.pods_project.targets.each <span class="hljs-keyword">do</span> <span class="hljs-params">|target|</span><br>    target.build_configurations.each <span class="hljs-keyword">do</span> <span class="hljs-params">|config|</span><br>      <span class="hljs-comment"># 所支持的iOS系统版本</span><br>      config.build_settings[<span class="hljs-string">'IPHONEOS_DEPLOYMENT_TARGET'</span>] = <span class="hljs-string">'13.0'</span><br>    <span class="hljs-keyword">end</span><br>  <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></tbody></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学术论文——基于ARKit技术的文物交互式相机App的设计与实现</title>
    <link href="/posts/57105.html"/>
    <url>/posts/57105.html</url>
    
    <content type="html"><![CDATA[<h1 id="学术论文——基于ARKit技术的文物交互式相机App的设计与实现"><a href="#学术论文——基于ARKit技术的文物交互式相机App的设计与实现" class="headerlink" title="学术论文——基于ARKit技术的文物交互式相机App的设计与实现"></a>学术论文——基于ARKit技术的文物交互式相机App的设计与实现</h1><p>========================<br> 论文下载：<a href="http://journals.hut.edu.cn:6688/zk/ch/reader/create_pdf.aspx?file_no=20200507&amp;flag=1&amp;journal_id=hngydxzrb&amp;year_id=2020">http://journals.hut.edu.cn:6688/zk/ch/reader/create_pdf.aspx?file_no=20200507&amp;flag=1&amp;journal_id=hngydxzrb&amp;year_id=2020</a><br> 论文摘要：<a href="http://journals.hut.edu.cn:6688/zk/ch/reader/view_abstract.aspx?flag=1&amp;file_no=20200507&amp;journal_id=hngydxzrb">http://journals.hut.edu.cn:6688/zk/ch/reader/view_abstract.aspx?flag=1&amp;file_no=20200507&amp;journal_id=hngydxzrb</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/4.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/5.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/6.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/7.png"></p>]]></content>
    
    
    <categories>
      
      <category>论文</category>
      
    </categories>
    
    
    <tags>
      
      <tag>论文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Localizable.strings来增加本地化功能</title>
    <link href="/posts/15034.html"/>
    <url>/posts/15034.html</url>
    
    <content type="html"><![CDATA[<h2 id="让app支持各种语言"><a href="#让app支持各种语言" class="headerlink" title="让app支持各种语言"></a>让app支持各种语言</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/1.jpg"><br>首先创建一个Strings File<br>一般我们命名为 Localizable.strings</p><p>在Localizable.strings的属性中设置下localization, 点击后如下</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/2.jpg"></p><p>会多一个English 和Chinese…的标签</p><p>而后，我们进入项目工程，进入如下界面：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/3.jpg"></p><p>点击Localizations 中的加号，添加语言<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/4.jpg"></p><p>勾选需要本地化的文件，可以只勾选Localizable.strings<br>操作完了之后情况如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/5.jpg"></p><p>而后根据键值来分别设定英语和汉语或其他语言所对应的词语，段落…<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/6.jpg"></p><p>That’s all, thank you !</p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>模式匹配摘录</title>
    <link href="/posts/26239.html"/>
    <url>/posts/26239.html</url>
    
    <content type="html"><![CDATA[<h1 id="模式匹配摘录"><a href="#模式匹配摘录" class="headerlink" title="模式匹配摘录"></a>模式匹配摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E6%91%98%E5%BD%95/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E6%91%98%E5%BD%95.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>闭包循环引用</title>
    <link href="/posts/22939.html"/>
    <url>/posts/22939.html</url>
    
    <content type="html"><![CDATA[<h1 id="闭包循环引用"><a href="#闭包循环引用" class="headerlink" title="闭包循环引用"></a>闭包循环引用</h1><p>========================<br>我们在闭包的基础概念中讲到闭包是引用类型的，因此，与Objective-C的block一样，可能导致循环引用的问题。</p><h2 id="问题的产生"><a href="#问题的产生" class="headerlink" title="问题的产生"></a>问题的产生</h2><p>当我们给一个类指定一个闭包属性时，这个类的实例便包含了闭包的一个引用。如果在这个闭包中，又引用了类实例本身，这时闭包便创建了一个指向类实例的强引用，这种情况下，又产生了循环引用。</p><p>如代码清单1所示：HTMLElement类定义了一个闭包属性asHTML。在这个闭包中引用了self，即闭包捕获了self，这就意味着闭包维护了一个指向HTMLElement实例的强引用。这样就在两者间创建了一个强引用循环。</p><h4 id="代码清单1：闭包循环引用"><a href="#代码清单1：闭包循环引用" class="headerlink" title="代码清单1：闭包循环引用"></a>代码清单1：闭包循环引用</h4><figure class="highlight swift"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><pre><code class="hljs swift"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HTMLElement</span> </span>{<br>    <br>    <span class="hljs-keyword">let</span> name:<span class="hljs-type">String</span><br>    <span class="hljs-keyword">let</span> text:<span class="hljs-type">String</span>?<br>    <br>    <span class="hljs-meta">@lazy</span> <span class="hljs-keyword">var</span> asHTML:() -&gt; <span class="hljs-type">String</span> <span class="hljs-operator">=</span> {<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> text <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.text {<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"&lt;<span class="hljs-subst">\(<span class="hljs-keyword">self</span>.name)</span>]]&gt;<span class="hljs-subst">\(<span class="hljs-keyword">self</span>.text)</span>&lt;/<span class="hljs-subst">\(<span class="hljs-keyword">self</span>.name)</span>&gt;"</span><br>        } <span class="hljs-keyword">else</span> {<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"&lt;<span class="hljs-subst">\(<span class="hljs-keyword">self</span>.name)</span> /&gt;"</span><br>        }<br>    }<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">init</span>(<span class="hljs-params">name</span>:<span class="hljs-type">String</span>, <span class="hljs-params">text</span>:<span class="hljs-type">String</span>? <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>)</span> {<br>        <span class="hljs-keyword">self</span>.name <span class="hljs-operator">=</span> name<br>        <span class="hljs-keyword">self</span>.text <span class="hljs-operator">=</span> text<br>    }<br>    <br>    <span class="hljs-keyword">deinit</span> {<br>        println(<span class="hljs-string">"<span class="hljs-subst">\(name)</span> is being deinitialized"</span>)<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>我们可以通过“捕获列表”来解决这种循环引用问题。“捕获列表”定义了在闭包内部捕获的引用类型的使用规则。与两个类之间的强引用循环一样，我们声明每一个捕获引用为weak或者unowned引用。选择weak或者unowned依赖于两者之间的关系。</p><p>一个“捕获列表项”是一个weak(unowned)—类实例引用对。它们放在[]中，项与项之间使用“,”号隔开。</p><p>当闭包和捕获实例总是相互引用，且两者同时释放时，我们将“捕获引用”设置为unowned。如果“捕获引用”可能在某个点被设置成nil，则将其设置为weak。weak引用通常都是optional类型，当引用的实例被释放时，被设置成nil。</p><p>在代码清单1中，我们可以用unowned来处理这种循环引用问题。如代码清单2所示：</p><h4 id="代码清单2：unowned引用"><a href="#代码清单2：unowned引用" class="headerlink" title="代码清单2：unowned引用"></a>代码清单2：unowned引用</h4><figure class="highlight swift"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs swift"><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HTMLElement</span> </span>{<br>    <br>    <span class="hljs-keyword">let</span> name:<span class="hljs-type">String</span><br>    <span class="hljs-keyword">let</span> text:<span class="hljs-type">String</span>?<br>    <br>    <span class="hljs-meta">@lazy</span> <span class="hljs-keyword">var</span> asHTML:() -&gt; <span class="hljs-type">String</span> <span class="hljs-operator">=</span> {<br>        [<span class="hljs-keyword">unowned</span> <span class="hljs-keyword">self</span>] <span class="hljs-keyword">in</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">let</span> text <span class="hljs-operator">=</span> <span class="hljs-keyword">self</span>.text {<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"&lt;<span class="hljs-subst">\(<span class="hljs-keyword">self</span>.name)</span>]]&gt;<span class="hljs-subst">\(<span class="hljs-keyword">self</span>.text)</span>&lt;/<span class="hljs-subst">\(<span class="hljs-keyword">self</span>.name)</span>&gt;"</span><br>        } <span class="hljs-keyword">else</span> {<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">"&lt;<span class="hljs-subst">\(<span class="hljs-keyword">self</span>.name)</span> /&gt;"</span><br>        }<br>    }<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">init</span>(<span class="hljs-params">name</span>:<span class="hljs-type">String</span>, <span class="hljs-params">text</span>:<span class="hljs-type">String</span>? <span class="hljs-operator">=</span> <span class="hljs-literal">nil</span>)</span> {<br>        <span class="hljs-keyword">self</span>.name <span class="hljs-operator">=</span> name<br>        <span class="hljs-keyword">self</span>.text <span class="hljs-operator">=</span> text<br>    }<br>    <br>    <span class="hljs-keyword">deinit</span> {<br>        println(<span class="hljs-string">"<span class="hljs-subst">\(name)</span> is being deinitialized"</span>)<br>    }<br>}<br></code></pre></td></tr></tbody></table></figure><p>在这种情况下，闭包维护了HTMLElement实例的一个unowned引用，而不再是一个强引用。</p><p>注：虽然在闭包中多次引用了self，但闭包只会维护HTMLElement实例的一个引用</p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Swift反射摘录</title>
    <link href="/posts/26121.html"/>
    <url>/posts/26121.html</url>
    
    <content type="html"><![CDATA[<h1 id="Swift反射摘录"><a href="#Swift反射摘录" class="headerlink" title="Swift反射摘录"></a>Swift反射摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Swift%E5%8F%8D%E5%B0%84%E6%91%98%E5%BD%95/Swift%E5%8F%8D%E5%B0%84%E6%91%98%E5%BD%95.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将framework提交至cocoapods工作记录</title>
    <link href="/posts/62594.html"/>
    <url>/posts/62594.html</url>
    
    <content type="html"><![CDATA[<h1 id="将framework提交至cocoapods工作记录"><a href="#将framework提交至cocoapods工作记录" class="headerlink" title="将framework提交至cocoapods工作记录"></a>将framework提交至cocoapods工作记录</h1><p>========================</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git add .<br>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git commit -m <span class="hljs-string">"Initial release of InterfaceKit"</span><br>[master (root-commit) a1942f6] Initial release of InterfaceKit<br> 155 files changed, 21738 insertions(+)<br> create mode 100644 .github/ISSUE_TEMPLATE.md<br> create mode 100644 .github/Pull_request_template.md<br> create mode 100644 .github/workflows/podspecs.yml<br> create mode 100644 .github/workflows/tests.yml<br> create mode 100644 .gitignore<br> create mode 100644 .jazzy.yaml<br> create mode 100644 .ruby-gemset<br> create mode 100644 .ruby-version<br> create mode 100644 .swift-version<br> create mode 100644 .swiftformat<br> create mode 100644 .swiftlint.yml<br> create mode 100644 .swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata<br> create mode 100644 .swiftpm/xcode/package.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist<br> create mode 100644 CHANGELOG.md<br> create mode 100644 CHANGELOG.zh-Hans.md<br> create mode 100644 CONTRIBUTING.md<br> create mode 100644 CONTRIBUTING.zh-Hans.md<br> create mode 100644 CartfileExample/Cartfile<br> create mode 100644 Code of Conduct.md<br> create mode 100644 Code of Conduct.zh-Hans.md<br> create mode 100644 Docs/Structs.html<br> create mode 100644 Docs/Structs/InterfaceView.html<br> create mode 100644 Docs/Structs/InterfaceViewController.html<br> create mode 100644 Docs/Structs/NSInterfaceView.html<br> create mode 100644 Docs/Structs/NSInterfaceViewController.html<br> create mode 100644 Docs/Structs/WKInterfaceView.html<br> create mode 100644 Docs/badge.svg<br> create mode 100644 Docs/css/highlight.css<br> create mode 100644 Docs/css/jazzy.css<br> create mode 100644 Docs/docsets/.docset/Contents/Info.plist<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs.html<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/InterfaceView.html<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/InterfaceViewController.html<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/NSInterfaceView.html<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/NSInterfaceViewController.html<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/Structs/WKInterfaceView.html<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/badge.svg<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/css/highlight.css<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/css/jazzy.css<br> create mode 100755 Docs/docsets/.docset/Contents/Resources/Documents/img/carat.png<br> create mode 100755 Docs/docsets/.docset/Contents/Resources/Documents/img/dash.png<br> create mode 100755 Docs/docsets/.docset/Contents/Resources/Documents/img/gh.png<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/img/spinner.gif<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/index.html<br> create mode 100755 Docs/docsets/.docset/Contents/Resources/Documents/js/jazzy.js<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/js/jazzy.search.js<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/js/jquery.min.js<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/js/lunr.min.js<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/js/typeahead.jquery.js<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/search.json<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/Documents/undocumented.json<br> create mode 100644 Docs/docsets/.docset/Contents/Resources/docSet.dsidx<br> create mode 100644 Docs/docsets/.tgz<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Info.plist<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs.html<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/InterfaceView.html<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/InterfaceViewController.html<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/NSInterfaceView.html<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/NSInterfaceViewController.html<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/WKInterfaceView.html<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/badge.svg<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/css/highlight.css<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/css/jazzy.css<br> create mode 100755 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/carat.png<br> create mode 100755 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/dash.png<br> create mode 100755 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/gh.png<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/spinner.gif<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/index.html<br> create mode 100755 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jazzy.js<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jazzy.search.js<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jquery.min.js<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/lunr.min.js<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/typeahead.jquery.js<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/search.json<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/undocumented.json<br> create mode 100644 Docs/docsets/InterfaceKit.docset/Contents/Resources/docSet.dsidx<br> create mode 100644 Docs/docsets/InterfaceKit.tgz<br> create mode 100644 Docs/docsets/InterfaceKit.xml<br> create mode 100755 Docs/img/carat.png<br> create mode 100755 Docs/img/dash.png<br> create mode 100755 Docs/img/gh.png<br> create mode 100644 Docs/img/spinner.gif<br> create mode 100644 Docs/index.html<br> create mode 100755 Docs/js/jazzy.js<br> create mode 100644 Docs/js/jazzy.search.js<br> create mode 100644 Docs/js/jquery.min.js<br> create mode 100644 Docs/js/lunr.min.js<br> create mode 100644 Docs/js/typeahead.jquery.js<br> create mode 100644 Docs/search.json<br> create mode 100644 Docs/undocumented.json<br> create mode 100644 Example/iOSExample/EApp.swift<br> create mode 100644 Example/iOSExample/Example.xcodeproj/project.pbxproj<br> create mode 100644 Example/iOSExample/Example.xcodeproj/project.xcworkspace/contents.xcworkspacedata<br> create mode 100644 Example/iOSExample/Example.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist<br> create mode 100644 Example/iOSExample/Example/Info.plist<br> create mode 100644 Example/iOSExample/Example/Preview Content/Preview Assets.xcassets/Contents.json<br> create mode 100644 Example/macOSExample/macOSExample.xcodeproj/project.pbxproj<br> create mode 100644 Example/macOSExample/macOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata<br> create mode 100644 Example/macOSExample/macOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist<br> create mode 100644 Example/macOSExample/macOSExample/Info.plist<br> create mode 100644 Example/macOSExample/macOSExample/Preview Content/Preview Assets.xcassets/Contents.json<br> create mode 100644 Example/macOSExample/macOSExample/macOSExample.entitlements<br> create mode 100644 Example/tvOSExample/tvOSExample.xcodeproj/project.pbxproj<br> create mode 100644 Example/tvOSExample/tvOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata<br> create mode 100644 Example/tvOSExample/tvOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist<br> create mode 100644 Example/tvOSExample/tvOSExample/Info.plist<br> create mode 100644 Example/tvOSExample/tvOSExample/Preview Content/Preview Assets.xcassets/Contents.json<br> create mode 100644 Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/AccentColor.colorset/Contents.json<br> create mode 100644 Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/AppIcon.appiconset/Contents.json<br> create mode 100644 Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/Contents.json<br> create mode 100644 Example/watchOSExample/watchOSExample WatchKit App/Info.plist<br> create mode 100644 Example/watchOSExample/watchOSExample WatchKit Extension/Info.plist<br> create mode 100644 Example/watchOSExample/watchOSExample WatchKit Extension/Preview Content/Preview Assets.xcassets/Contents.json<br> create mode 100644 Example/watchOSExample/watchOSExample.xcodeproj/project.pbxproj<br> create mode 100644 Example/watchOSExample/watchOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata<br> create mode 100644 Example/watchOSExample/watchOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist<br> create mode 100644 Gemfile<br> create mode 100644 InterfaceKit.podspec<br> create mode 100644 InterfaceKit.xcframework.zip<br> create mode 100644 InterfaceKit.xcodeproj/project.pbxproj<br> create mode 100644 InterfaceKit.xcodeproj/project.xcworkspace/contents.xcworkspacedata<br> create mode 100644 InterfaceKit.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist<br> create mode 100644 InterfaceKit.xcodeproj/xcshareddata/xcschemes/InterfaceKit.xcscheme<br> create mode 100644 InterfaceKit.xcworkspace/contents.xcworkspacedata<br> create mode 100644 InterfaceKit.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist<br> create mode 100644 InterfaceKit/Info.plist<br> create mode 100644 InterfaceKit/InterfaceKit.h<br> create mode 100644 InterfaceKitTests/Info.plist<br> create mode 100644 InterfaceKitTests/InterfaceKitTests.swift<br> create mode 100644 LICENSE<br> create mode 100644 LICENSE.md<br> create mode 100644 LICENSE.zh-Hans.md<br> create mode 100644 Package.swift<br> create mode 100644 Pictures/CartfileLocation.png<br> create mode 100644 Pictures/China.png<br> create mode 100644 Pictures/PodfileLocation.png<br> create mode 100644 Pictures/SwiftPackageManager.png<br> create mode 100644 Pictures/add_framework.png<br> create mode 100644 Pictures/copy_files.png<br> create mode 100644 Pictures/drag_framework.png<br> create mode 100644 Pictures/unzip.png<br> create mode 100644 Pictures/use_frameworks.png<br> create mode 100644 Pictures/use_xcframeworks.png<br> create mode 100755 PodfileExample/Podfile<br> create mode 100644 README.md<br> create mode 100644 README.zh-Hans.md<br> create mode 100644 Sources/InterfaceKit/NSInterface.swift<br> create mode 100644 Sources/InterfaceKit/UIInterface.swift<br> create mode 100644 Sources/InterfaceKit/WKInterface.swift<br> create mode 100644 Tests/InterfaceKitTests/InterfaceKitTests.swift<br> create mode 100644 Tests/InterfaceKitTests/XCTestManifests.swift<br> create mode 100644 Tests/LinuxMain.swift<br> create mode 100644 Vision.md<br> create mode 100644 Vision.zh-Hans.md<br> create mode 100644 codecov.yml<br>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git push<br>To https://github.com/adong666666/InterfaceKit.git<br> ! [rejected]        master -&gt; master (fetch first)<br>error: failed to push some refs to <span class="hljs-string">'https://github.com/adong666666/InterfaceKit.git'</span><br>hint: Updates were rejected because the remote contains work that you <span class="hljs-keyword">do</span><br>hint: not have locally. This is usually caused by another repository pushing<br>hint: to the same ref. You may want to first integrate the remote changes<br>hint: (e.g., <span class="hljs-string">'git pull ...'</span>) before pushing again.<br>hint: See the <span class="hljs-string">'Note about fast-forwards'</span> <span class="hljs-keyword">in</span> <span class="hljs-string">'git push --help'</span> <span class="hljs-keyword">for</span> details.<br>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git push -f<br>Enumerating objects: 162, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (162/162), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 16 threads<br>Compressing objects: 100% (145/145), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (162/162), 8.12 MiB | 45.00 KiB/s, <span class="hljs-keyword">done</span>.<br>Total 162 (delta 28), reused 0 (delta 0)<br>remote: Resolving deltas: 100% (28/28), <span class="hljs-keyword">done</span>.<br>To https://github.com/adong666666/InterfaceKit.git<br> + 7d1efa9...a1942f6 master -&gt; master (forced update)<br>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git tag 5.4.0<br>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % git push --tag<br>Total 0 (delta 0), reused 0 (delta 0)<br>To https://github.com/adong666666/InterfaceKit.git<br> * [new tag]         5.4.0 -&gt; 5.4.0<br>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % pod lib lint<br><br> -&gt; InterfaceKit (5.4.0)<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using new build system<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Building targets <span class="hljs-keyword">in</span> parallel<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using codesigning identity override: -<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Planning build<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Constructing build description<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file and one is not being generated automatically. (<span class="hljs-keyword">in</span> target <span class="hljs-string">'App'</span> from project <span class="hljs-string">'App'</span>)<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using codesigning identity override: <br><br>InterfaceKit passed validation.<br>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % pod trunk push InterfaceKit.podspec<br>Updating spec repo `trunk`<br>Validating podspec<br> -&gt; InterfaceKit (5.4.0)<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using new build system<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Building targets <span class="hljs-keyword">in</span> parallel<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using codesigning identity override: -<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Planning build<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Constructing build description<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file and one is not being generated automatically. (<span class="hljs-keyword">in</span> target <span class="hljs-string">'App'</span> from project <span class="hljs-string">'App'</span>)<br>    - NOTE  | [InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more...] xcodebuild:  note: Using codesigning identity override: <br><br>Updating spec repo `trunk`<br><br>--------------------------------------------------------------------------------<br> 🎉  Congrats<br><br> 🚀  InterfaceKit (5.4.0) successfully published<br> 📅  April 30th, 10:04<br> 🌎  https://cocoapods.org/pods/InterfaceKit<br> 👍  Tell your friends!<br>--------------------------------------------------------------------------------<br>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit %       <br></code></pre></td></tr></tbody></table></figure><figure class="highlight stata"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br></pre></td><td class="code"><pre><code class="hljs stata">Last login: Thu Jan 17 17:43:47 <span class="hljs-keyword">on</span> ttys001<br>iMac-2:~ adong666666$ <span class="hljs-keyword">cd</span> CommonUse<br>iMac-2:CommonUse adong666666$ git add .<br>giMac-2:CommonUse adong666666$ git push origin master<br>Everything up-to-date<br>iMac-2:CommonUse adong666666$ git add .<br>iMac-2:CommonUse adong666666$ git commit -<span class="hljs-keyword">m</span> <span class="hljs-string">"fix description"</span><br>[master 7d4ebe8] fix description<br> 1 <span class="hljs-keyword">file</span> changed, 1 insertion(+), 1 deletion(-)<br>iMac-2:CommonUse adong666666$ git push origin masgter<br><span class="hljs-keyword">error</span>: src refspec masgter does not match any.<br><span class="hljs-keyword">error</span>: 推送一些引用到 'https:<span class="hljs-comment">//github.com/adong666666/CommonUse.git' 失败</span><br>iMac-2:CommonUse adong666666$ git push origin master<br>枚举对象: 5, 完成.<br>对象计数中: 100% (5/5), 完成.<br>使用 4 个线程进行压缩<br>压缩对象中: 100% (3/3), 完成.<br>写入对象中: 100% (3/3), 293 bytes | 293.00 KiB/s, 完成.<br>总共 3 （差异 2），复用 0 （差异 0）<br>remote: Resolving deltas: 100% (2/2), completed with 2 <span class="hljs-keyword">local</span> objects.<br>To https:<span class="hljs-comment">//github.com/adong666666/CommonUse.git</span><br>   1618908..7d4ebe8  master -&gt; master<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ git add .<br>iMac-2:CommonUse adong666666$ git commit -<span class="hljs-keyword">m</span> <span class="hljs-string">"fix description"</span><br>[master a7b439f] fix description<br> 1 <span class="hljs-keyword">file</span> changed, 1 insertion(+), 1 deletion(-)<br>iMac-2:CommonUse adong666666$ git push origin master<br>pod <span class="hljs-keyword">l</span>枚举对象: 5, 完成.<br>对象计数中: 100% (5/5), 完成.<br>使用 4 个线程进行压缩<br>压缩对象中: 100% (3/3), 完成.<br>写入对象中: 100% (3/3), 305 bytes | 305.00 KiB/s, 完成.<br>总共 3 （差异 2），复用 0 （差异 0）<br>remote: Resolving deltas: 100% (2/2), completed with 2 <span class="hljs-keyword">local</span> objects.<br> liTo https:<span class="hljs-comment">//github.com/adong666666/CommonUse.git</span><br>   7d4ebe8..a7b439f  master -&gt; master<br>niMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ git add .<br>iMac-2:CommonUse adong666666$ git commit -<span class="hljs-keyword">m</span> <span class="hljs-string">"fix podspec"</span><br>[master 09fbf0d] fix podspec<br> 1 <span class="hljs-keyword">file</span> changed, 1 insertion(+), 1 deletion(-)<br>iMac-2:CommonUse adong666666$ git push origin master<br>枚举对象: 5, 完成.<br>对象计数中: 100% (5/5), 完成.<br>使用 4 个线程进行压缩<br>压缩对象中: 100% (3/3), 完成.<br>写入对象中: 100% (3/3), 299 bytes | 299.00 KiB/s, 完成.<br>总共 3 （差异 2），复用 0 （差异 0）<br>remote: Resolving deltas: 100% (2/2), completed with 2 <span class="hljs-keyword">local</span> objects.<br>To https:<span class="hljs-comment">//github.com/adong666666/CommonUse.git</span><br>   a7b439f..09fbf0d  master -&gt; master<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - WARN  | [iOS] swift: The validator used Swift 3.2 <span class="hljs-keyword">by</span> default because <span class="hljs-keyword">no</span> Swift <span class="hljs-keyword">version</span> was specified. To specify a Swift <span class="hljs-keyword">version</span> during validation, add the `swift_version` attribute <span class="hljs-keyword">in</span> your podspec. <span class="hljs-keyword">Note</span> that usage of the `--swift-<span class="hljs-keyword">version</span>` parameter or a `.swift-<span class="hljs-keyword">version</span>` <span class="hljs-keyword">file</span> is now deprecated.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed <span class="hljs-keyword">in</span> a later <span class="hljs-keyword">version</span> of Xcode. Please migrate <span class="hljs-string">"App"</span> to Swift 4.2 using <span class="hljs-string">"Convert &gt; To Current Swift Syntax…"</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">Edit</span> menu. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed <span class="hljs-keyword">in</span> a later <span class="hljs-keyword">version</span> of Xcode. Please migrate <span class="hljs-string">"CommonUse"</span> to Swift 4.2 using <span class="hljs-string">"Convert &gt; To Current Swift Syntax…"</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">Edit</span> menu. (<span class="hljs-keyword">in</span> target 'CommonUse')<br><br>[!] CommonUse did not pass validation, due to 2 warnings (but you can <span class="hljs-keyword">use</span> `--allow-warnings` to ignore them).<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br>[!] Unable to find a podspec <span class="hljs-keyword">in</span> the working directory<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse.podspec<br>    - <span class="hljs-keyword">ERROR</span> | spec: The specification defined <span class="hljs-keyword">in</span> `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.<br><br><br>[!] Invalid `CommonUse.podspec` <span class="hljs-keyword">file</span>: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting =&gt;<br>...source_files  = {'CommonUse.<span class="hljs-keyword">h</span>','UIColor-extension.swift','<span class="hljs-keyword">in</span>...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...<span class="hljs-keyword">e</span>.<span class="hljs-keyword">h</span>','UIColor-extension.swift','info.plist','README.md','FIL...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...-extension.swift','info.plist','README.md','FILE_LICENSE','C...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...wift','info.plist','README.md','FILE_LICENSE','CommonUse.pod...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...<span class="hljs-keyword">st</span>','README.md','FILE_LICENSE','CommonUse.podspec'}<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected '}', expecting keyword_end.<br><br> #  from /Users/adong666666/CommonUse/CommonUse.podspec:94<br> #  -------------------------------------------<br> #  <br> &gt;    s.source_files  = {'CommonUse.<span class="hljs-keyword">h</span>','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE','CommonUse.podspec'}<br> #    #s.exclude_files = <span class="hljs-string">"Classes/Exclude"</span><br> #  -------------------------------------------<br><br><br>[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 <span class="hljs-keyword">error</span>.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse.podspec<br>    - <span class="hljs-keyword">ERROR</span> | spec: The specification defined <span class="hljs-keyword">in</span> `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.<br><br><br>[!] Invalid `CommonUse.podspec` <span class="hljs-keyword">file</span>: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting =&gt;<br>...source_files  = {'CommonUse.<span class="hljs-keyword">h</span>','UIColor-extension.swift','<span class="hljs-keyword">in</span>...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...<span class="hljs-keyword">e</span>.<span class="hljs-keyword">h</span>','UIColor-extension.swift','info.plist','README.md','FIL...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...-extension.swift','info.plist','README.md','FILE_LICENSE'}<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...wift','info.plist','README.md','FILE_LICENSE'}<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected '}', expecting keyword_end.<br><br> #  from /Users/adong666666/CommonUse/CommonUse.podspec:94<br> #  -------------------------------------------<br> #  <br> &gt;    s.source_files  = {'CommonUse.<span class="hljs-keyword">h</span>','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE'}<br> #    #s.exclude_files = <span class="hljs-string">"Classes/Exclude"</span><br> #  -------------------------------------------<br><br><br>[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 <span class="hljs-keyword">error</span>.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse.podspec<br>    - <span class="hljs-keyword">ERROR</span> | spec: The specification defined <span class="hljs-keyword">in</span> `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.<br><br><br>[!] Invalid `CommonUse.podspec` <span class="hljs-keyword">file</span>: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting =&gt;<br>...source_files  = {'CommonUse.<span class="hljs-keyword">h</span>','UIColor-extension.swift','<span class="hljs-keyword">in</span>...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...<span class="hljs-keyword">e</span>.<span class="hljs-keyword">h</span>','UIColor-extension.swift','info.plist','README.md','FIL...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...-extension.swift','info.plist','README.md','FILE_LICENSE'}<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...wift','info.plist','README.md','FILE_LICENSE'}<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected '}', expecting keyword_end.<br><br> #  from /Users/adong666666/CommonUse/CommonUse.podspec:94<br> #  -------------------------------------------<br> #  <br> &gt;    s.source_files  = {'CommonUse.<span class="hljs-keyword">h</span>','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE'}<br> #    #s.exclude_files = <span class="hljs-string">"Classes/Exclude"</span><br> #  -------------------------------------------<br><br><br>[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 <span class="hljs-keyword">error</span>.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse.podspec<br>    - <span class="hljs-keyword">ERROR</span> | spec: The specification defined <span class="hljs-keyword">in</span> `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.<br><br><br>[!] Invalid `CommonUse.podspec` <span class="hljs-keyword">file</span>: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting =&gt;<br>...source_files  = {<span class="hljs-string">"CommonUse.h"</span>,<span class="hljs-string">"UIColor-extension.swift"</span>,"<span class="hljs-keyword">in</span>...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...<span class="hljs-keyword">e</span>.<span class="hljs-keyword">h</span><span class="hljs-string">","</span>UIColor-extension.swift<span class="hljs-string">","</span>info.plist<span class="hljs-string">","</span>README.md<span class="hljs-string">","</span>FIL...<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...-extension.swift<span class="hljs-string">","</span>info.plist<span class="hljs-string">","</span>README.md<span class="hljs-string">","</span>FILE_LICENSE"}<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected ',', expecting keyword_end<br>...wift<span class="hljs-string">","</span>info.plist<span class="hljs-string">","</span>README.md<span class="hljs-string">","</span>FILE_LICENSE"}<br>...                               ^<br>/Users/adong666666/CommonUse/CommonUse.podspec:94: <span class="hljs-keyword">syntax</span> <span class="hljs-keyword">error</span>, unexpected '}', expecting keyword_end.<br><br> #  from /Users/adong666666/CommonUse/CommonUse.podspec:94<br> #  -------------------------------------------<br> #  <br> &gt;    s.source_files  = {<span class="hljs-string">"CommonUse.h"</span>,<span class="hljs-string">"UIColor-extension.swift"</span>,<span class="hljs-string">"info.plist"</span>,<span class="hljs-string">"README.md"</span>,<span class="hljs-string">"FILE_LICENSE"</span>}<br> #    #s.exclude_files = <span class="hljs-string">"Classes/Exclude"</span><br> #  -------------------------------------------<br><br><br>[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 <span class="hljs-keyword">error</span>.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - WARN  | [iOS] swift: The validator used Swift 3.2 <span class="hljs-keyword">by</span> default because <span class="hljs-keyword">no</span> Swift <span class="hljs-keyword">version</span> was specified. To specify a Swift <span class="hljs-keyword">version</span> during validation, add the `swift_version` attribute <span class="hljs-keyword">in</span> your podspec. <span class="hljs-keyword">Note</span> that usage of the `--swift-<span class="hljs-keyword">version</span>` parameter or a `.swift-<span class="hljs-keyword">version</span>` <span class="hljs-keyword">file</span> is now deprecated.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] xcodebuild: Returned <span class="hljs-keyword">an</span> unsuccessful <span class="hljs-keyword">exit</span> code. You can <span class="hljs-keyword">use</span> `--verbose` <span class="hljs-keyword">for</span> <span class="hljs-keyword">more</span> information.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed <span class="hljs-keyword">in</span> a later <span class="hljs-keyword">version</span> of Xcode. Please migrate <span class="hljs-string">"App"</span> to Swift 4.2 using <span class="hljs-string">"Convert &gt; To Current Swift Syntax…"</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">Edit</span> menu. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: <span class="hljs-keyword">no</span> rule to process <span class="hljs-keyword">file</span> '/Users/adong666666/CommonUse/FILE_LICENSE' of <span class="hljs-keyword">type</span> 'text' <span class="hljs-keyword">for</span> architecture 'i386' (<span class="hljs-keyword">in</span> target 'CommonUse')<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: <span class="hljs-keyword">no</span> rule to process <span class="hljs-keyword">file</span> '/Users/adong666666/CommonUse/README.md' of <span class="hljs-keyword">type</span> '<span class="hljs-keyword">net</span>.daringfireball.markdown' <span class="hljs-keyword">for</span> architecture 'i386' (<span class="hljs-keyword">in</span> target 'CommonUse')<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed <span class="hljs-keyword">in</span> a later <span class="hljs-keyword">version</span> of Xcode. Please migrate <span class="hljs-string">"CommonUse"</span> to Swift 4.2 using <span class="hljs-string">"Convert &gt; To Current Swift Syntax…"</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">Edit</span> menu. (<span class="hljs-keyword">in</span> target 'CommonUse')<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: <span class="hljs-keyword">no</span> rule to process <span class="hljs-keyword">file</span> '/Users/adong666666/CommonUse/FILE_LICENSE' of <span class="hljs-keyword">type</span> 'text' <span class="hljs-keyword">for</span> architecture 'x86_64' (<span class="hljs-keyword">in</span> target 'CommonUse')<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: <span class="hljs-keyword">no</span> rule to process <span class="hljs-keyword">file</span> '/Users/adong666666/CommonUse/README.md' of <span class="hljs-keyword">type</span> '<span class="hljs-keyword">net</span>.daringfireball.markdown' <span class="hljs-keyword">for</span> architecture 'x86_64' (<span class="hljs-keyword">in</span> target 'CommonUse')<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: duplicate output <span class="hljs-keyword">file</span> '/Users/adong666666/Library/Developer/Xcode/DerivedData/<span class="hljs-keyword">App</span>-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist' <span class="hljs-keyword">on</span> task: ProcessInfoPlistFile /Users/adong666666/Library/Developer/Xcode/DerivedData/<span class="hljs-keyword">App</span>-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist Target Support Files/CommonUse/Info.plist (<span class="hljs-keyword">in</span> target 'CommonUse')<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">error</span>: Multiple commands produce '/Users/adong666666/Library/Developer/Xcode/DerivedData/<span class="hljs-keyword">App</span>-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist':<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 2 warnings.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">ERROR</span> | [iOS] <span class="hljs-keyword">file</span> patterns: The `source_files` pattern did not match any <span class="hljs-keyword">file</span>.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 <span class="hljs-keyword">error</span> and 1 warning.<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - WARN  | [iOS] swift: The validator used Swift 3.2 <span class="hljs-keyword">by</span> default because <span class="hljs-keyword">no</span> Swift <span class="hljs-keyword">version</span> was specified. To specify a Swift <span class="hljs-keyword">version</span> during validation, add the `swift_version` attribute <span class="hljs-keyword">in</span> your podspec. <span class="hljs-keyword">Note</span> that usage of the `--swift-<span class="hljs-keyword">version</span>` parameter or a `.swift-<span class="hljs-keyword">version</span>` <span class="hljs-keyword">file</span> is now deprecated.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed <span class="hljs-keyword">in</span> a later <span class="hljs-keyword">version</span> of Xcode. Please migrate <span class="hljs-string">"App"</span> to Swift 4.2 using <span class="hljs-string">"Convert &gt; To Current Swift Syntax…"</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">Edit</span> menu. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed <span class="hljs-keyword">in</span> a later <span class="hljs-keyword">version</span> of Xcode. Please migrate <span class="hljs-string">"CommonUse"</span> to Swift 4.2 using <span class="hljs-string">"Convert &gt; To Current Swift Syntax…"</span> <span class="hljs-keyword">in</span> the <span class="hljs-keyword">Edit</span> menu. (<span class="hljs-keyword">in</span> target 'CommonUse')<br><br>[!] CommonUse did not pass validation, due to 2 warnings (but you can <span class="hljs-keyword">use</span> `--allow-warnings` to ignore them).<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - WARN  | summary: The summary is not meaningful.<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] CommonUse did not pass validation, due to 1 warning (but you can <span class="hljs-keyword">use</span> `--allow-warnings` to ignore it).<br>You can <span class="hljs-keyword">use</span> the `--<span class="hljs-keyword">no</span>-clean` option to <span class="hljs-keyword">inspect</span> any issue.<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.1)<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>CommonUse passed validation.<br>iMac-2:CommonUse adong666666$ pod trunk push Common.podspec <br>[!] The specified path `Common.podspec` does not point to <span class="hljs-keyword">an</span> existing podspec <span class="hljs-keyword">file</span>.<br><br>Usage:<br><br>    $ pod trunk push [PATH]<br><br>      Publish the podspec at `PATH` to make it available to all users of the<br>      ‘master’ spec-repo. <span class="hljs-keyword">If</span> `PATH` is not provided, defaults to the current<br>      directory.<br><br>      Before pushing the podspec to cocoapods.org, this will perform a <span class="hljs-keyword">local</span><br>      lint of the podspec, including a build of the library. However, it remains<br><span class="hljs-comment">      *your* responsibility to ensure that the published podspec will actually</span><br>      work <span class="hljs-keyword">for</span> your users. Thus it is recommended that you *first* try to <span class="hljs-keyword">use</span><br>      the podspec to integrate the library into your demo and/or real<br>      application.<br><br>      <span class="hljs-keyword">If</span> this is the first time you publish a spec <span class="hljs-keyword">for</span> this pod, you will<br>      automatically be registered <span class="hljs-keyword">as</span> the ‘owner’ of this pod. (<span class="hljs-keyword">Note</span> that ‘owner’<br>      <span class="hljs-keyword">in</span> this case implies a person that is allowed to publish new versions and<br>      add other ‘owners’, not necessarily the library author.)<br><br>Options:<br><br>    --allow-warnings           Allows push even <span class="hljs-keyword">if</span> there are lint warnings<br>    --<span class="hljs-keyword">use</span>-libraries            Linter uses static libraries to install the spec<br>    --swift-<span class="hljs-keyword">version</span>=<span class="hljs-keyword">VERSION</span>    The SWIFT_VERSION that should be used to lint the<br>                               spec. This takes precedence over a .swift-<span class="hljs-keyword">version</span><br>                               <span class="hljs-keyword">file</span>.<br>    --skip-import-validation   Lint skips validating that the pod can be<br>                               imported<br>    --skip-tests               Lint skips building and running tests during<br>                               validation<br>    --silent                   Show nothing<br>    --verbose                  Show <span class="hljs-keyword">more</span> debugging information<br>    --<span class="hljs-keyword">no</span>-ansi                  Show output without ANSI codes<br>    --<span class="hljs-keyword">help</span>                     Show <span class="hljs-keyword">help</span> banner of specified command<br>iMac-2:CommonUse adong666666$ pod trunk push CommonUse.podspec <br>Updating spec repo `master`<br><br>CocoaPods 1.6.0.beta.2 is available.<br>To <span class="hljs-keyword">update</span> <span class="hljs-keyword">use</span>: `sudo gem install cocoapods --pre`<br>[!] This is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">version</span> we'<span class="hljs-keyword">d</span> love you to try.<br><br><span class="hljs-keyword">For</span> <span class="hljs-keyword">more</span> information, see https:<span class="hljs-comment">//blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2</span><br><br>Validating podspec<br> -&gt; CommonUse (0.0.1)<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>[!] Unable to accept duplicate entry <span class="hljs-keyword">for</span>: CommonUse (0.0.1)<br>iMac-2:CommonUse adong666666$ pod lib lint<br><br> -&gt; CommonUse (0.0.3)<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>CommonUse passed validation.<br>iMac-2:CommonUse adong666666$ pod trunk push CommonUse.podspec<br>Updating spec repo `master`<br><br>CocoaPods 1.6.0.beta.2 is available.<br>To <span class="hljs-keyword">update</span> <span class="hljs-keyword">use</span>: `sudo gem install cocoapods --pre`<br>[!] This is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">version</span> we'<span class="hljs-keyword">d</span> love you to try.<br><br><span class="hljs-keyword">For</span> <span class="hljs-keyword">more</span> information, see https:<span class="hljs-comment">//blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2</span><br><br>Validating podspec<br> -&gt; CommonUse (0.0.3)<br>    - <span class="hljs-keyword">NOTE</span>  | xcodebuild:  <span class="hljs-keyword">note</span>: Using new build system<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Planning build<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  <span class="hljs-keyword">note</span>: Constructing build description<br>    - <span class="hljs-keyword">NOTE</span>  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have <span class="hljs-keyword">an</span> Info.plist <span class="hljs-keyword">file</span>. (<span class="hljs-keyword">in</span> target '<span class="hljs-keyword">App</span>')<br><br>Updating spec repo `master`<br><br>CocoaPods 1.6.0.beta.2 is available.<br>To <span class="hljs-keyword">update</span> <span class="hljs-keyword">use</span>: `sudo gem install cocoapods --pre`<br>[!] This is a <span class="hljs-keyword">test</span> <span class="hljs-keyword">version</span> we'<span class="hljs-keyword">d</span> love you to try.<br><br><span class="hljs-keyword">For</span> <span class="hljs-keyword">more</span> information, see https:<span class="hljs-comment">//blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2</span><br><br><br>--------------------------------------------------------------------------------<br> 🎉  Congrats<br><br> 🚀  CommonUse (0.0.3) successfully published<br> 📅  January 17th, 06:01<br> 🌎  https:<span class="hljs-comment">//cocoapods.org/pods/CommonUse</span><br> 👍  Tell your friends!<br>--------------------------------------------------------------------------------<br>iMac-2:CommonUse adong666666$ <br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>cocoapods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将framework提交至cocoapods摘录</title>
    <link href="/posts/61504.html"/>
    <url>/posts/61504.html</url>
    
    <content type="html"><![CDATA[<h1 id="将framework提交至cocoapods摘录"><a href="#将framework提交至cocoapods摘录" class="headerlink" title="将framework提交至cocoapods摘录"></a>将framework提交至cocoapods摘录</h1><p>========================<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%B6%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84cocoapods%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.jpg"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%982.jpg"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%981.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>移动开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iOS</tag>
      
      <tag>framework</tag>
      
      <tag>cocoapods</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/16107.html"/>
    <url>/posts/16107.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>脚本语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>博文</tag>
      
      <tag>hexo</tag>
      
      <tag>ejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
